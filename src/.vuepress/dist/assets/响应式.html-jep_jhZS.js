import{_ as t}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as o,f as i,o as c}from"./app-DokaGNO4.js";const r={};function l(d,e){return c(),o("div",null,e[0]||(e[0]=[i("<p><strong>响应式系统</strong></p><p><strong>定义</strong>：响应式系统是指 Vue.js 内部通过数据劫持（使用 Object.defineProperty 在 Vue 2 中，使用 Proxy 在 Vue 3 中）实现的一种机制，使得数据的变化能够自动更新视图。</p><p><code>ref</code> 和 <code>reactive</code> 都是 Vue 3 中用于创建响应式数据的函数，但它们有一些重要的区别：</p><ol><li>数据类型： <ul><li><code>ref</code>：主要用于基本类型数据（如 string, number, boolean），但也可以持有对象或数组。</li><li><code>reactive</code>：专门用于对象（包括数组）。</li></ul></li><li>访问和修改： <ul><li><code>ref</code>：需要通过 <code>.value</code> 属性访问或修改值（在模板中例外，可以直接使用）。</li><li><code>reactive</code>：直接访问和修改属性，不需要 <code>.value</code>。</li></ul></li><li>解构： <ul><li><code>ref</code>：解构后仍然保持响应性。</li><li><code>reactive</code>：解构会失去响应性，需要配合 <code>reactive</code>0 使用才能保持响应性。</li></ul></li><li>使用场景： <ul><li><code>reactive</code>1：适合单个值的响应式引用。</li><li><code>reactive</code>2：适合复杂数据结构（如对象、数组）。</li></ul></li><li>模板中的使用： <ul><li><code>reactive</code>3：在模板中可以直接使用，不需要 <code>reactive</code>4。</li><li><code>reactive</code>5：在模板中直接使用对象的属性。</li></ul></li><li>类型推断： <ul><li><code>reactive</code>6：在 TypeScript 中可以更容易地进行类型推断。</li><li><code>reactive</code>7：对象的类型推断可能更复杂。</li></ul></li></ol>",4)]))}const p=t(r,[["render",l],["__file","响应式.html.vue"]]),u=JSON.parse('{"path":"/2%20%E7%AC%AC%E4%BA%8C%E5%A4%A7%E8%84%91/1%20%E8%8A%82%E7%82%B9/CS/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B/%E5%89%8D%E7%AB%AF/vue/%E5%93%8D%E5%BA%94%E5%BC%8F.html","title":"响应式","lang":"zh-CN","frontmatter":{"draw":null,"tags":[],"title":"响应式","date created":"2024-06-24T00:00:00.000Z","date modified":"2024-11-12T00:00:00.000Z","description":"响应式系统 定义：响应式系统是指 Vue.js 内部通过数据劫持（使用 Object.defineProperty 在 Vue 2 中，使用 Proxy 在 Vue 3 中）实现的一种机制，使得数据的变化能够自动更新视图。 ref 和 reactive 都是 Vue 3 中用于创建响应式数据的函数，但它们有一些重要的区别： 数据类型： ref：主要用于...","head":[["meta",{"property":"og:url","content":"https://vuepress-theme-hope-docs-demo.netlify.app/2%20%E7%AC%AC%E4%BA%8C%E5%A4%A7%E8%84%91/1%20%E8%8A%82%E7%82%B9/CS/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B/%E5%89%8D%E7%AB%AF/vue/%E5%93%8D%E5%BA%94%E5%BC%8F.html"}],["meta",{"property":"og:site_name","content":"转了码的刘公子"}],["meta",{"property":"og:title","content":"响应式"}],["meta",{"property":"og:description","content":"响应式系统 定义：响应式系统是指 Vue.js 内部通过数据劫持（使用 Object.defineProperty 在 Vue 2 中，使用 Proxy 在 Vue 3 中）实现的一种机制，使得数据的变化能够自动更新视图。 ref 和 reactive 都是 Vue 3 中用于创建响应式数据的函数，但它们有一些重要的区别： 数据类型： ref：主要用于..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-11-24T17:46:49.000Z"}],["meta",{"property":"article:modified_time","content":"2024-11-24T17:46:49.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"响应式\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-11-24T17:46:49.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"转了码的刘公子\\",\\"url\\":\\"https://mister-hope.com\\"}]}"]]},"headers":[],"git":{"createdTime":1732465042000,"updatedTime":1732470409000,"contributors":[{"name":"Luis","email":"liuysh20@gmail.com","commits":2}]},"readingTime":{"minutes":1.13,"words":340},"filePathRelative":"2 第二大脑/1 节点/CS/软件工程/前端/vue/响应式.md","localizedDate":"2024年11月25日","autoDesc":true}');export{p as comp,u as data};
