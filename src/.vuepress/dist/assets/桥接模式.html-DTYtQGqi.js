import{_ as i}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as t,a,g as o,f as c,o as n}from"./app-DokaGNO4.js";const g={};function p(s,e){return n(),t("div",null,[e[0]||(e[0]=a("p",null,"双维度的任意组合是桥接模式的奥义所在。",-1)),o(" more "),e[1]||(e[1]=c('<h2 id="场景" tabindex="-1"><a class="header-anchor" href="#场景"><span>场景</span></a></h2><ol><li>QFC 流量日历中，有开始扩容，扩容完成等四种类型的消息，需要分别通过 qt 和 email 通知相关人员</li><li>Java数据库连接库JDBC用到哪种设计模式? 桥接模式是结构型模式，关注点在依赖关系的维护。对于jdbc技术来说，它解耦了业务与数据库通信协议这两个纬度之间的关系，所以这两个纬度之间的关系就需要一个桥，即Driver，至于DriverManager把这个关系接到哪里就是运行时的事情了。 <ol><li>微观上，从connection的创建来看，它更像一个抽象工厂模式，特定的Driver创建对应的connection。</li><li>宏观上，从业务代码与connection的关系来看，关键点在于一个sql怎么转化为对应的通信协议，就属于桥接。</li></ol></li></ol><h2 id="实现" tabindex="-1"><a class="header-anchor" href="#实现"><span>实现</span></a></h2><p>用 super 实现灵活绑定，Notification 类相当于抽象，Channel 类相当于实现，两者可以独立开发，通过组合关系（也就是桥梁）任意组合在一起。所谓任意组合的意思就是，不同紧急程度的消息和发送渠道之间的对应关系，不是在代码中固定写死的，我们可以动态地去指定（比如读取配置） <img src="https://imagehosting4picgo.oss-cn-beijing.aliyuncs.com/imagehosting/fix-dir%2Fpicgo%2Fpicgo-clipboard-images%2F2024%2F05%2F09%2F23-12-30-1113d0780e734205c59018843c39c7df-20240509231229-d73ff5.png" alt="image.png|1000" loading="lazy"><br><img src="https://imagehosting4picgo.oss-cn-beijing.aliyuncs.com/imagehosting/fix-dir%2Fpicgo%2Fpicgo-clipboard-images%2F2024%2F05%2F09%2F23-12-34-44f0a8835f6264ef7b29a2023a25246e-20240509231233-286dd6.png" alt="image.png|1000" loading="lazy"><br><img src="https://imagehosting4picgo.oss-cn-beijing.aliyuncs.com/imagehosting/fix-dir%2Fpicgo%2Fpicgo-clipboard-images%2F2024%2F05%2F09%2F23-12-40-da319eba869de325e68ec51603376eca-20240509231240-7683cf.png" alt="image.png|1000" loading="lazy"><br><img src="https://imagehosting4picgo.oss-cn-beijing.aliyuncs.com/imagehosting/fix-dir%2Fpicgo%2Fpicgo-clipboard-images%2F2024%2F05%2F09%2F23-12-37-b34725fe364f35a1f08eaa8bebea76fc-20240509231236-b1820d.png" alt="image.png|1000" loading="lazy"></p>',4))])}const m=i(g,[["render",p],["__file","桥接模式.html.vue"]]),d=JSON.parse('{"path":"/2%20%E7%AC%AC%E4%BA%8C%E5%A4%A7%E8%84%91/1%20%E8%8A%82%E7%82%B9/CS/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/%E6%A1%A5%E6%8E%A5%E6%A8%A1%E5%BC%8F.html","title":"桥接模式","lang":"zh-CN","frontmatter":{"draw":null,"title":"桥接模式","tags":["1 Dev","信息革命","设计模式"],"date created":"2024-05-08T00:00:00.000Z","date modified":"2024-11-12T00:00:00.000Z","description":"双维度的任意组合是桥接模式的奥义所在。 场景 QFC 流量日历中，有开始扩容，扩容完成等四种类型的消息，需要分别通过 qt 和 email 通知相关人员 Java数据库连接库JDBC用到哪种设计模式? 桥接模式是结构型模式，关注点在依赖关系的维护。对于jdbc技术来说，它解耦了业务与数据库通信协议这两个纬度之间的关系，所以这两个纬度之间的关系就需要一个...","head":[["meta",{"property":"og:url","content":"https://vuepress-theme-hope-docs-demo.netlify.app/2%20%E7%AC%AC%E4%BA%8C%E5%A4%A7%E8%84%91/1%20%E8%8A%82%E7%82%B9/CS/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/%E6%A1%A5%E6%8E%A5%E6%A8%A1%E5%BC%8F.html"}],["meta",{"property":"og:site_name","content":"转了码的刘公子"}],["meta",{"property":"og:title","content":"桥接模式"}],["meta",{"property":"og:description","content":"双维度的任意组合是桥接模式的奥义所在。 场景 QFC 流量日历中，有开始扩容，扩容完成等四种类型的消息，需要分别通过 qt 和 email 通知相关人员 Java数据库连接库JDBC用到哪种设计模式? 桥接模式是结构型模式，关注点在依赖关系的维护。对于jdbc技术来说，它解耦了业务与数据库通信协议这两个纬度之间的关系，所以这两个纬度之间的关系就需要一个..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://imagehosting4picgo.oss-cn-beijing.aliyuncs.com/imagehosting/fix-dir%2Fpicgo%2Fpicgo-clipboard-images%2F2024%2F05%2F09%2F23-12-30-1113d0780e734205c59018843c39c7df-20240509231229-d73ff5.png"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-11-24T16:17:22.000Z"}],["meta",{"property":"article:tag","content":"1 Dev"}],["meta",{"property":"article:tag","content":"信息革命"}],["meta",{"property":"article:tag","content":"设计模式"}],["meta",{"property":"article:modified_time","content":"2024-11-24T16:17:22.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"桥接模式\\",\\"image\\":[\\"https://imagehosting4picgo.oss-cn-beijing.aliyuncs.com/imagehosting/fix-dir%2Fpicgo%2Fpicgo-clipboard-images%2F2024%2F05%2F09%2F23-12-30-1113d0780e734205c59018843c39c7df-20240509231229-d73ff5.png\\",\\"https://imagehosting4picgo.oss-cn-beijing.aliyuncs.com/imagehosting/fix-dir%2Fpicgo%2Fpicgo-clipboard-images%2F2024%2F05%2F09%2F23-12-34-44f0a8835f6264ef7b29a2023a25246e-20240509231233-286dd6.png\\",\\"https://imagehosting4picgo.oss-cn-beijing.aliyuncs.com/imagehosting/fix-dir%2Fpicgo%2Fpicgo-clipboard-images%2F2024%2F05%2F09%2F23-12-40-da319eba869de325e68ec51603376eca-20240509231240-7683cf.png\\",\\"https://imagehosting4picgo.oss-cn-beijing.aliyuncs.com/imagehosting/fix-dir%2Fpicgo%2Fpicgo-clipboard-images%2F2024%2F05%2F09%2F23-12-37-b34725fe364f35a1f08eaa8bebea76fc-20240509231236-b1820d.png\\"],\\"dateModified\\":\\"2024-11-24T16:17:22.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"转了码的刘公子\\",\\"url\\":\\"https://mister-hope.com\\"}]}"]]},"headers":[{"level":2,"title":"场景","slug":"场景","link":"#场景","children":[]},{"level":2,"title":"实现","slug":"实现","link":"#实现","children":[]}],"git":{"createdTime":1732465042000,"updatedTime":1732465042000,"contributors":[{"name":"Luis","email":"liuysh20@gmail.com","commits":1}]},"readingTime":{"minutes":1.53,"words":459},"filePathRelative":"2 第二大脑/1 节点/CS/软件工程/设计模式/桥接模式.md","localizedDate":"2024年11月25日","autoDesc":true}');export{m as comp,d as data};
