import{_ as s}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as a,f as e,o as t}from"./app-DokaGNO4.js";const l={};function n(p,i){return t(),a("div",null,i[0]||(i[0]=[e(`<h2 id="a-kernel-page-table-per-process-hard" tabindex="-1"><a class="header-anchor" href="#a-kernel-page-table-per-process-hard"><span>## A kernel page table per process (<a href="https://pdos.csail.mit.edu/6.S081/2020/labs/guidance.html" target="_blank" rel="noopener noreferrer">hard</a>)</span></a></h2><h3 id="为什么要对进程的页表做四次映射" tabindex="-1"><a class="header-anchor" href="#为什么要对进程的页表做四次映射"><span>为什么要对进程的页表做四次映射</span></a></h3><div class="language-c line-numbers-mode" data-highlighter="shiki" data-ext="c" data-title="c" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">  kvmmapkern</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">pagetable</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;"> UART0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;"> UART0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;"> PGSIZE</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;"> PTE_R </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">|</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;"> PTE_W</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">);</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">  kvmmapkern</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">pagetable</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;"> VIRTIO0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;"> VIRTIO0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;"> PGSIZE</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;"> PTE_R </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">|</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;"> PTE_W</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">);</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">  kvmmapkern</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">pagetable</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;"> CLINT</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;"> CLINT</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span><span style="--shiki-light:#986801;--shiki-dark:#E06C75;"> 0x</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">10000</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;"> PTE_R </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">|</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;"> PTE_W</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">);</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">  kvmmapkern</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">pagetable</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;"> PLIC</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;"> PLIC</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span><span style="--shiki-light:#986801;--shiki-dark:#E06C75;"> 0x</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">400000</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;"> PTE_R </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">|</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;"> PTE_W</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">  return</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> pagetable;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>这四次映射是为了让进程能访问不同的硬件设备，每个映射对应一个不同的设备： UART0 (Universal Asynchronous Receiver/Transmitter) kvmmapkern(pagetable, UART0, UART0, PGSIZE, PTE_R | PTE_W); 串口通信设备 用于控制台输入输出 比如 printf 就需要通过 UART 输出</p><p>VIRTIO0 kvmmapkern(pagetable, VIRTIO0, VIRTIO0, PGSIZE, PTE_R | PTE_W); 虚拟 I/O 设备接口 用于磁盘操作 比如文件读写需要通过这个接口</p><p>CLINT (Core Local Interruptor) kvmmapkern(pagetable, CLINT, CLINT, 0x10000, PTE_R | PTE_W);</p><ul><li>处理器本地中断控制器 用于定时器中断 比如进程调度需要用到</li></ul><p>PLIC (Platform-Level Interrupt Controller) kvmmapkern(pagetable, PLIC, PLIC, 0x400000, PTE_R | PTE_W); 平台级中断控制器 处理外部设备中断 比如键盘、磁盘等设备的中断</p><p>这些映射是必需的，因为：</p><ol><li>每个设备都有其特定的物理地址</li><li>内核需要通过这些地址访问设备</li><li>没有这些映射，内核就无法与设备通信</li></ol><p>就像一个城市需要：</p><ul><li>港口（UART）用于对外通信</li><li>仓库（VIRTIO）用于存储</li><li>警报系统（CLINT）用于定时</li><li>交通控制（PLIC）用于协调 每个设备都有其特定用途，缺一不可。</li></ul>`,12)]))}const r=s(l,[["render",n],["__file","Lab3 Page tables.html.vue"]]),d=JSON.parse('{"path":"/1%20%E4%B8%80%E5%88%87%E7%9A%86%E9%A1%B9%E7%9B%AE/Q2%EF%BC%9A%E5%81%9ACS%E7%9A%84%E7%BB%8F%E5%85%B8lab/MIT%206.828/lab/Lab3%20Page%20tables.html","title":"","lang":"zh-CN","frontmatter":{"description":"## A kernel page table per process (hard) 为什么要对进程的页表做四次映射 这四次映射是为了让进程能访问不同的硬件设备，每个映射对应一个不同的设备： UART0 (Universal Asynchronous Receiver/Transmitter) kvmmapkern(pagetable, UART0, U...","head":[["meta",{"property":"og:url","content":"https://vuepress-theme-hope-docs-demo.netlify.app/1%20%E4%B8%80%E5%88%87%E7%9A%86%E9%A1%B9%E7%9B%AE/Q2%EF%BC%9A%E5%81%9ACS%E7%9A%84%E7%BB%8F%E5%85%B8lab/MIT%206.828/lab/Lab3%20Page%20tables.html"}],["meta",{"property":"og:site_name","content":"转了码的刘公子"}],["meta",{"property":"og:description","content":"## A kernel page table per process (hard) 为什么要对进程的页表做四次映射 这四次映射是为了让进程能访问不同的硬件设备，每个映射对应一个不同的设备： UART0 (Universal Asynchronous Receiver/Transmitter) kvmmapkern(pagetable, UART0, U..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-12-27T06:52:25.000Z"}],["meta",{"property":"article:modified_time","content":"2024-12-27T06:52:25.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-12-27T06:52:25.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"转了码的刘公子\\",\\"url\\":\\"https://mister-hope.com\\"}]}"]]},"headers":[{"level":2,"title":"## A kernel page table per process (hard)","slug":"a-kernel-page-table-per-process-hard","link":"#a-kernel-page-table-per-process-hard","children":[{"level":3,"title":"为什么要对进程的页表做四次映射","slug":"为什么要对进程的页表做四次映射","link":"#为什么要对进程的页表做四次映射","children":[]}]}],"git":{"createdTime":1735282345000,"updatedTime":1735282345000,"contributors":[{"name":"Luis","email":"liuysh20@gmail.com","commits":1}]},"readingTime":{"minutes":1.18,"words":353},"filePathRelative":"1 一切皆项目/Q2：做CS的经典lab/MIT 6.828/lab/Lab3 Page tables.md","localizedDate":"2024年12月27日","autoDesc":true}');export{r as comp,d as data};
