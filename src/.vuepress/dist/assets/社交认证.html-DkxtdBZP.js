import{_ as i}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as s,f as n,o as t}from"./app-DokaGNO4.js";const a={};function l(p,e){return t(),s("div",null,e[0]||(e[0]=[n(`<p>OAuth 2.0 是一个开放标准的授权协议，允许用户授权第三方应用访问他们在某个服务提供商上的受保护资源，而无需将自己的凭证直接提供给第三方应用。</p><div class="language-mermaid line-numbers-mode" data-highlighter="shiki" data-ext="mermaid" data-title="mermaid" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">sequenceDiagram</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    participant User</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    participant Frontend</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    participant Google</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    participant Backend</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    User-&gt;&gt;Frontend: 点击&quot;使用Google登录&quot;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    Frontend-&gt;&gt;Google: 请求认证</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    Google-&gt;&gt;User: 显示登录/授权页面</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    User-&gt;&gt;Google: 登录并授权</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    Google-&gt;&gt;Frontend: 返回ID token</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    Frontend-&gt;&gt;Backend: 发送ID token</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    Backend-&gt;&gt;Google: 验证ID token</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    Google-&gt;&gt;Backend: 确认token有效</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    Backend-&gt;&gt;Frontend: 创建会话，返回自定义token或session</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    Frontend-&gt;&gt;User: 显示登录成功</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>这种登录交互方式属于 OAuth 2.0 和 OpenID Connect (OIDC) 技术的应用，特别是 &quot; 使用 Google 登录 &quot; 这种情况。让我为您详细解释一下：</p><ol><li>OAuth 2.0：这是一个授权框架，允许第三方应用获取对用户资源的有限访问权，而无需知道用户的凭据。</li><li>OpenID Connect (OIDC)：这是建立在 OAuth 2.0 之上的身份层，增加了身份验证功能。它允许客户端应用基于授权服务器执行的身份验证来验证最终用户的身份。</li></ol><p>在您描述的流程中，我们可以看到典型的 OAuth 2.0 + OIDC 流程，具体是 &quot; 授权码流程 &quot;（Authorization Code Flow）:</p>`,5)]))}const d=i(a,[["render",l],["__file","社交认证.html.vue"]]),c=JSON.parse('{"path":"/1%20%E4%B8%80%E5%88%87%E7%9A%86%E9%A1%B9%E7%9B%AE/Q3%EF%BC%9AViva/viva/%E5%90%8E%E7%AB%AF/%E7%A4%BE%E4%BA%A4%E8%AE%A4%E8%AF%81.html","title":"社交认证","lang":"zh-CN","frontmatter":{"draw":null,"tags":[],"title":"社交认证","date created":"2024-10-02T00:00:00.000Z","date modified":"2024-11-12T00:00:00.000Z","description":"OAuth 2.0 是一个开放标准的授权协议，允许用户授权第三方应用访问他们在某个服务提供商上的受保护资源，而无需将自己的凭证直接提供给第三方应用。 这种登录交互方式属于 OAuth 2.0 和 OpenID Connect (OIDC) 技术的应用，特别是 \\" 使用 Google 登录 \\" 这种情况。让我为您详细解释一下： OAuth 2.0：这是一...","head":[["meta",{"property":"og:url","content":"https://vuepress-theme-hope-docs-demo.netlify.app/1%20%E4%B8%80%E5%88%87%E7%9A%86%E9%A1%B9%E7%9B%AE/Q3%EF%BC%9AViva/viva/%E5%90%8E%E7%AB%AF/%E7%A4%BE%E4%BA%A4%E8%AE%A4%E8%AF%81.html"}],["meta",{"property":"og:site_name","content":"转了码的刘公子"}],["meta",{"property":"og:title","content":"社交认证"}],["meta",{"property":"og:description","content":"OAuth 2.0 是一个开放标准的授权协议，允许用户授权第三方应用访问他们在某个服务提供商上的受保护资源，而无需将自己的凭证直接提供给第三方应用。 这种登录交互方式属于 OAuth 2.0 和 OpenID Connect (OIDC) 技术的应用，特别是 \\" 使用 Google 登录 \\" 这种情况。让我为您详细解释一下： OAuth 2.0：这是一..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-11-24T16:17:22.000Z"}],["meta",{"property":"article:modified_time","content":"2024-11-24T16:17:22.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"社交认证\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-11-24T16:17:22.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"转了码的刘公子\\",\\"url\\":\\"https://mister-hope.com\\"}]}"]]},"headers":[],"git":{"createdTime":1732465042000,"updatedTime":1732465042000,"contributors":[{"name":"Luis","email":"liuysh20@gmail.com","commits":1}]},"readingTime":{"minutes":1.15,"words":345},"filePathRelative":"1 一切皆项目/Q3：Viva/viva/后端/社交认证.md","localizedDate":"2024年11月25日","autoDesc":true}');export{d as comp,c as data};
