import{_ as A}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as r,a as e,d as l,e as n,b as o,r as a,o as i}from"./app-DokaGNO4.js";const m={};function p(s,t){const E=a("RouteLink");return i(),r("div",null,[e("p",null,[l(E,{to:"/2%20%E7%AC%AC%E4%BA%8C%E5%A4%A7%E8%84%91/1%20%E8%8A%82%E7%82%B9/CS/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/Go/%E6%8C%87%E9%92%88.html"},{default:n(()=>t[0]||(t[0]=[o("指针")])),_:1}),t[5]||(t[5]=e("br",null,null,-1)),l(E,{to:"/2%20%E7%AC%AC%E4%BA%8C%E5%A4%A7%E8%84%91/1%20%E8%8A%82%E7%82%B9/CS/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/Go/%E5%88%87%E7%89%87.html"},{default:n(()=>t[1]||(t[1]=[o("切片")])),_:1}),t[6]||(t[6]=o()),l(E,{to:"/2%20%E7%AC%AC%E4%BA%8C%E5%A4%A7%E8%84%91/1%20%E8%8A%82%E7%82%B9/CS/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/Go/%E5%86%85%E5%BB%BA%E5%87%BD%E6%95%B0.html"},{default:n(()=>t[2]||(t[2]=[o("内建函数")])),_:1}),t[7]||(t[7]=e("br",null,null,-1)),l(E,{to:"/2%20%E7%AC%AC%E4%BA%8C%E5%A4%A7%E8%84%91/1%20%E8%8A%82%E7%82%B9/CS/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/Go/%E5%B9%B6%E5%8F%91%E7%BC%96%E7%A8%8B-Go.html"},{default:n(()=>t[3]||(t[3]=[o("并发编程-Go")])),_:1}),t[8]||(t[8]=e("br",null,null,-1)),l(E,{to:"/2%20%E7%AC%AC%E4%BA%8C%E5%A4%A7%E8%84%91/1%20%E8%8A%82%E7%82%B9/CS/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/Go/func.html"},{default:n(()=>t[4]||(t[4]=[o("func")])),_:1})]),t[9]||(t[9]=e("p",null,"Go 的方法反映了其设计哲学：简单、显式和对控制流的直接掌控。",-1)),t[10]||(t[10]=e("ul",null,[e("li",null,"显式：强制开发者在每个可能出错的地方处理错误。"),e("li",null,"简单：不需要特殊的语法结构，只是普通的 if 语句。"),e("li",null,"灵活：可以轻松地选择忽略错误、处理错误或传播错误。 相比之下，Java 的 try-catch 机制允许将错误处理代码与正常流程分离，但也可能导致错误被忽视或处理不当。")],-1))])}const B=A(m,[["render",p],["__file","Golang.html.vue"]]),u=JSON.parse('{"path":"/2%20%E7%AC%AC%E4%BA%8C%E5%A4%A7%E8%84%91/1%20%E8%8A%82%E7%82%B9/CS/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/Go/Golang.html","title":"Golang","lang":"zh-CN","frontmatter":{"draw":null,"tags":[],"title":"Golang","date created":"2024-07-11T00:00:00.000Z","date modified":"2024-11-12T00:00:00.000Z","description":"Go 的方法反映了其设计哲学：简单、显式和对控制流的直接掌控。 显式：强制开发者在每个可能出错的地方处理错误。 简单：不需要特殊的语法结构，只是普通的 if 语句。 灵活：可以轻松地选择忽略错误、处理错误或传播错误。 相比之下，Java 的 try-catch 机制允许将错误处理代码与正常流程分离，但也可能导致错误被忽视或处理不当。","head":[["meta",{"property":"og:url","content":"https://vuepress-theme-hope-docs-demo.netlify.app/2%20%E7%AC%AC%E4%BA%8C%E5%A4%A7%E8%84%91/1%20%E8%8A%82%E7%82%B9/CS/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/Go/Golang.html"}],["meta",{"property":"og:site_name","content":"转了码的刘公子"}],["meta",{"property":"og:title","content":"Golang"}],["meta",{"property":"og:description","content":"Go 的方法反映了其设计哲学：简单、显式和对控制流的直接掌控。 显式：强制开发者在每个可能出错的地方处理错误。 简单：不需要特殊的语法结构，只是普通的 if 语句。 灵活：可以轻松地选择忽略错误、处理错误或传播错误。 相比之下，Java 的 try-catch 机制允许将错误处理代码与正常流程分离，但也可能导致错误被忽视或处理不当。"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-12-11T14:48:27.000Z"}],["meta",{"property":"article:modified_time","content":"2024-12-11T14:48:27.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Golang\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-12-11T14:48:27.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"转了码的刘公子\\",\\"url\\":\\"https://mister-hope.com\\"}]}"]]},"headers":[],"git":{"createdTime":1732465042000,"updatedTime":1733928507000,"contributors":[{"name":"Luis","email":"liuysh20@gmail.com","commits":1}]},"readingTime":{"minutes":0.59,"words":176},"filePathRelative":"2 第二大脑/1 节点/CS/编程语言/Go/Golang.md","localizedDate":"2024年11月25日","autoDesc":true}');export{B as comp,u as data};
