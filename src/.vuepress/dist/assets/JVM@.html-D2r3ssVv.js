import{_ as n}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as r,a as t,b as a,d as p,e as o,f as l,r as m,o as s}from"./app-DokaGNO4.js";const d={};function c(f,e){const i=m("RouteLink");return s(),r("div",null,[e[11]||(e[11]=t("figure",null,[t("img",{src:"https://imagehosting4picgo.oss-cn-beijing.aliyuncs.com/imagehosting/fix-dir%2Fpicgo%2Fpicgo-clipboard-images%2F2024%2F09%2F20%2F19-15-39-b5a27ea6955dff8eadca5d56b025dfcc-202409201915990-43d59b.png",alt:"image.png|1000",tabindex:"0",loading:"lazy"}),t("figcaption",null,"image.png|1000")],-1)),e[12]||(e[12]=t("p",null,[a("-Xmn：500M，就是说年轻代大小是500M（包括一个Eden和两个Survivor） -XX:SurvivorRatio=3，就是说Eden区与Survivor区的大小比值为3：1：1"),t("br"),a(" -XX:MaxPermSize：64M，就是说设置持久代最大值为64M")],-1)),e[13]||(e[13]=t("p",null,[a("-Xms：1G，就是说初始堆大小为1G"),t("br"),a(" -Xmx：2G，就是说最大堆大小为2G"),t("br"),a(" -XX:+UseConcMarkSweepGC，就是说使用使用CMS内存收集算法")],-1)),t("p",null,[e[1]||(e[1]=a("题目中所问的Eden区的大小是指年轻代的大小，直接根据-Xmn：500M和-XX:SurvivorRatio=3可以直接计算得出")),e[2]||(e[2]=t("br",null,null,-1)),e[3]||(e[3]=a(" 500M×(3/(3+1+1))")),e[4]||(e[4]=t("br",null,null,-1)),e[5]||(e[5]=a(" =500M×（3/5） =500M×0.6")),e[6]||(e[6]=t("br",null,null,-1)),e[7]||(e[7]=a(" =300M")),e[8]||(e[8]=t("br",null,null,-1)),e[9]||(e[9]=a(" 所以Eden区域的大小为300M")),e[10]||(e[10]=t("br",null,null,-1)),p(i,{to:"/2%20%E7%AC%AC%E4%BA%8C%E5%A4%A7%E8%84%91/1%20%E8%8A%82%E7%82%B9/CS/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/Java/JVM/%E5%A0%86.html"},{default:o(()=>e[0]||(e[0]=[a("堆")])),_:1})]),e[14]||(e[14]=l('<p>面试官 | JVM 为什么使用元空间替换了永久代？- 码上技术指导老师的文章 - 知乎<br> https://zhuanlan.zhihu.com/p/111809384</p><p>虚拟机运行时数据区：2 和 3</p><p>虚拟机外：堆外/直接内存 1和 4</p><h2 id="_1、关于类的-类信息、常量、静态变量-都存在线程安全的问题" tabindex="-1"><a class="header-anchor" href="#_1、关于类的-类信息、常量、静态变量-都存在线程安全的问题"><span>1、关于类的：类信息、常量、静态变量（都存在线程安全的问题）</span></a></h2><p>方法区规范内还包括一个运行时常量池的规范，运行时常量池又包括一个字符串常量池的规范</p><figure><img src="https://cdn-a.markji.com/files/62fc6526889af996baeff5aa_hd.png?e=1725356282256&amp;token=xX63b9jqTlDOcGmctt5K9254rV0LG8hS9BmDeFBy:qZatzy49ufFbQ36w0Pr7hPN0tHw=" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>存的是c++中的一种数据结构 instanceKlass，其中有一个属性java_mirror，存在heap中，使得Klass可以暴露给java使用</p><p>JDK7以上版本，静态域存储于定义类型的Class对象中，Class对象如同堆中其他对象一样，存在于GC堆中。</p><h2 id="_2、关于对象的-堆的实现包括新生代和老年代" tabindex="-1"><a class="header-anchor" href="#_2、关于对象的-堆的实现包括新生代和老年代"><span>2、关于对象的：堆的实现包括新生代和老年代</span></a></h2><figure><img src="https://cdn-a.markji.com/files/62fc6571889af996baf0075c_hd.png?e=1725356282256&amp;token=xX63b9jqTlDOcGmctt5K9254rV0LG8hS9BmDeFBy:-Z0uL7UIN9XcOHMAdm1qA1PbAyo=" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>这是一个对象的内存图</p><h2 id="_3、关于线程的-栈的实现包括虚拟机栈、程序计数器、和本地方法栈" tabindex="-1"><a class="header-anchor" href="#_3、关于线程的-栈的实现包括虚拟机栈、程序计数器、和本地方法栈"><span>3、关于线程的：栈的实现包括虚拟机栈、程序计数器、和本地方法栈</span></a></h2><p>其中虚拟机栈的栈帧内又包括:&quot;局部变量表&quot;、&quot;操作数栈&quot;、&quot;动态链接&quot;以及&quot;方法出口&quot;四个部分。</p><p>操作数栈</p><p>局部变量表（八种基本数据类型、引用、返回值）</p><p>动态链接（主要服务一个方法需要调用其他方法的场景）</p><figure><img src="https://cdn-a.markji.com/files/62fc6454889af996baefcfea_hd.png?e=1725356282256&amp;token=xX63b9jqTlDOcGmctt5K9254rV0LG8hS9BmDeFBy:x0H2GQDSSYsjYRx70iyedksc9iQ=" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h2 id="_4、直接内存" tabindex="-1"><a class="header-anchor" href="#_4、直接内存"><span>4、直接内存</span></a></h2><p>1、读写成本小</p><p>通过Java 堆中的 DirectByteBuffer操作，避免java堆和native堆之间的来回复制，也就是nio New Input</p><p>传统的阻塞io，得开辟两份缓冲区，操作系统管的内存开辟一份，java自己管的内存也开辟一份</p><p>第二张是new io只有一份缓冲区（java和操作系统都可管）</p><p>在内存建一个buffer，输入靠InputStream read, 输出靠 OutputStream write</p><p>[Pic#ID/5ZM9#]</p><p>2、回收成本大</p><p>直接内存也会导致内存溢出问题：</p><p>1、不受JVM内存回收管理，不会释放direct memory的内存。因为直接内存是属于操作系统的，java的内存回收不能回收他，</p><p>2、如果要回收，需要主动调用Unsafe对象的freeMemory方法，Unsafe是Java底层的类，一般不建议使用。</p><p>3、直接内存释放是借助了java的虚引用机制，ByteBuffer的实现类内部，使用了Cleaner（虚引用）来监测ByteBuffer对象，一旦ByteBuffer对象被垃圾回收，那么就会由ReferenceHandler线程通过Cleaner的clean方法调用freeMemory来释放直接内存。</p><p>内存布局：方法区位置的变化</p><p>1.8前在全部在永久代中实现。1.8在元空间（本地内存）上实现，其中的字符串常量池被安排在了堆中</p><p>另外还有一个直接内存是nio用来当缓冲区的，效率比较高</p><p><img src="https://cdn-a.markji.com/files/62fc64922f8e2c97ce3712ab_hd.png?e=1725356282256&amp;token=xX63b9jqTlDOcGmctt5K9254rV0LG8hS9BmDeFBy:MlasBp8RXmOfmk1W88b4uHhyrAM=" alt="" loading="lazy"><img src="https://cdn-a.markji.com/files/62fc6498889af996baefde16_hd.png?e=1725356282256&amp;token=xX63b9jqTlDOcGmctt5K9254rV0LG8hS9BmDeFBy:foXriQpYxyf_C2FN1rR0OcnemZs=" alt="" loading="lazy"></p><p>threadlocal</p>',34))])}const h=n(d,[["render",c],["__file","JVM@.html.vue"]]),b=JSON.parse('{"path":"/2%20%E7%AC%AC%E4%BA%8C%E5%A4%A7%E8%84%91/1%20%E8%8A%82%E7%82%B9/CS/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/Java/JVM/JVM@.html","title":"JVM@","lang":"zh-CN","frontmatter":{"draw":null,"tags":[],"title":"JVM@","date created":"2024-07-14T00:00:00.000Z","date modified":"2024-11-12T00:00:00.000Z","description":"image.png|1000image.png|1000 -Xmn：500M，就是说年轻代大小是500M（包括一个Eden和两个Survivor） -XX:SurvivorRatio=3，就是说Eden区与Survivor区的大小比值为3：1：1 -XX:MaxPermSize：64M，就是说设置持久代最大值为64M -Xms：1G，就是说初始堆大小为...","head":[["meta",{"property":"og:url","content":"https://vuepress-theme-hope-docs-demo.netlify.app/2%20%E7%AC%AC%E4%BA%8C%E5%A4%A7%E8%84%91/1%20%E8%8A%82%E7%82%B9/CS/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/Java/JVM/JVM@.html"}],["meta",{"property":"og:site_name","content":"转了码的刘公子"}],["meta",{"property":"og:title","content":"JVM@"}],["meta",{"property":"og:description","content":"image.png|1000image.png|1000 -Xmn：500M，就是说年轻代大小是500M（包括一个Eden和两个Survivor） -XX:SurvivorRatio=3，就是说Eden区与Survivor区的大小比值为3：1：1 -XX:MaxPermSize：64M，就是说设置持久代最大值为64M -Xms：1G，就是说初始堆大小为..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://imagehosting4picgo.oss-cn-beijing.aliyuncs.com/imagehosting/fix-dir%2Fpicgo%2Fpicgo-clipboard-images%2F2024%2F09%2F20%2F19-15-39-b5a27ea6955dff8eadca5d56b025dfcc-202409201915990-43d59b.png"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-12-11T14:48:27.000Z"}],["meta",{"property":"article:modified_time","content":"2024-12-11T14:48:27.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"JVM@\\",\\"image\\":[\\"https://imagehosting4picgo.oss-cn-beijing.aliyuncs.com/imagehosting/fix-dir%2Fpicgo%2Fpicgo-clipboard-images%2F2024%2F09%2F20%2F19-15-39-b5a27ea6955dff8eadca5d56b025dfcc-202409201915990-43d59b.png\\",\\"https://cdn-a.markji.com/files/62fc6526889af996baeff5aa_hd.png?e=1725356282256&token=xX63b9jqTlDOcGmctt5K9254rV0LG8hS9BmDeFBy:qZatzy49ufFbQ36w0Pr7hPN0tHw=\\",\\"https://cdn-a.markji.com/files/62fc6571889af996baf0075c_hd.png?e=1725356282256&token=xX63b9jqTlDOcGmctt5K9254rV0LG8hS9BmDeFBy:-Z0uL7UIN9XcOHMAdm1qA1PbAyo=\\",\\"https://cdn-a.markji.com/files/62fc6454889af996baefcfea_hd.png?e=1725356282256&token=xX63b9jqTlDOcGmctt5K9254rV0LG8hS9BmDeFBy:x0H2GQDSSYsjYRx70iyedksc9iQ=\\",\\"https://cdn-a.markji.com/files/62fc64922f8e2c97ce3712ab_hd.png?e=1725356282256&token=xX63b9jqTlDOcGmctt5K9254rV0LG8hS9BmDeFBy:MlasBp8RXmOfmk1W88b4uHhyrAM=\\",\\"https://cdn-a.markji.com/files/62fc6498889af996baefde16_hd.png?e=1725356282256&token=xX63b9jqTlDOcGmctt5K9254rV0LG8hS9BmDeFBy:foXriQpYxyf_C2FN1rR0OcnemZs=\\"],\\"dateModified\\":\\"2024-12-11T14:48:27.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"转了码的刘公子\\",\\"url\\":\\"https://mister-hope.com\\"}]}"]]},"headers":[{"level":2,"title":"1、关于类的：类信息、常量、静态变量（都存在线程安全的问题）","slug":"_1、关于类的-类信息、常量、静态变量-都存在线程安全的问题","link":"#_1、关于类的-类信息、常量、静态变量-都存在线程安全的问题","children":[]},{"level":2,"title":"2、关于对象的：堆的实现包括新生代和老年代","slug":"_2、关于对象的-堆的实现包括新生代和老年代","link":"#_2、关于对象的-堆的实现包括新生代和老年代","children":[]},{"level":2,"title":"3、关于线程的：栈的实现包括虚拟机栈、程序计数器、和本地方法栈","slug":"_3、关于线程的-栈的实现包括虚拟机栈、程序计数器、和本地方法栈","link":"#_3、关于线程的-栈的实现包括虚拟机栈、程序计数器、和本地方法栈","children":[]},{"level":2,"title":"4、直接内存","slug":"_4、直接内存","link":"#_4、直接内存","children":[]}],"git":{"createdTime":1732465042000,"updatedTime":1733928507000,"contributors":[{"name":"Luis","email":"liuysh20@gmail.com","commits":1}]},"readingTime":{"minutes":3.1,"words":931},"filePathRelative":"2 第二大脑/1 节点/CS/编程语言/Java/JVM/JVM@.md","localizedDate":"2024年11月25日","autoDesc":true}');export{h as comp,b as data};
