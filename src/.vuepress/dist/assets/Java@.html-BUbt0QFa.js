import{_ as d}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as i,a as r,b,d as e,e as n,f as s,r as a,o as u}from"./app-DokaGNO4.js";const o={},p={id:"最佳实践",tabindex:"-1"},m={class:"header-anchor",href:"#最佳实践"};function c(g,t){const l=a("RouteLink");return u(),i("div",null,[t[125]||(t[125]=r("p",null,[b("提升？看代码啊，不用看什么spring啊netty之类的庞然大物，说几个力所能及的库，可以好好研究。知识是有索引的，看到不懂得就去查慢慢就提升了。 1.lombok*，看看怎么实现的，这个牵涉java的编译部分挺有意思；通过注解对几种设计模式的实现很有意思；试着扩展，比如能不能搞个单例的注解？ 2.mockito，这个库挺好玩的，古板的java玩出了dsl的味道。怎么实现的？可以仔细读读源码"),r("br"),b(" 3. MyBatis-Plust，同样的怎么实现的LambdaQueryWrapper，同类的beetlsal也可以看看"),r("br"),b(" 4. apache+的httpclient以及okhttp*，不用急着看源码。先用他们写写代码，仔细体会同样的http 请求封装的不同，背后体现思想的不同"),r("br"),b(" 5. 跳出java，学其他语言体会背后的思想；至少要学一下c/一门脚本语言/haskell*等函数式语言")],-1)),t[126]||(t[126]=r("h2",{id:"unstaged",tabindex:"-1"},[r("a",{class:"header-anchor",href:"#unstaged"},[r("span",null,"Unstaged")])],-1)),r("p",null,[e(l,{to:"/2%20%E7%AC%AC%E4%BA%8C%E5%A4%A7%E8%84%91/1%20%E8%8A%82%E7%82%B9/CS/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/Java/Lombok.html"},{default:n(()=>t[0]||(t[0]=[b("Lombok")])),_:1}),t[3]||(t[3]=r("br",null,null,-1)),e(l,{to:"/2%20%E7%AC%AC%E4%BA%8C%E5%A4%A7%E8%84%91/1%20%E8%8A%82%E7%82%B9/CS/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/Java/%E6%9D%83%E9%99%90%E6%8E%A7%E5%88%B6%E7%AC%A6.html"},{default:n(()=>t[1]||(t[1]=[b("权限控制符")])),_:1}),t[4]||(t[4]=r("br",null,null,-1)),e(l,{to:"/2%20%E7%AC%AC%E4%BA%8C%E5%A4%A7%E8%84%91/1%20%E8%8A%82%E7%82%B9/CS/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/Java/%E5%86%85%E9%83%A8%E7%B1%BB.html"},{default:n(()=>t[2]||(t[2]=[b("内部类")])),_:1}),t[5]||(t[5]=r("br",null,null,-1)),t[6]||(t[6]=r("a",{href:"%E7%A9%BA%E6%8C%87%E9%92%88"},"空指针",-1))]),r("p",null,[t[10]||(t[10]=b("数据： ")),e(l,{to:"/2%20%E7%AC%AC%E4%BA%8C%E5%A4%A7%E8%84%91/1%20%E8%8A%82%E7%82%B9/CS/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/Java/String.html"},{default:n(()=>t[7]||(t[7]=[b("String")])),_:1}),t[11]||(t[11]=r("br",null,null,-1)),e(l,{to:"/2%20%E7%AC%AC%E4%BA%8C%E5%A4%A7%E8%84%91/1%20%E8%8A%82%E7%82%B9/CS/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/Java/Array.html"},{default:n(()=>t[8]||(t[8]=[b("Array")])),_:1}),t[12]||(t[12]=r("br",null,null,-1)),t[13]||(t[13]=r("a",{href:"%E7%B1%BB%E5%9E%8B%E5%BC%BA%E8%BD%AC"},"类型强转",-1)),t[14]||(t[14]=r("br",null,null,-1)),e(l,{to:"/2%20%E7%AC%AC%E4%BA%8C%E5%A4%A7%E8%84%91/1%20%E8%8A%82%E7%82%B9/CS/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/Java/%E5%B8%B8%E9%87%8F.html"},{default:n(()=>t[9]||(t[9]=[b("常量")])),_:1})]),r("p",null,[t[16]||(t[16]=b("行为： ")),e(l,{to:"/2%20%E7%AC%AC%E4%BA%8C%E5%A4%A7%E8%84%91/1%20%E8%8A%82%E7%82%B9/CS/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/Java/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F@.html"},{default:n(()=>t[15]||(t[15]=[b("设计模式@")])),_:1})]),r("p",null,[t[18]||(t[18]=b("编译： ")),e(l,{to:"/2%20%E7%AC%AC%E4%BA%8C%E5%A4%A7%E8%84%91/1%20%E8%8A%82%E7%82%B9/CS/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/Java/%E7%B1%BB%E5%8A%A0%E8%BD%BD.html"},{default:n(()=>t[17]||(t[17]=[b("类加载")])),_:1})]),t[127]||(t[127]=r("p",null,[b("预处理阶段：展开头文件、宏替换、条件编译、去掉注释。到编译阶段时是没有注释的。 javadoc 用来识别注释"),r("br"),b(" javac 用来识别代码"),r("br"),b(" 二者互不影响")],-1)),t[128]||(t[128]=r("hr",null,null,-1)),r("h2",p,[r("a",m,[r("span",null,[e(l,{to:"/2%20%E7%AC%AC%E4%BA%8C%E5%A4%A7%E8%84%91/1%20%E8%8A%82%E7%82%B9/CS/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/Java/%E6%9C%80%E4%BD%B3%E5%AE%9E%E8%B7%B5.html"},{default:n(()=>t[19]||(t[19]=[b("最佳实践")])),_:1})])])]),t[129]||(t[129]=r("p",null,"###《Effective Java》规范",-1)),r("table",null,[t[124]||(t[124]=r("thead",null,[r("tr",null,[r("th",null,"章节"),r("th",null,"item编号"),r("th",null,"条目标题"),r("th")])],-1)),r("tbody",null,[t[36]||(t[36]=r("tr",null,[r("td",null,"2. 创建和销毁对象"),r("td",null,"1"),r("td",null,"考虑用静态工厂方法代替构造器"),r("td",null,"替换 WrapperInfo 的需求")],-1)),t[37]||(t[37]=r("tr",null,[r("td"),r("td",null,"2"),r("td",null,"遇到多个构造器参数时要考虑使用builder"),r("td",null,"instinctive")],-1)),t[38]||(t[38]=r("tr",null,[r("td"),r("td",null,"3"),r("td",null,"用私有构造器或者枚举类型强化Singleton属性"),r("td")],-1)),t[39]||(t[39]=r("tr",null,[r("td"),r("td",null,"4"),r("td",null,"通过私有构造器强化不可实例化的能力"),r("td")],-1)),t[40]||(t[40]=r("tr",null,[r("td"),r("td",null,"5"),r("td",null,"优先考虑依赖注入来引用资源"),r("td")],-1)),t[41]||(t[41]=r("tr",null,[r("td"),r("td",null,"6"),r("td",null,"避免创建不必要的对象"),r("td")],-1)),t[42]||(t[42]=r("tr",null,[r("td"),r("td",null,"7"),r("td",null,"消除过期的对象引用"),r("td")],-1)),t[43]||(t[43]=r("tr",null,[r("td"),r("td",null,"8"),r("td",null,"避免使用终结方法和清除方法"),r("td")],-1)),t[44]||(t[44]=r("tr",null,[r("td"),r("td",null,"9"),r("td",null,"try-with-resources优先于try-finally"),r("td")],-1)),t[45]||(t[45]=r("tr",null,[r("td",null,"3. 对于所有对象都通用的方法"),r("td",null,"10"),r("td",null,"覆盖equals时请遵守通用约定"),r("td")],-1)),t[46]||(t[46]=r("tr",null,[r("td"),r("td",null,"11"),r("td",null,"覆盖equals时总要覆盖hashCode"),r("td",null,"instinctive")],-1)),t[47]||(t[47]=r("tr",null,[r("td"),r("td",null,"12"),r("td",null,"始终要覆盖toString"),r("td",null,"原生的并不具备可读性，但是 toString 在各个场合都会被频繁使用，比如 println，debugger，原生的更像是一个接口方法，一半都需要自己去做实现。")],-1)),t[48]||(t[48]=r("tr",null,[r("td"),r("td",null,"13"),r("td",null,"谨慎地覆盖clone"),r("td")],-1)),t[49]||(t[49]=r("tr",null,[r("td"),r("td",null,"14"),r("td",null,"考虑实现Comparable接口"),r("td")],-1)),t[50]||(t[50]=r("tr",null,[r("td",null,"4. 类和接口"),r("td",null,"15"),r("td",null,"使类和成员的可访问性最小化"),r("td",null,"instinctive")],-1)),t[51]||(t[51]=r("tr",null,[r("td"),r("td",null,"16"),r("td",null,"要在公有类而非公有域中使用访问方法"),r("td")],-1)),t[52]||(t[52]=r("tr",null,[r("td"),r("td",null,"17"),r("td",null,"使可变性最小化"),r("td")],-1)),t[53]||(t[53]=r("tr",null,[r("td"),r("td",null,"18"),r("td",null,"复合优先于继承"),r("td",null,"instinctive")],-1)),t[54]||(t[54]=r("tr",null,[r("td"),r("td",null,"19"),r("td",null,"要么设计继承并提供文档说明，要么禁止继承"),r("td")],-1)),t[55]||(t[55]=r("tr",null,[r("td"),r("td",null,"20"),r("td",null,"接口优先于抽象类"),r("td")],-1)),t[56]||(t[56]=r("tr",null,[r("td"),r("td",null,"21"),r("td",null,"为后代设计接口"),r("td")],-1)),t[57]||(t[57]=r("tr",null,[r("td"),r("td",null,"22"),r("td",null,"接口只用于定义类型"),r("td")],-1)),t[58]||(t[58]=r("tr",null,[r("td"),r("td",null,"23"),r("td",null,"类层次优先于标签类"),r("td")],-1)),t[59]||(t[59]=r("tr",null,[r("td"),r("td",null,"24"),r("td",null,"静态成员类优先于非静态成员类"),r("td")],-1)),t[60]||(t[60]=r("tr",null,[r("td"),r("td",null,"25"),r("td",null,"限制源文件为单个顶级类"),r("td")],-1)),t[61]||(t[61]=r("tr",null,[r("td",null,"5. 泛型"),r("td",null,"26"),r("td",null,"请不要使用原生态类型"),r("td",null,"instinctive")],-1)),t[62]||(t[62]=r("tr",null,[r("td"),r("td",null,"27"),r("td",null,"消除非受检警告"),r("td")],-1)),r("tr",null,[t[27]||(t[27]=r("td",null,null,-1)),t[28]||(t[28]=r("td",null,"28",-1)),t[29]||(t[29]=r("td",null,"列表优先于数组",-1)),r("td",null,[t[21]||(t[21]=b("优先使用 ")),t[22]||(t[22]=r("code",null,"List<T>",-1)),t[23]||(t[23]=b(" 而非 ")),t[24]||(t[24]=r("code",null,"T[]",-1)),t[25]||(t[25]=b("，数组是")),e(l,{to:"/2%20%E7%AC%AC%E4%BA%8C%E5%A4%A7%E8%84%91/1%20%E8%8A%82%E7%82%B9/CS/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/Java/%E5%8D%8F%E5%8F%98.html"},{default:n(()=>t[20]||(t[20]=[b("协变")])),_:1}),t[26]||(t[26]=b("的，某些类型不安全的操作可能在编译时无法被检测到，但会在运行时抛出异常，例如 ArrayStoreException。"))])]),t[63]||(t[63]=r("tr",null,[r("td"),r("td",null,"29"),r("td",null,"优先考虑泛型"),r("td")],-1)),t[64]||(t[64]=r("tr",null,[r("td"),r("td",null,"30"),r("td",null,"优先使用泛型方法"),r("td")],-1)),t[65]||(t[65]=r("tr",null,[r("td"),r("td",null,"31"),r("td",null,"利用有限制通配符来提升API的灵活性"),r("td")],-1)),t[66]||(t[66]=r("tr",null,[r("td"),r("td",null,"32"),r("td",null,"谨慎并用泛型和可变参数"),r("td")],-1)),t[67]||(t[67]=r("tr",null,[r("td"),r("td",null,"33"),r("td",null,"优先考虑类型安全的异构容器"),r("td")],-1)),t[68]||(t[68]=r("tr",null,[r("td",null,"6. 枚举和注解"),r("td",null,"34"),r("td",null,"用enum代替int常量"),r("td",null,"床型、取消规则")],-1)),t[69]||(t[69]=r("tr",null,[r("td"),r("td",null,"35"),r("td",null,"用field代替ordinal"),r("td",null,"instinctive")],-1)),t[70]||(t[70]=r("tr",null,[r("td"),r("td",null,"36"),r("td",null,"用EnumSet代替位域"),r("td")],-1)),t[71]||(t[71]=r("tr",null,[r("td"),r("td",null,"37"),r("td",null,"用EnumMap代替序数索引"),r("td")],-1)),t[72]||(t[72]=r("tr",null,[r("td"),r("td",null,"38"),r("td",null,"用接口模拟可扩展的枚举"),r("td",null,"SimpleTypeEnum精简逻辑那里的写法,opcodes思维")],-1)),t[73]||(t[73]=r("tr",null,[r("td"),r("td",null,"39"),r("td",null,"注解优先于命名模式"),r("td")],-1)),t[74]||(t[74]=r("tr",null,[r("td"),r("td",null,"40"),r("td",null,"坚持使用Override注解"),r("td")],-1)),t[75]||(t[75]=r("tr",null,[r("td"),r("td",null,"41"),r("td",null,"用标记接口定义类型"),r("td")],-1)),r("tr",null,[t[33]||(t[33]=r("td",null,"7. Lambda表达式和流",-1)),t[34]||(t[34]=r("td",null,"42",-1)),r("td",null,[e(l,{to:"/2%20%E7%AC%AC%E4%BA%8C%E5%A4%A7%E8%84%91/1%20%E8%8A%82%E7%82%B9/CS/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/Java/lambda%E8%A1%A8%E8%BE%BE%E5%BC%8F.html"},{default:n(()=>t[30]||(t[30]=[b("lambda表达式")])),_:1}),t[32]||(t[32]=b("表达式优先于")),e(l,{to:"/2%20%E7%AC%AC%E4%BA%8C%E5%A4%A7%E8%84%91/1%20%E8%8A%82%E7%82%B9/CS/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/Java/%E5%8C%BF%E5%90%8D%E5%86%85%E9%83%A8%E7%B1%BB.html"},{default:n(()=>t[31]||(t[31]=[b("匿名内部类")])),_:1})]),t[35]||(t[35]=r("td",null,"One line is ideal for a lambda, and three lines is a reasonable maximum.",-1))]),t[76]||(t[76]=r("tr",null,[r("td"),r("td",null,"43"),r("td",null,"方法引用优先于Lambda表达式"),r("td")],-1)),t[77]||(t[77]=r("tr",null,[r("td"),r("td",null,"44"),r("td",null,"坚持使用标准的函数接口"),r("td")],-1)),t[78]||(t[78]=r("tr",null,[r("td"),r("td",null,"45"),r("td",null,"谨慎使用Stream"),r("td")],-1)),t[79]||(t[79]=r("tr",null,[r("td"),r("td",null,"46"),r("td",null,"优先选择Stream中无副作用的函数"),r("td")],-1)),t[80]||(t[80]=r("tr",null,[r("td"),r("td",null,"47"),r("td",null,"Stream要优先用Collection作为返回类型"),r("td")],-1)),t[81]||(t[81]=r("tr",null,[r("td"),r("td",null,"48"),r("td",null,"谨慎使用Stream并行"),r("td")],-1)),t[82]||(t[82]=r("tr",null,[r("td",null,"8. 方法"),r("td",null,"49"),r("td",null,"检查参数的有效性"),r("td")],-1)),t[83]||(t[83]=r("tr",null,[r("td"),r("td",null,"50"),r("td",null,"必要时进行保护性拷贝"),r("td")],-1)),t[84]||(t[84]=r("tr",null,[r("td"),r("td",null,"51"),r("td",null,"谨慎设计方法签名"),r("td")],-1)),t[85]||(t[85]=r("tr",null,[r("td"),r("td",null,"52"),r("td",null,"慎用重载"),r("td")],-1)),t[86]||(t[86]=r("tr",null,[r("td"),r("td",null,"53"),r("td",null,"慎用可变参数"),r("td")],-1)),t[87]||(t[87]=r("tr",null,[r("td"),r("td",null,"54"),r("td",null,"返回零长度的数组或者集合，而不是null"),r("td",null,"instinctive")],-1)),t[88]||(t[88]=r("tr",null,[r("td"),r("td",null,"55"),r("td",null,"谨慎返回optinal"),r("td")],-1)),t[89]||(t[89]=r("tr",null,[r("td"),r("td",null,"56"),r("td",null,"为所有导出的API元素编写文档注释"),r("td")],-1)),t[90]||(t[90]=r("tr",null,[r("td",null,"9. 通用编程"),r("td",null,"57"),r("td",null,"将局部变量的作用域最小化"),r("td")],-1)),t[91]||(t[91]=r("tr",null,[r("td"),r("td",null,"58"),r("td",null,"for-each循环优先于传统的for循环"),r("td")],-1)),t[92]||(t[92]=r("tr",null,[r("td"),r("td",null,"59"),r("td",null,"了解和使用类库"),r("td")],-1)),t[93]||(t[93]=r("tr",null,[r("td"),r("td",null,"60"),r("td",null,"如果需要精确的答案，请避免使用float和double"),r("td",null,"The float and double types are designed primarily for scientific and engineering calculations. They perform binary floating-point arithmetic, which was carefully designed to furnish accurate approximations quickly over a broad range of magnitudes. They do not, however, provide exact results and should not be used where exact results are required. - use BigDecimal, int, or long for monetary calculations.")],-1)),t[94]||(t[94]=r("tr",null,[r("td"),r("td",null,"61"),r("td",null,"基本类型优先于装箱基本类型"),r("td")],-1)),t[95]||(t[95]=r("tr",null,[r("td"),r("td",null,"62"),r("td",null,"如果其他类型更适合，则尽量避免使用字符串"),r("td")],-1)),t[96]||(t[96]=r("tr",null,[r("td"),r("td",null,"63"),r("td",null,"了解字符串连接的性能"),r("td",null,[r("code",null,"+"),b(" n 次的复杂度是 n 方，本质是因为字符串是不可变的")])],-1)),t[97]||(t[97]=r("tr",null,[r("td"),r("td",null,"64"),r("td",null,"通过接口引用对象"),r("td")],-1)),t[98]||(t[98]=r("tr",null,[r("td"),r("td",null,"65"),r("td",null,"接口优先于反射机制"),r("td")],-1)),t[99]||(t[99]=r("tr",null,[r("td"),r("td",null,"66"),r("td",null,"谨慎地使用本地方法"),r("td")],-1)),t[100]||(t[100]=r("tr",null,[r("td"),r("td",null,"67"),r("td",null,"谨慎地进行优化"),r("td")],-1)),t[101]||(t[101]=r("tr",null,[r("td"),r("td",null,"68"),r("td",null,"遵守普遍接受的命名惯例"),r("td",null,"instinctive")],-1)),t[102]||(t[102]=r("tr",null,[r("td",null,"10. 异常"),r("td",null,"69"),r("td",null,"只针对异常的情况才使用异常"),r("td")],-1)),t[103]||(t[103]=r("tr",null,[r("td"),r("td",null,"70"),r("td",null,"对可恢复的情况使用受检异常，对编程错误使用运行时异常"),r("td")],-1)),t[104]||(t[104]=r("tr",null,[r("td"),r("td",null,"71"),r("td",null,"避免不必要地使用受检异常"),r("td")],-1)),t[105]||(t[105]=r("tr",null,[r("td"),r("td",null,"72"),r("td",null,"优先使用标准的异常"),r("td")],-1)),t[106]||(t[106]=r("tr",null,[r("td"),r("td",null,"73"),r("td",null,"抛出与抽象相对应的异常"),r("td")],-1)),t[107]||(t[107]=r("tr",null,[r("td"),r("td",null,"74"),r("td",null,"每个方法抛出的异常都要有文档"),r("td")],-1)),t[108]||(t[108]=r("tr",null,[r("td"),r("td",null,"75"),r("td",null,"在细节消息中包含能捕获失败的信息"),r("td",null,"要反应上下文信息")],-1)),t[109]||(t[109]=r("tr",null,[r("td"),r("td",null,"76"),r("td",null,"努力使失败保持原子性"),r("td")],-1)),t[110]||(t[110]=r("tr",null,[r("td"),r("td",null,"77"),r("td",null,"不要忽略异常"),r("td")],-1)),t[111]||(t[111]=r("tr",null,[r("td",null,"11. 并发"),r("td",null,"78"),r("td",null,"同步访问共享的可变数据"),r("td")],-1)),t[112]||(t[112]=r("tr",null,[r("td"),r("td",null,"79"),r("td",null,"避免过度同步"),r("td")],-1)),t[113]||(t[113]=r("tr",null,[r("td"),r("td",null,"80"),r("td",null,"executor、task和stream优先于线程"),r("td")],-1)),t[114]||(t[114]=r("tr",null,[r("td"),r("td",null,"81"),r("td",null,"并发工具优先于wait和notify"),r("td")],-1)),t[115]||(t[115]=r("tr",null,[r("td"),r("td",null,"82"),r("td",null,"线程安全性的文档化"),r("td")],-1)),t[116]||(t[116]=r("tr",null,[r("td"),r("td",null,"83"),r("td",null,"慎用延迟初始化"),r("td")],-1)),t[117]||(t[117]=r("tr",null,[r("td"),r("td",null,"84"),r("td",null,"不要依赖于线程调度器"),r("td")],-1)),t[118]||(t[118]=r("tr",null,[r("td",null,"12. 序列化"),r("td",null,"85"),r("td",null,"优先选择Java序列化的替代方案"),r("td")],-1)),t[119]||(t[119]=r("tr",null,[r("td"),r("td",null,"86"),r("td",null,"谨慎地实现Serializable接口"),r("td")],-1)),t[120]||(t[120]=r("tr",null,[r("td"),r("td",null,"87"),r("td",null,"考虑使用自定义的序列化形式"),r("td")],-1)),t[121]||(t[121]=r("tr",null,[r("td"),r("td",null,"88"),r("td",null,"保护性地编写readObject方法"),r("td")],-1)),t[122]||(t[122]=r("tr",null,[r("td"),r("td",null,"89"),r("td",null,"对于实例控制，枚举类型优先于readResolve"),r("td")],-1)),t[123]||(t[123]=r("tr",null,[r("td"),r("td",null,"90"),r("td",null,"考虑用序列化代理代替序列化实例"),r("td")],-1))])]),t[130]||(t[130]=r("p",null,"###《阿里规范》",-1)),t[131]||(t[131]=r("table",null,[r("thead",null,[r("tr",null,[r("th",null,"类别"),r("th",null,"编号"),r("th",null,"规则内容"),r("th",null,"备注")])]),r("tbody",null,[r("tr",null,[r("td",null,"OOP规约"),r("td",null,"1"),r("td",null,"避免通过对象引用访问静态变量或方法，应直接使用类名"),r("td")]),r("tr",null,[r("td"),r("td",null,"2"),r("td",null,"所有覆写方法必须加@Override注解"),r("td",null,"instinctive")]),r("tr",null,[r("td"),r("td",null,"3"),r("td",null,"可变参数应为相同参数类型、相同业务含义，避免使用Object"),r("td")]),r("tr",null,[r("td"),r("td",null,"4"),r("td",null,"不允许修改正在使用的接口方法签名，过时接口必须加@Deprecated注解"),r("td")]),r("tr",null,[r("td"),r("td",null,"5"),r("td",null,"不能使用过时的类或方法"),r("td")]),r("tr",null,[r("td"),r("td",null,"6"),r("td",null,"使用常量或确定有值的对象来调用equals方法"),r("td")]),r("tr",null,[r("td"),r("td",null,"7"),r("td",null,"所有整型包装类对象之间值的比较，使用equals方法"),r("td")]),r("tr",null,[r("td"),r("td",null,"8"),r("td",null,"货币金额以最小单位的整型进行存储"),r("td")]),r("tr",null,[r("td"),r("td",null,"9"),r("td",null,"浮点数之间的等值判断，不能使用==或equals"),r("td")]),r("tr",null,[r("td"),r("td",null,"10"),r("td",null,"BigDecimal的等值比较应使用compareTo()方法"),r("td",null,"instinctive")]),r("tr",null,[r("td"),r("td",null,"11"),r("td",null,"DO类的属性类型要与数据库字段类型匹配"),r("td")]),r("tr",null,[r("td"),r("td",null,"12"),r("td",null,"禁止使用BigDecimal(double)构造方法"),r("td")]),r("tr",null,[r("td"),r("td",null,"13"),r("td",null,"POJO类属性必须使用包装数据类型；RPC方法的返回值和参数必须使用包装数据类型"),r("td")]),r("tr",null,[r("td"),r("td",null,"14"),r("td",null,"定义POJO类时，不要设定任何属性默认值"),r("td",null,"与 item61 思想不同")]),r("tr",null,[r("td"),r("td",null,"15"),r("td",null,"序列化类新增属性时，不要修改serialVersionUID字段"),r("td")]),r("tr",null,[r("td"),r("td",null,"16"),r("td",null,"构造方法中禁止加入业务逻辑"),r("td",null,"WrapperInfo 那个需求我不是坑人么")]),r("tr",null,[r("td"),r("td",null,"17"),r("td",null,"POJO类必须写toString方法"),r("td",null,"lombok 省事")]),r("tr",null,[r("td"),r("td",null,"18"),r("td",null,"POJO类中，禁止同时存在isXxx()和getXxx()方法"),r("td")]),r("tr",null,[r("td"),r("td"),r("td"),r("td")]),r("tr",null,[r("td",null,"代码格式"),r("td",null,"1"),r("td",null,"大括号使用约定：空代码块写成{}；非空代码块左大括号不换行，右大括号前换行"),r("td")]),r("tr",null,[r("td"),r("td",null,"2"),r("td",null,"小括号和相邻字符间不需要空格；左大括号前需要空格"),r("td")]),r("tr",null,[r("td"),r("td",null,"3"),r("td",null,"if/for/while/switch/do等保留字与括号之间必须加空格"),r("td")]),r("tr",null,[r("td"),r("td",null,"4"),r("td",null,"任何二目、三目运算符的左右两边都需要加空格"),r("td",null,"instinctive")]),r("tr",null,[r("td"),r("td",null,"5"),r("td",null,"采用4个空格缩进，禁止使用Tab字符"),r("td",null,"instinctive")]),r("tr",null,[r("td"),r("td",null,"6"),r("td",null,"注释的双斜线与注释内容之间有且仅有一个空格"),r("td",null,"instinctive")]),r("tr",null,[r("td"),r("td",null,"7"),r("td",null,"类型强制转换时，右括号与强制转换值之间不需要空格"),r("td")]),r("tr",null,[r("td"),r("td",null,"8"),r("td",null,"单行字符数限制不超过120个，超出需要换行"),r("td",null,"instinctive")]),r("tr",null,[r("td"),r("td",null,"9"),r("td",null,"方法参数在定义和传入时，多个参数逗号后面必须加空格"),r("td",null,"instinctive")]),r("tr",null,[r("td"),r("td",null,"10"),r("td",null,"IDE的text file encoding设置为UTF-8；文件换行符使用Unix格式"),r("td")]),r("tr",null,[r("td"),r("td"),r("td"),r("td")]),r("tr",null,[r("td",null,"常量定义"),r("td",null,"1"),r("td",null,"不允许任何魔法值直接出现在代码中"),r("td",null,"instinctive")]),r("tr",null,[r("td"),r("td",null,"2"),r("td",null,"long或Long赋值时，数值后使用大写L，不能是小写l"),r("td")]),r("tr",null,[r("td"),r("td",null,"3"),r("td",null,"浮点数类型的数值后缀统一为大写的D或F"),r("td")]),r("tr",null,[r("td"),r("td"),r("td"),r("td")]),r("tr",null,[r("td",null,"日期时间"),r("td",null,"1"),r("td",null,"日期格式化时，传入pattern中表示年份统一使用小写的y"),r("td")]),r("tr",null,[r("td"),r("td",null,"2"),r("td",null,"在日期格式中分清楚大写的M和小写的m，大写的H和小写的h"),r("td")]),r("tr",null,[r("td"),r("td",null,"3"),r("td",null,"获取当前毫秒数使用System.currentTimeMillis()，而不是new Date().getTime()"),r("td")]),r("tr",null,[r("td"),r("td",null,"4"),r("td",null,"不允许使用java.sql.Date、java.sql.Time、java.sql.Timestamp"),r("td")]),r("tr",null,[r("td"),r("td",null,"5"),r("td",null,"禁止在程序中写死一年为365天"),r("td",null,"instinctive")]),r("tr",null,[r("td"),r("td"),r("td"),r("td")]),r("tr",null,[r("td",null,"集合处理"),r("td",null,"1"),r("td",null,"覆写equals必须覆写hashCode，Set的对象必须覆写这两个方法，Map的键必须覆写这两个方法"),r("td")]),r("tr",null,[r("td"),r("td",null,"2"),r("td",null,"判断集合是否为空使用isEmpty()，而不是size() == 0"),r("td",null,"instinctive")]),r("tr",null,[r("td"),r("td",null,"3"),r("td",null,"使用Collectors.toMap()时，处理重复key需使用含mergeFunction参数的方法"),r("td")]),r("tr",null,[r("td"),r("td",null,"4"),r("td",null,"使用Collectors.toMap()时，注意value为null会抛NPE"),r("td")]),r("tr",null,[r("td"),r("td",null,"5"),r("td",null,"ArrayList的subList结果不可强转成ArrayList"),r("td")]),r("tr",null,[r("td"),r("td",null,"6"),r("td",null,"Map的keySet()/values()/entrySet()返回集合不可进行添加元素操作"),r("td")]),r("tr",null,[r("td"),r("td",null,"7"),r("td",null,"Collections类返回的对象，如emptyList()等是不可变的，不能进行添加或删除元素的操作"),r("td")]),r("tr",null,[r("td"),r("td",null,"8"),r("td",null,"在subList场景中，注意对原集合元素的增删操作会导致子列表操作出现异常"),r("td")]),r("tr",null,[r("td"),r("td",null,"9"),r("td",null,"使用集合转数组的方法，必须使用toArray(T[]array)，传入类型一致、长度为0的空数组"),r("td")]),r("tr",null,[r("td"),r("td",null,"10"),r("td",null,"使用Collection的addAll()方法时，要对输入的集合参数进行NPE判断"),r("td")]),r("tr",null,[r("td"),r("td",null,"11"),r("td",null,"Arrays.asList()返回的List不支持添加、删除、清空操作"),r("td")]),r("tr",null,[r("td"),r("td",null,"12"),r("td",null,[b("泛型通配符"),r("code",null,"<? extends T"),b(">不能使用add方法，"),r("code",null,"<? super T>"),b("不能使用get方法")]),r("td")]),r("tr",null,[r("td"),r("td",null,"13"),r("td",null,"无泛型限制集合赋值给有泛型限制集合时，使用元素需要进行instanceof判断"),r("td")]),r("tr",null,[r("td"),r("td",null,"14"),r("td",null,"不要在foreach循环里进行元素的remove/add操作，remove操作请使用Iterator方式"),r("td")]),r("tr",null,[r("td"),r("td",null,"15"),r("td",null,"Comparator实现类需满足三个条件：x.compareTo(y) == -y.compareTo(x)，x.compareTo(y) > 0 && y.compareTo(z) > 0 时 x.compareTo(z) > 0，x.compareTo(y) == 0 时 x.compareTo(z) == y.compareTo(z)"),r("td")]),r("tr",null,[r("td"),r("td"),r("td"),r("td")]),r("tr",null,[r("td",null,"并发处理"),r("td",null,"1"),r("td",null,"获取单例对象需要保证线程安全，其中的方法也要保证线程安全"),r("td")]),r("tr",null,[r("td"),r("td",null,"2"),r("td",null,"创建线程或线程池时请指定有意义的线程名称"),r("td")]),r("tr",null,[r("td"),r("td",null,"3"),r("td",null,"线程资源必须通过线程池提供，不允许在应用中自行显式创建线程"),r("td")]),r("tr",null,[r("td"),r("td",null,"4"),r("td",null,"线程池不允许使用Executors去创建，而是通过ThreadPoolExecutor的方式"),r("td")]),r("tr",null,[r("td"),r("td",null,"5"),r("td",null,"SimpleDateFormat是线程不安全的类，一般不要定义为static变量，如果定义为static，必须加锁，或者使用DateUtils工具类"),r("td")]),r("tr",null,[r("td"),r("td",null,"6"),r("td",null,"必须回收自定义的ThreadLocal变量，尤其在线程池场景下"),r("td")]),r("tr",null,[r("td"),r("td",null,"7"),r("td",null,"高并发时，同步调用应该去考量锁的性能损耗"),r("td")]),r("tr",null,[r("td"),r("td",null,"8"),r("td",null,"对多个资源、数据库表、对象同时加锁时，需要保持一致的加锁顺序，否则可能会造成死锁"),r("td")]),r("tr",null,[r("td"),r("td",null,"9"),r("td",null,"使用阻塞等待获取锁的方式时，必须在try代码块之外，并且在加锁方法与try代码块之间没有任何可能抛出异常的方法调用"),r("td")]),r("tr",null,[r("td"),r("td",null,"10"),r("td",null,"使用尝试机制来获取锁的方式中，进入业务代码块之前，必须先判断当前线程是否持有锁"),r("td")]),r("tr",null,[r("td"),r("td",null,"11"),r("td",null,"并发修改同一记录时，避免更新丢失，需要加锁"),r("td")]),r("tr",null,[r("td"),r("td",null,"12"),r("td",null,"多线程并行处理定时任务时，使用ScheduledExecutorService而不是Timer"),r("td")]),r("tr",null,[r("td"),r("td"),r("td"),r("td")]),r("tr",null,[r("td",null,"控制语句"),r("td",null,"1"),r("td",null,"switch语句要么通过break等终止，要么注释说明程序将继续执行到哪一个case为止；必须包含default语句并放在最后"),r("td")]),r("tr",null,[r("td"),r("td",null,"2"),r("td",null,"当switch括号内的变量类型为String并且此变量为外部参数时，必须先进行null判断"),r("td")]),r("tr",null,[r("td"),r("td",null,"3"),r("td",null,"在if/else/for/while/do语句中必须使用大括号"),r("td",null,"instinctive")]),r("tr",null,[r("td"),r("td",null,"4"),r("td",null,"三目运算符使用时注意NPE异常"),r("td",null,"需要注意")]),r("tr",null,[r("td"),r("td",null,"5"),r("td",null,'在高并发场景中，避免使用"等于"判断作为中断或退出的条件'),r("td")]),r("tr",null,[r("td"),r("td"),r("td"),r("td")]),r("tr",null,[r("td",null,"注释规约"),r("td",null,"1"),r("td",null,[b("类、类属性、类方法的注释必须使用Javadoc规范，使用"),r("code",null,"/** 内容 */"),b("格式")]),r("td",null,"instinctive")]),r("tr",null,[r("td"),r("td",null,"2"),r("td",null,"所有的抽象方法必须要用Javadoc注释，说明方法用途、功能、返回值、参数、异常等"),r("td",null,"instinctive")]),r("tr",null,[r("td"),r("td",null,"3"),r("td",null,"所有的类都必须添加创建者和创建日期"),r("td",null,"instinctive")]),r("tr",null,[r("td"),r("td",null,"4"),r("td",null,"方法内部单行注释使用//，多行注释使用/* */，注意与代码对齐"),r("td",null,"instinctive")]),r("tr",null,[r("td"),r("td",null,"5"),r("td",null,"所有的枚举类型字段必须要有注释，说明每个数据项的用途"),r("td")]),r("tr",null,[r("td",null,"前后端规约"),r("td",null,"1"),r("td",null,"API需明确协议、域名、路径、请求方法、请求内容、状态码、响应体"),r("td")]),r("tr",null,[r("td"),r("td",null,"2"),r("td",null,"空列表返回空数组[]或空集合{}"),r("td",null,"需要注意")]),r("tr",null,[r("td"),r("td",null,"3"),r("td",null,"错误响应必须包含HTTP状态码、errorCode、errorMessage、用户提示信息"),r("td",null,"大差不差")]),r("tr",null,[r("td"),r("td",null,"4"),r("td",null,"JSON数据中的key必须为小写字母开始的lowerCamelCase风格"),r("td",null,"sirius 有的用的是蛇形")]),r("tr",null,[r("td"),r("td",null,"5"),r("td",null,"errorMessage用于错误追踪，可输出到前端隐藏控件或日志"),r("td")]),r("tr",null,[r("td"),r("td",null,"6"),r("td",null,"超大整数场景使用String类型返回，禁止使用Long类型"),r("td",null,"String 是万金油和兜底")]),r("tr",null,[r("td"),r("td",null,"7"),r("td",null,"URL传递参数不能超过2048字节"),r("td")]),r("tr",null,[r("td"),r("td",null,"8"),r("td",null,"HTTP请求body传递内容必须控制长度"),r("td")]),r("tr",null,[r("td"),r("td",null,"9"),r("td",null,"翻页场景中，参数小于1返回第一页，大于总页数返回最后一页"),r("td",null,"那次还和曾老师争论")]),r("tr",null,[r("td"),r("td",null,"10"),r("td",null,"内部重定向使用forward，外部重定向地址使用URL统一代理模块生成"),r("td")]),r("tr",null,[r("td",null,"其他"),r("td",null,"1"),r("td",null,"正则表达式应利用预编译功能提高匹配速度"),r("td")]),r("tr",null,[r("td"),r("td",null,"2"),r("td",null,"避免使用ApacheBeanutils进行属性复制，考虑使用其他方案"),r("td",null,"protobuf")]),r("tr",null,[r("td"),r("td",null,"3"),r("td",null,"Velocity调用POJO类属性时直接使用属性名"),r("td")]),r("tr",null,[r("td"),r("td",null,"4"),r("td",{var:""},"后台输送给页面的变量必须加$!"),r("td")]),r("tr",null,[r("td"),r("td",null,"5"),r("td",null,"获取随机数时注意Math.random()的范围，整数随机数使用Random对象的方法"),r("td")]),r("tr",null,[r("td"),r("td",null,"6"),r("td",null,"枚举的属性字段必须是私有且不可变"),r("td",null,"private final，枚举是静态常量表格，必须有 final")]),r("tr",null,[r("td",null,"错误码"),r("td",null,"1"),r("td",null,"错误码制定原则：快速溯源、沟通标准化"),r("td")]),r("tr",null,[r("td"),r("td",null,"2"),r("td",null,"错误码不体现版本号和错误等级信息"),r("td")]),r("tr",null,[r("td"),r("td",null,"3"),r("td",null,"全部正常时返回00000"),r("td")]),r("tr",null,[r("td"),r("td",null,"4"),r("td",null,"错误码为5位字符串，分为错误来源和四位数字编号"),r("td",null,"sirius 目前是三位，可以看下 spa 那里的")]),r("tr",null,[r("td"),r("td",null,"5"),r("td",null,"编号不与业务架构和组织架构挂钩，遵循先到先得原则"),r("td")]),r("tr",null,[r("td"),r("td",null,"6"),r("td",null,"避免随意定义新的错误码"),r("td")]),r("tr",null,[r("td"),r("td",null,"7"),r("td",null,"错误码不能直接作为用户提示信息使用"),r("td")]),r("tr",null,[r("td"),r("td"),r("td"),r("td")]),r("tr",null,[r("td",null,"异常处理"),r("td",null,"1"),r("td",null,"可通过预检查方式规避的RuntimeException不应该通过catch处理"),r("td")]),r("tr",null,[r("td"),r("td",null,"2"),r("td",null,"异常捕获后不要用来做流程控制，条件控制"),r("td",null,"性能问题")]),r("tr",null,[r("td"),r("td",null,"3"),r("td",null,"catch时区分稳定代码和非稳定代码，对非稳定代码尽可能区分异常类型"),r("td")]),r("tr",null,[r("td"),r("td",null,"4"),r("td",null,"捕获异常是为了处理它，不要捕获后什么都不做；最外层必须处理异常"),r("td",null,"spring 中切面兜底包装异常")]),r("tr",null,[r("td"),r("td",null,"5"),r("td",null,"事务场景中，catch异常后如需回滚，要手动回滚事务"),r("td")]),r("tr",null,[r("td"),r("td",null,"6"),r("td",null,"finally块必须对资源对象、流对象进行关闭，有异常也要做try-catch"),r("td")]),r("tr",null,[r("td"),r("td",null,"7"),r("td",null,"不要在finally块中使用return"),r("td")]),r("tr",null,[r("td"),r("td",null,"8"),r("td",null,"捕获异常与抛异常必须完全匹配，或捕获异常是抛异常的父类"),r("td")]),r("tr",null,[r("td"),r("td",null,"9"),r("td",null,"调用RPC、二方包或动态生成类的方法时，用Throwable类捕获异常"),r("td")]),r("tr",null,[r("td"),r("td"),r("td"),r("td")]),r("tr",null,[r("td",null,"日志规约"),r("td",null,"1"),r("td",null,"使用日志框架API，不直接使用日志系统API"),r("td",null,"推荐SLF4J")]),r("tr",null,[r("td"),r("td",null,"2"),r("td",null,"日志文件至少保存15天，当天日志和历史日志命名规范"),r("td")]),r("tr",null,[r("td"),r("td",null,"3"),r("td",null,"特定日志需保存不少于6个月，并进行网络多机备份"),r("td",null,"法律要求")]),r("tr",null,[r("td"),r("td",null,"4"),r("td",null,"扩展日志命名规范：appName_logType_logName.log"),r("td")]),r("tr",null,[r("td"),r("td",null,"5"),r("td",null,"日志输出中字符串拼接使用占位符方式"),r("td",null,"提高性能")]),r("tr",null,[r("td"),r("td",null,"6"),r("td",null,"trace/debug/info级别日志输出前进行日志级别判断"),r("td",null,"避免性能损耗")]),r("tr",null,[r("td"),r("td",null,"7"),r("td",null,"避免重复打印日志，设置additivity=false"),r("td")]),r("tr",null,[r("td"),r("td",null,"8"),r("td",null,"生产环境禁止使用System.out或System.err输出"),r("td",null,"instinctive")]),r("tr",null,[r("td"),r("td",null,"9"),r("td",null,"异常日志应包含案发现场信息和异常堆栈信息"),r("td",null,"打 e")]),r("tr",null,[r("td"),r("td",null,"10"),r("td",null,"日志打印时禁止直接用JSON工具将对象转换成String"),r("td",null,"但是这样很方便啊")]),r("tr",null,[r("td"),r("td"),r("td"),r("td")]),r("tr",null,[r("td",null,"单元测试"),r("td",null,"1"),r("td",null,"单元测试必须遵守AIR原则（自动化、独立性、可重复）"),r("td",null,"自动化工程做的很棒")]),r("tr",null,[r("td"),r("td",null,"2"),r("td",null,"单元测试应全自动执行，非交互式，使用assert验证"),r("td",null,"自动化工程做的很棒")]),r("tr",null,[r("td"),r("td",null,"3"),r("td",null,"保持单元测试的独立性，测试用例间不能互相调用或依赖执行顺序"),r("td",null,"自动化工程做的很棒")]),r("tr",null,[r("td"),r("td",null,"4"),r("td",null,"单元测试可重复执行，不受外界环境影响"),r("td",null,"自动化工程做的很棒")]),r("tr",null,[r("td"),r("td",null,"5"),r("td",null,"单元测试粒度要小，最多是类级别，一般是方法级别"),r("td",null,"自动化工程做的很棒")]),r("tr",null,[r("td"),r("td",null,"6"),r("td",null,"核心业务、应用、模块的增量代码要确保单元测试通过"),r("td",null,"自动化工程做的很棒")]),r("tr",null,[r("td"),r("td",null,"7"),r("td",null,"单元测试代码必须写在src/test/java目录下"),r("td")]),r("tr",null,[r("td"),r("td"),r("td"),r("td")]),r("tr",null,[r("td",null,"安全规约"),r("td",null,"1"),r("td",null,"用户个人页面或功能必须进行权限控制校验"),r("td")]),r("tr",null,[r("td"),r("td",null,"2"),r("td",null,"用户敏感数据必须脱敏后才能展示"),r("td",null,"手机号加密")]),r("tr",null,[r("td"),r("td",null,"3"),r("td",null,"SQL参数必须使用参数绑定或METADATA字段值限定，防止SQL注入"),r("td")]),r("tr",null,[r("td"),r("td",null,"4"),r("td",null,"用户请求的任何参数必须做有效性验证"),r("td")]),r("tr",null,[r("td"),r("td",null,"5"),r("td",null,"禁止向HTML页面输出未经安全过滤或未正确转义的用户数据"),r("td",null,"防XSS攻击")]),r("tr",null,[r("td"),r("td",null,"6"),r("td",null,"表单、AJAX提交必须执行CSRF安全验证"),r("td")]),r("tr",null,[r("td"),r("td",null,"7"),r("td",null,"URL外部重定向的目标地址必须执行白名单过滤"),r("td")]),r("tr",null,[r("td"),r("td",null,"8"),r("td",null,"使用平台资源时必须实现正确的防重放机制"),r("td")]),r("tr",null,[r("td"),r("td",null,"9"),r("td",null,"文件上传功能需要对文件大小、类型进行严格检查和控制"),r("td",null,"北极星传 excel")]),r("tr",null,[r("td"),r("td",null,"10"),r("td",null,"配置文件中的密码需要加密"),r("td",null,"那次配的那个 token？")]),r("tr",null,[r("td"),r("td"),r("td"),r("td")]),r("tr",null,[r("td",null,"二方库依赖"),r("td",null,"1"),r("td",null,"GAV定义规则：GroupId、ArtifactId、Version的格式规范"),r("td")]),r("tr",null,[r("td"),r("td",null,"2"),r("td",null,"版本号命名方式：主版本号.次版本号.修订号"),r("td")]),r("tr",null,[r("td"),r("td",null,"3"),r("td",null,"线上应用不依赖SNAPSHOT版本，正式发布的类库使用RELEASE版本"),r("td",null,"instinctive")]),r("tr",null,[r("td"),r("td",null,"4"),r("td",null,"二方库新增或升级时，保持其他jar包仲裁结果不变"),r("td")]),r("tr",null,[r("td"),r("td",null,"5"),r("td",null,"二方库接口返回值不允许使用枚举类型或包含枚举类型的POJO对象"),r("td")]),r("tr",null,[r("td"),r("td",null,"6"),r("td",null,"二方库定制包的命名方式规范"),r("td")]),r("tr",null,[r("td"),r("td",null,"7"),r("td",null,"依赖二方库群时，必须定义统一的版本变量"),r("td",null,"instinctive")]),r("tr",null,[r("td"),r("td",null,"8"),r("td",null,"禁止在子项目的pom依赖中出现相同GroupId和ArtifactId但不同Version"),r("td")]),r("tr",null,[r("td"),r("td"),r("td"),r("td")]),r("tr",null,[r("td",null,"服务器"),r("td",null,"1"),r("td",null,"调用远程操作必须有超时设置。"),r("td",null,"转正答辩说的")]),r("tr",null,[r("td"),r("td"),r("td"),r("td")]),r("tr",null,[r("td",null,"设计规约"),r("td",null,"1"),r("td",null,"存储方案和底层数据结构设计需评审并形成文档"),r("td")]),r("tr",null,[r("td"),r("td",null,"2"),r("td",null,"复杂需求分析使用用例图表达,User>1类且UseCase>5个"),r("td")]),r("tr",null,[r("td"),r("td",null,"3"),r("td",null,"业务对象状态超过3个时使用状态图表达"),r("td")]),r("tr",null,[r("td"),r("td",null,"4"),r("td",null,"功能调用链涉及对象超过3个时使用时序图表达"),r("td")]),r("tr",null,[r("td"),r("td",null,"5"),r("td",null,"模型类超过5个且依赖关系复杂时使用类图表达"),r("td")]),r("tr",null,[r("td"),r("td",null,"6"),r("td",null,"多对象协作的复杂处理流程使用活动图表示,超过2个对象存在协作关系"),r("td",null,"泳道图")]),r("tr",null,[r("td"),r("td",null,"7"),r("td",null,"识别弱依赖并设计降级和应急预案"),r("td",null,"强弱依赖")])])],-1)),t[132]||(t[132]=s("<p>GitHub 上最牛逼的 10 个 Java 项目，号称 &quot;Star 收割机 &quot;，Dubbo 只能排 12 - 路人甲 java 的文章 - 知乎<br> https://zhuanlan.zhihu.com/p/120913117</p><ol><li>一个编程语言，半解析、半编译执行，</li><li>由一个编译器和一个解析器组成，这俩都是用 c 写的，所以了解 C 的作用没啥坏处</li><li>java 自己最后会用 javac 生成自己的运行时环境 jre</li><li>编译器用于将人类可读的源代码编译成人类不可读的半编译代码（字节码）</li><li>解析器是一个写成了虚拟机的解析器，本质上还是一个可执行程序，类似 python、perl</li><li>基础库里头实现了很多比较复杂的数据结构，比如 hash，比 c 的基础库 (libc 里头的）丰富多了</li><li>解析器是线程的</li><li>解析器里头有个线程专门干 gc（垃圾收集）的事，因此不用像 c 那样操心 malloc、free</li><li>解析器没有交互的执行方式，只能运行代码</li><li>java 解析器自称虚拟机（vm，virtual machine）</li><li>java 在很多方面像一个 &quot; 虚拟机 &quot;：它有自己的状态收集命令，如 jstat，jmap</li><li>java 又是一个编译环境，所以有个叫 javac (java compiler？）的东西</li></ol><table><thead><tr><th>单词</th><th>次数</th><th>中文翻译</th></tr></thead><tbody><tr><td><code>legitimate&lt;br&gt;</code></td><td></td><td><code>合法的&lt;br&gt;</code></td></tr><tr><td><code>verbosity&lt;br&gt;</code></td><td></td><td><code>繁琐&lt;br&gt;</code></td></tr><tr><td>generics</td><td>81</td><td>泛型（复数）</td></tr><tr><td>wildcard</td><td>75</td><td>通配符</td></tr><tr><td>constants</td><td>70</td><td>常量</td></tr><tr><td>jls</td><td>56</td><td>Java语言规范（Java Language Specification）</td></tr><tr><td>overloading</td><td>53</td><td>重载</td></tr><tr><td>primitives</td><td>50</td><td>原始类型</td></tr><tr><td>elvis</td><td>49</td><td>Elvis运算符（条件表达式?:）</td></tr><tr><td>readresolve</td><td>45</td><td>读取解析（反序列化相关方法）</td></tr><tr><td>judiciously</td><td>44</td><td>明智地</td></tr><tr><td>invariants</td><td>44</td><td>不变量</td></tr><tr><td>obsolete</td><td>36</td><td>过时的</td></tr><tr><td>validity</td><td>34</td><td>有效性</td></tr><tr><td>skeletal</td><td>32</td><td>骨架的（通常指接口的部分实现）</td></tr><tr><td>omitted</td><td>27</td><td>省略的</td></tr><tr><td>arbitrary</td><td>24</td><td>任意的</td></tr><tr><td>ordinal</td><td>23</td><td>序数的</td></tr><tr><td>meth</td><td>23</td><td>方法（method的缩写）</td></tr><tr><td>colorpoint</td><td>22</td><td>彩色点（通常用作示例类名）</td></tr><tr><td>invocations</td><td>21</td><td>调用</td></tr><tr><td>modifier</td><td>21</td><td>修饰符</td></tr><tr><td>calories</td><td>20</td><td>卡路里（通常用作示例属性名）</td></tr><tr><td>le</td><td>20</td><td>小于等于</td></tr></tbody></table><table><thead><tr><th>单词</th><th>次数</th><th>中文翻译</th></tr></thead><tbody><tr><td>se</td><td>19</td><td>可能是缩写，具体含义需要上下文</td></tr><tr><td>subclassing</td><td>19</td><td>子类化</td></tr><tr><td>thod</td><td>19</td><td>可能是&quot;method&quot;的拼写错误</td></tr><tr><td>tim</td><td>18</td><td>可能是&quot;time&quot;的缩写或拼写错误</td></tr><tr><td>needed</td><td>18</td><td>需要的</td></tr><tr><td>ways</td><td>18</td><td>方式</td></tr><tr><td>pe</td><td>18</td><td>可能是缩写，具体含义需要上下文</td></tr><tr><td>atop</td><td>18</td><td>在...之上</td></tr><tr><td>applies</td><td>18</td><td>适用</td></tr><tr><td>valueof</td><td>18</td><td>值（通常指静态工厂方法）</td></tr><tr><td>frameworks</td><td>18</td><td>框架</td></tr><tr><td>injection</td><td>18</td><td>注入</td></tr><tr><td>indicates</td><td>18</td><td>表明</td></tr><tr><td>assuming</td><td>18</td><td>假设</td></tr><tr><td>assertionerror</td><td>18</td><td>断言错误</td></tr><tr><td>nonfinal</td><td>18</td><td>非final的</td></tr><tr><td>overridden</td><td>18</td><td>被重写的</td></tr><tr><td>caseinsensitivestring</td><td>18</td><td>不区分大小写的字符串</td></tr><tr><td>unequal</td><td>18</td><td>不相等的</td></tr><tr><td>invoking</td><td>18</td><td>调用</td></tr><tr><td>printf</td><td>18</td><td>格式化打印</td></tr><tr><td>documented</td><td>18</td><td>已文档化的</td></tr><tr><td>maps</td><td>18</td><td>映射（复数）</td></tr><tr><td>bigram</td><td>18</td><td>二元语法</td></tr><tr><td>oracle</td><td>17</td><td>Oracle（公司名或数据库名）</td></tr><tr><td>es</td><td>17</td><td>可能是复数形式的缩写</td></tr><tr><td>imple</td><td>17</td><td>可能是&quot;implement&quot;的缩写</td></tr><tr><td>underlying</td><td>17</td><td>底层的</td></tr><tr><td>singletons</td><td>17</td><td>单例（复数）</td></tr><tr><td>transient</td><td>17</td><td>瞬时的（Java关键字，用于序列化）</td></tr><tr><td>internally</td><td>17</td><td>内部地</td></tr><tr><td>greater</td><td>17</td><td>更大的</td></tr><tr><td>needs</td><td>17</td><td>需要（复数）</td></tr><tr><td>throwing</td><td>17</td><td>抛出</td></tr><tr><td>consequences</td><td>17</td><td>后果</td></tr><tr><td>overloadings</td><td>17</td><td>重载（复数）</td></tr><tr><td>invariant</td><td>17</td><td>不变量</td></tr><tr><td>adhere</td><td>16</td><td>遵守</td></tr><tr><td>excessive</td><td>16</td><td>过度的</td></tr><tr><td>safevarargs</td><td>16</td><td>安全可变参数（注解）</td></tr><tr><td>sodium</td><td>16</td><td>钠（可能用作示例）</td></tr><tr><td>prone</td><td>16</td><td>易于...的</td></tr><tr><td>annotated</td><td>16</td><td>注解的</td></tr><tr><td>deserialize</td><td>16</td><td>反序列化</td></tr><tr><td>alien</td><td>16</td><td>外来的</td></tr></tbody></table><p>se: 19<br> subclassing: 19<br> thod: 19<br> tim: 18<br> needed: 18<br> ways: 18<br> changed: 18<br> failed: 18<br> terms: 18<br> pe: 18<br> atop: 18<br> applies: 18<br> valueof: 18<br> frameworks: 18<br> injection: 18<br> indicates: 18<br> assuming: 18<br> assertionerror: 18<br> nonfinal: 18<br> overridden: 18<br> caseinsensitivestring: 18<br> unequal: 18<br> invoking: 18<br> printf: 18<br> documented: 18<br> maps: 18<br> caller: 18<br> bigram: 18<br> stringlist: 18<br> oracle: 17<br> es: 17<br> imple: 17<br> underlying: 17<br> ods: 17<br> singletons: 17<br> transient: 17<br> internally: 17</p><p>pn: 17<br> overloadings: 17<br> invariant: 17</p><p>adhere: 16<br> excessive: 16<br> ce: 16</p><p>safevarargs: 16<br> disadvantages: 16<br> sub: 16<br> shouldn: 16<br> sodium: 16<br> desired: 16<br> checks: 16<br> lets: 16<br> prone: 16</p><p>forwarding: 16<br> isempty: 16<br> lines: 16<br> param: 16<br> annotated: 16<br> char: 16<br> deserialize: 16<br> alien: 16<br> ng: 15<br> hierarchies: 15<br> exceptional: 15<br> ar: 15<br> ex: 15<br> h: 15<br> http: 15<br> kinds: 15<br> chosen: 15<br> ty: 15<br> concise: 15<br> para: 15<br> sequences: 15<br> comp: 15<br> changing: 15<br> immutability: 15<br> ns: 15<br> incompatible: 15</p><p>cleanly: 15<br> min: 15<br> groups: 15<br> utensil: 15<br> mersenne: 15<br> isbn: 14<br> utilities: 14<br> ly: 14</p><p>ents: 14<br> ment: 14<br> yield: 14<br> compatibility: 14<br> internals: 14<br> wh: 14<br> unrelated: 14</p><p>primes: 14<br> funds: 14<br> bloch: 13<br> concatenation: 13<br> facilities: 13<br> variants: 13<br> builders: 13<br> recursive: 13<br> chaining: 13<br> situations: 13<br> literal: 13<br> silently: 13<br> leaks: 13<br> clearer: 13<br> areacode: 13<br> linenum: 13</p><p>locking: 13<br> unsafe: 13<br> reifiable: 13<br> payrate: 13<br> elementtype: 13<br> exc: 13<br> foo: 13<br> setobserver: 13<br> contents: 12<br> caution: 12<br> interf: 12<br> messages: 12<br> alternatives: 12<br> defensively: 12<br> doug: 12<br> ides: 12<br> reusable: 12<br> ments: 12<br> ts: 12<br> consisting: 12<br> jdk: 12<br> mentation: 12<br> er: 12<br> guarantees: 12<br> construc: 12<br> forced: 12<br> allowing: 12<br> caveat: 12<br> implementa: 12<br> recursively: 12<br> countdown: 12<br> heterogeneous: 12<br> performs: 12<br> writeobject: 12<br> processhandle: 12<br> gettime: 12<br> json: 12<br> stealer: 12<br> ation: 11<br> rs: 11<br> wildcards: 11<br> extensible: 11<br> pa: 11<br> executors: 11<br> nd: 11<br> ge: 11<br> structured: 11<br> passes: 11<br> increased: 11<br> avoiding: 11<br> releases: 11<br> describing: 11<br> addison: 11<br> wesley: 11<br> improved: 11<br> reused: 11<br> boilerplate: 11<br> seems: 11<br> controlled: 11<br> noninstantiable: 11<br> implemen: 11<br> tation: 11<br> docu: 11<br> depending: 11<br> ob: 11<br> ss: 11<br> lazily: 11<br> ct: 11<br> attempts: 11<br> statements: 11<br> inter: 11<br> characters: 11<br> clonenotsupportedexception: 11<br> sorted: 11<br> ones: 11<br> supported: 11<br> aslist: 11<br> stringbuilder: 11<br> objectoutputstream: 11<br> ent: 11<br> flavor: 11<br> pushall: 11<br> popall: 11<br> applied: 11<br> paytype: 11<br> radically: 11<br> bulk: 10<br> inc: 10<br> loosely: 10<br> parame: 10<br> telescoping: 10<br> subtle: 10<br> calzone: 10<br> applicable: 10<br> clutter: 10<br> dst: 10<br> omit: 10<br> attempted: 10</p><p>tempted: 10<br> reflective: 10</p><p>inference: 10</p><p>flaws: 10<br> unaryoperator: 10<br> liveness: 10</p><p>observableset: 10<br> pst: 10</p><hr><p>printed: 9<br> taken: 9<br> mutability: 9<br> ordinals: 9<br> ties: 9<br> computing: 9<br> stroustrup: 9<br> differs: 9<br> complexity: 9<br> lea: 9<br> days: 9<br> wr: 9<br> refactoring: 9<br> peter: 9<br> putting: 9<br> usable: 9<br> ers: 9<br> collec: 9<br> actions: 9<br> ha: 9<br> knows: 9<br> ion: 9<br> harder: 9<br> javabeans: 9<br> parameterless: 9<br> ter: 9<br> demonstrated: 9<br> ch: 9<br> mentioned: 9<br> unintentionally: 9<br> instantiable: 9<br> ility: 9<br> ass: 9<br> spellchecker: 9<br> em: 9<br> matches: 9<br> seconds: 9<br> jvm: 9<br> pools: 9<br> ensurecapacity: 9<br> ke: 9<br> replacement: 9<br> getting: 9<br> terminate: 9<br> malicious: 9<br> unacceptable: 9<br> properties: 9<br> symmetry: 9<br> un: 9<br> caused: 9<br> affected: 9<br> arg: 9<br> ensures: 9<br> guava: 9<br> func: 9<br> representa: 9<br> fragile: 9<br> modifying: 9<br> sorting: 9<br> permitted: 9<br> extractor: 9<br> encapsulation: 9<br> burden: 9<br> fro: 9<br> newly: 9<br> causing: 9<br> concerning: 9<br> established: 9<br> implspec: 9</p><p>removeif: 9<br> literals: 9<br> supertype: 9<br> choicearray: 9<br> progra: 9<br> pecs: 9<br> putfavorite: 9<br> surprisingly: 9<br> prefixes: 9<br> combined: 9<br> plasma: 9<br> passing: 9<br> retention: 9<br> isannotationpresent: 9<br> performing: 9<br> scanner: 9<br> iterative: 9<br> freq: 9<br> concurrenthashmap: 9<br> parallelism: 9<br> representations: 9<br> tags: 9<br> minimizing: 9<br> iterating: 9<br> calculations: 9<br> itemsbought: 9<br> applications: 9<br> removeobserver: 9<br> locks: 9<br> uid: 9<br> serializationproxy: 9<br> javase: 9<br> preface: 8<br> containers: 8<br> la: 8<br> recoverable: 8<br> ple: 8<br> gosling: 8<br> fa: 8<br> took: 8<br> joe: 8<br> io: 8<br> referenced: 8<br> modules: 8<br> avoided: 8<br> spec: 8<br> reasons: 8<br> implem: 8<br> couldn: 8<br> describes: 8<br> reflectively: 8<br> newinstance: 8<br> br: 8<br> cocacola: 8<br> increases: 8<br> tor: 8<br> workaround: 8<br> nypizza: 8<br> su: 8<br> paramete: 8<br> approaches: 8<br> impersonator: 8<br> noninstantiability: 8<br> executed: 8<br> easiest: 8<br> relies: 8<br> eligible: 8<br> counterpoint: 8<br> obje: 8<br> arbitrarily: 8<br> portable: 8<br> thods: 8</p><p>numjunkpiles: 8<br> cleanable: 8<br> blocks: 8<br> designers: 8<br> equivalence: 8<br> versa: 8<br> turns: 8<br> ace: 8<br> canonical: 8<br> lly: 8<br> multiplication: 8<br> anagrams: 8<br> ph: 8<br> flaw: 8<br> ja: 8<br> cla: 8<br> extended: 8<br> ble: 8<br> numerical: 8<br> prevents: 8<br> correctness: 8<br> inte: 8<br> transitions: 8<br> stringbuffer: 8<br> cons: 8<br> computes: 8<br> instrumentedhashset: 8<br> eliminating: 8<br> overrideme: 8<br> writereplace: 8<br> faces: 8<br> noting: 8<br> enumerated: 8<br> lo: 8<br> stores: 8<br> rnd: 8<br> nextint: 8<br> delayed: 8<br> indexed: 8<br> excep: 8<br> tokens: 8<br> suits: 8<br> typographical: 8<br> payrollday: 8<br> minsworked: 8<br> runtimeexception: 8<br> getcause: 8<br> filtering: 8<br> alphabetize: 8<br> flatmap: 8<br> overload: 8<br> allocating: 8<br> concurrently: 8<br> descriptions: 8<br> deadlock: 8<br> notifyelementadded: 8<br> deserializing: 8<br> protobuf: 8<br> invalidobjectexception: 8<br> defaultreadobject: 8<br> nov: 8<br> acm: 8<br> letters: 7<br> states: 7<br> www: 7<br> cindy: 7<br> acknowledgments: 7<br> emulate: 7<br> beware: 7<br> col: 7<br> structures: 7<br> mu: 7<br> released: 7<br> ide: 7<br> labeled: 7<br> copied: 7<br> robust: 7<br> technically: 7<br> writes: 7<br> elemen: 7<br> precede: 7<br> ap: 7<br> duplicate: 7<br> requested: 7<br> entation: 7<br> includes: 7<br> needn: 7<br> argu: 7<br> getinstance: 7<br> bufferedreader: 7<br> appears: 7<br> identically: 7<br> typed: 7<br> ject: 7<br> topping: 7<br> lacks: 7<br> sauceinside: 7<br> instan: 7<br> inaccessible: 7<br> implicitly: 7<br> cally: 7<br> arguably: 7<br> keyset: 7<br> reduces: 7<br> sufficiently: 7<br> maintaining: 7<br> penalty: 7<br> emptystackexception: 7<br> potentially: 7<br> callbacks: 7<br> storing: 7<br> ey: 7<br> refrain: 7<br> terminates: 7<br> eases: 7<br> preventing: 7<br> holds: 7<br> demonstrates: 7<br> conjunction: 7<br> didn: 7<br> abstractlist: 7<br> dangers: 7<br> od: 7<br> wo: 7<br> emulated: 7<br> autovalue: 7<br> overrides: 7<br> applying: 7<br> quadratic: 7<br> mixin: 7<br> ose: 7<br> compelling: 7<br> extendable: 7<br> justified: 7<br> imposed: 7<br> comparators: 7<br> comparingint: 7<br> thencomparingint: 7<br> ations: 7<br> intern: 7<br> larger: 7<br> semantics: 7<br> perfor: 7<br> mance: 7<br> ensuring: 7<br> attributes: 7<br> getkey: 7<br> org: 7<br> physicalconstants: 7<br> numeric: 7<br> indicating: 7<br> noted: 7<br> calculator: 7<br> guaran: 7<br> erasure: 7<br> annota: 7<br> annotate: 7<br> wa: 7<br> elem: 7<br> mo: 7<br> avoids: 7<br> parsedouble: 7<br> rounding: 7<br> bodies: 7<br> verb: 7<br> junit: 7<br> retentionpolicy: 7<br> processor: 7<br> mingroupsize: 7<br> append: 7<br> encoding: 7<br> counting: 7<br> optimizations: 7<br> getcheeses: 7<br> preconditions: 7<br> monetary: 7<br> fatalerror: 7<br> jmh: 7<br> grammatical: 7<br> recovery: 7<br> lowerbound: 7<br> upperbound: 7<br> exclusion: 7<br> interruptedexception: 7<br> nextserialnumber: 7<br> addobserver: 7<br> waits: 7<br> denial: 7<br> serializing: 7<br> joshua: 6<br> boston: 6<br> asses: 6<br> seria: 6<br> lized: 6<br> proxies: 6<br> tried: 6<br> imperative: 6<br> offers: 6<br> james: 6<br> sp: 6<br> freely: 6<br> continued: 6<br> captures: 6<br> served: 6<br> li: 6<br> reviewers: 6<br> brian: 6<br> peierls: 6<br> suggestions: 6<br> mike: 6<br> ite: 6<br> illustrated: 6<br> prog: 6<br> openjdk: 6<br> constructed: 6<br> viewed: 6<br> subclassed: 6<br> pays: 6<br> inst: 6<br> simulated: 6<br> terface: 6<br> happening: 6<br> attempting: 6<br> checker: 6<br> needlessly: 6<br> deprecated: 6<br> isromannumeral: 6<br> ity: 6<br> footprint: 6<br> failing: 6<br> copyof: 6<br> exclude: 6<br> nce: 6<br> linkedhashmap: 6<br> removeeldestentry: 6<br> finalization: 6<br> uncaught: 6<br> incr: 6<br> illegalstateexception: 6<br> peer: 6<br> ings: 6<br> firstlineoffile: 6<br> buf: 6<br> debugging: 6<br> inherited: 6<br> enables: 6<br> cis: 6<br> transitivity: 6<br> cp: 6<br> url: 6<br> derived: 6<br> genera: 6<br> shou: 6<br> ld: 6<br> provision: 6<br> insertion: 6<br> computed: 6<br> unboxing: 6<br> ou: 6<br> goes: 6<br> generating: 6<br> represen: 6<br> discusses: 6<br> extralinguistic: 6<br> intent: 6<br> deepcopy: 6<br> graph: 6<br> replacing: 6<br> yum: 6<br> whic: 6<br> permits: 6<br> specifies: 6<br> ny: 6<br> optimized: 6<br> ible: 6<br> permissible: 6<br> costs: 6<br> preexisting: 6<br> wrapped: 6<br> allowed: 6<br> fromindex: 6<br> tr: 6<br> getvalue: 6<br> placed: 6<br> digits: 6<br> pi: 6<br> piler: 6<br> expressions: 6<br> colle: 6</p><p>unsafeadd: 6<br> stringlists: 6<br> threadlocalrandom: 6<br> repres: 6<br> mnemonic: 6<br> anno: 6<br> getannotation: 6<br> surfacegravity: 6<br> overtime: 6<br> minutesworked: 6<br> numberofmusicians: 6<br> applystyles: 6<br> extendedoperation: 6<br> invocationtargetexception: 6<br> wrappedexc: 6<br> arithmeticexception: 6<br> tolowercase: 6<br> binaryoperator: 6<br> mp: 6<br> classifier: 6<br> charsequence: 6<br> intstream: 6<br> rangeclosed: 6<br> maptoobj: 6<br> overloaded: 6<br> cheeses: 6<br> naturalorder: 6<br> observable: 6<br> linkedhashset: 6<br> classnotfoundexception: 6<br> backgroundthread: 6<br> generateserialnumber: 6<br> queues: 6<br> conditionally: 6<br> getfield: 6<br> priorities: 6<br> nontransient: 6<br> mutableperiod: 6<br> wed: 6<br> favoritesongs: 6<br> san: 5<br> ith: 5<br> reserved: 5<br> prohibited: 5<br> referenc: 5<br> ta: 5<br> ons: 5<br> aces: 5<br> rmation: 5<br> understood: 5<br> supports: 5<br> bracha: 5<br> microsystems: 5<br> paradigm: 5<br> practices: 5<br> led: 5<br> efforts: 5<br> improving: 5<br> iting: 5<br> decades: 5<br> letting: 5<br> william: 5<br> othe: 5<br> embarrassments: 5<br> david: 5<br> stands: 5<br> principles: 5<br> dependencies: 5<br> si: 5<br> regarded: 5<br> referred: 5<br> clie: 5<br> guar: 5<br> tations: 5<br> backed: 5<br> ably: 5<br> ters: 5<br> tors: 5<br> requ: 5<br> toppings: 5<br> addtopping: 5<br> covariant: 5<br> oblem: 5<br> po: 5<br> handful: 5<br> sophisticated: 5<br> ted: 5<br> strictly: 5<br> ab: 5<br> graphs: 5<br> dagger: 5<br> affects: 5<br> reusing: 5<br> holes: 5<br> unnecessarily: 5<br> collected: 5<br> reclaimed: 5<br> simp: 5<br> ence: 5<br> retained: 5<br> nulling: 5<br> norm: 5<br> promptly: 5<br> theoretical: 5<br> corrupted: 5<br> nondeterministic: 5<br> ect: 5<br> dire: 5<br> finalize: 5<br> termination: 5<br> behaved: 5<br> inputstream: 5<br> historically: 5<br> readline: 5<br> suppressed: 5<br> functioning: 5<br> inherently: 5<br> confronted: 5<br> ignores: 5<br> incorrect: 5<br> relations: 5<br> preserving: 5<br> liskov: 5<br> substitution: 5<br> onunitcircle: 5<br> subtypes: 5<br> satisfactory: 5<br> timestamp: 5<br> mixing: 5<br> unreliable: 5<br> oper: 5<br> num: 5<br> overly: 5<br> id: 5<br> tables: 5<br> zation: 5<br> associ: 5<br> fixing: 5<br> meant: 5<br> achieving: 5<br> eld: 5<br> caching: 5<br> cached: 5<br> regions: 5<br> repre: 5<br> assert: 5<br> programmatic: 5<br> cloning: 5<br> modifies: 5<br> eliminates: 5<br> ferences: 5<br> pairs: 5<br> alphabetized: 5<br> algorithms: 5<br> sgn: 5<br> implies: 5<br> ized: 5<br> outfitted: 5<br> hides: 5<br> underscores: 5<br> rray: 5<br> unexported: 5<br> awt: 5<br> initia: 5<br> reducing: 5<br> bility: 5<br> moby: 5<br> bitset: 5<br> implementors: 5<br> combining: 5<br> invari: 5<br> reminder: 5<br> lass: 5<br> consuming: 5<br> vector: 5<br> forwardingset: 5<br> ding: 5<br> deciding: 5<br> toindex: 5<br> substantially: 5<br> listiterator: 5<br> decisions: 5<br> indirectly: 5<br> definitions: 5<br> songwriter: 5<br> ese: 5<br> flex: 5<br> di: 5<br> limits: 5<br> provid: 5<br> ementation: 5<br> synchronizedcollection: 5<br> concurrentmodificationexception: 5<br> removing: 5<br> midst: 5<br> risks: 5<br> enhances: 5<br> ction: 5<br> inserts: 5<br> erased: 5<br> pre: 5<br> stamps: 5<br> ele: 5<br> admittedly: 5<br> generi: 5<br> lark: 5<br> infer: 5<br> cal: 5<br> ol: 5<br> delayqueue: 5<br> mutually: 5<br> numberstack: 5<br> doubles: 5<br> scheduledfuture: 5<br> compiled: 5<br> annotationtype: 5<br> cards: 5<br> fromstring: 5<br> calculation: 5<br> basepay: 5<br> weekday: 5<br> derive: 5<br> arrayindexoutofboundsexception: 5<br> basicoperation: 5<br> meta: 5<br> exctype: 5<br> succinct: 5<br> parseint: 5<br> demands: 5<br> eldest: 5<br> executorservice: 5<br> chars: 5<br> experts: 5<br> isprobableprime: 5<br> starts: 5<br> tolist: 5<br> spliterator: 5<br> suffixes: 5<br> cpu: 5<br> locality: 5<br> mod: 5<br> assertions: 5<br> protects: 5<br> accessing: 5<br> shortening: 5<br> loaded: 5<br> unboxed: 5<br> substitutes: 5<br> ignoring: 5<br> distinguished: 5<br> throwables: 5<br> layers: 5<br> stopthread: 5<br> deadlocks: 5<br> copyonwritearraylist: 5<br> synchronizers: 5<br> nanotime: 5<br> unconditionally: 5<br> computefieldvalue: 5<br> seri: 5<br> deseri: 5<br> serialversionuid: 5<br> alized: 5<br> defaultwriteobject: 5<br> serializedform: 5<br> bos: 5<br> elvisstealer: 5<br> github: 5<br> proceedings: 5<br> francisco: 4<br> desi: 4<br> expressed: 4<br> quantities: 4<br> pearson: 4<br> obtained: 4<br> likewise: 4<br> inheritanc: 4<br> ous: 4<br> stre: 4<br> nulls: 4<br> answers: 4<br> customary: 4<br> suppressing: 4<br> books: 4<br> coding: 4<br> operates: 4<br> spent: 4<br> bjarne: 4<br> abstractions: 4<br> editions: 4<br> happened: 4<br> gilad: 4<br> immensely: 4<br> expectations: 4<br> appendix: 4<br> idioms: 4<br> mented: 4<br> maintained: 4<br> developers: 4<br> ideas: 4<br> turned: 4<br> bowbeer: 4<br> darcy: 4<br> marks: 4<br> dan: 4<br> tom: 4<br> saved: 4<br> sounding: 4<br> bo: 4<br> encouraging: 4<br> eac: 4<br> reinhold: 4<br> ining: 4<br> john: 4<br> rd: 4<br> shows: 4<br> smaller: 4<br> kept: 4<br> detected: 4<br> accesses: 4<br> translates: 4<br> referring: 4<br> pes: 4<br> nonpublic: 4<br> regularenumset: 4<br> providers: 4<br> consid: 4<br> nonzero: 4<br> meters: 4<br> ting: 4<br> involving: 4<br> suited: 4<br> hier: 4<br> york: 4<br> wherein: 4<br> casting: 4<br> ement: 4<br> leavethebuilding: 4<br> accessibleobject: 4<br> setaccessible: 4<br> instantiation: 4<br> grouping: 4<br> vides: 4<br> privat: 4<br> lexicon: 4<br> guice: 4<br> ofthe: 4<br> roman: 4<br> rt: 4<br> constructs: 4<br> popped: 4<br> arra: 4<br> susceptible: 4<br> caches: 4<br> becoming: 4<br> discovered: 4<br> profiler: 4<br> unpredictable: 4<br> reclaim: 4<br> requiring: 4<br> mentations: 4<br> antees: 4<br> authors: 4<br> prov: 4<br> distributed: 4<br> flawed: 4<br> corrupt: 4<br> ck: 4<br> fileinputstream: 4<br> circularity: 4<br> outputstream: 4<br> originals: 4<br> notation: 4<br> ere: 4<br> compares: 4<br> reflexivity: 4<br> insensitive: 4<br> interoperability: 4<br> na: 4<br> violation: 4<br> points: 4<br> trivial: 4<br> computations: 4<br> operand: 4<br> rangecheck: 4<br> links: 4<br> jenny: 4<br> degenerate: 4<br> tic: 4<br> follows: 4<br> lue: 4<br> nal: 4<br> thre: 4<br> impractical: 4<br> unspecified: 4<br> superclasses: 4<br> modifiers: 4<br> sses: 4<br> bears: 4<br> comprise: 4<br> valu: 4<br> duplicates: 4<br> interoperate: 4<br> signum: 4<br> imposes: 4<br> rn: 4<br> operators: 4<br> conciseness: 4<br> analogues: 4<br> ne: 4<br> ieee: 4<br> stem: 4<br> rce: 4<br> disastrous: 4<br> mutators: 4<br> restricted: 4<br> accomplished: 4<br> multip: 4<br> fina: 4<br> bits: 4<br> multistep: 4<br> unchanged: 4<br> externally: 4<br> der: 4<br> inappropriately: 4<br> subc: 4<br> keeps: 4<br> incidentally: 4<br> deta: 4<br> inserting: 4<br> pieces: 4<br> enabled: 4<br> constructo: 4<br> violations: 4<br> unsupportedoperationexception: 4<br> prohibiting: 4<br> classe: 4<br> retrofitted: 4<br> synchr: 4<br> critically: 4<br> shortcomings: 4<br> initializes: 4<br> ber: 4<br> javac: 4<br> precedes: 4<br> ile: 4<br> tries: 4<br> recompile: 4<br> cs: 4<br> reified: 4<br> constraints: 4<br> intlist: 4<br> succeeds: 4<br> choicelist: 4<br> parameterize: 4<br> zed: 4<br> generify: 4<br> ctions: 4<br> comparability: 4<br> exte: 4<br> convoluted: 4<br> swaphelper: 4<br> constitutes: 4<br> functio: 4<br> flatten: 4<br> platforms: 4<br> wrappers: 4<br> assubclass: 4<br> placing: 4<br> planets: 4<br> printable: 4<br> naive: 4<br> sion: 4<br> deficiencies: 4<br> ogram: 4<br> stringtoenum: 4<br> worked: 4<br> tially: 4<br> ensemble: 4<br> quartet: 4<br> unused: 4<br> efficiently: 4<br> indices: 4<br> toset: 4<br> phases: 4<br> condense: 4<br> sublime: 4<br> extensibility: 4<br> javax: 4<br> catches: 4<br> oldpassed: 4<br> ration: 4<br> synthetic: 4<br> marking: 4<br> accepts: 4<br> pres: 4<br> unbound: 4<br> receiving: 4<br> str: 4<br> stan: 4<br> functionalinterface: 4<br> purposes: 4<br> callable: 4<br> anagram: 4<br> solves: 4<br> overuse: 4<br> sb: 4<br> cartesian: 4<br> reversed: 4<br> dealing: 4<br> maxby: 4<br> categories: 4<br> tly: 4<br> delimiter: 4<br> came: 4<br> allprocesses: 4<br> parallelize: 4<br> reductions: 4<br> splittablerandom: 4<br> individually: 4<br> setyear: 4<br> dispense: 4<br> thermometer: 4<br> collectionclassifier: 4<br> sparklingwine: 4<br> selected: 4<br> contentequals: 4<br> nosuchelementexception: 4<br> ispresent: 4<br> pid: 4<br> precondition: 4<br> markup: 4<br> pages: 4<br> propagate: 4<br> ranks: 4<br> feat: 4<br> numitems: 4<br> catching: 4<br> gmp: 4<br> acronyms: 4<br> synchroniza: 4<br> higherlevelexception: 4<br> timeunit: 4<br> activities: 4<br> guarded: 4<br> atomically: 4<br> atomiclong: 4<br> timing: 4<br> unsubscribe: 4<br> putifabsent: 4<br> synchronizedmap: 4<br> latches: 4<br> await: 4<br> holder: 4<br> exploits: 4<br> fieldholder: 4<br> gadgets: 4<br> deserial: 4<br> bombs: 4<br> buffers: 4<br> accepting: 4<br> uids: 4<br> serializa: 4<br> printfavorites: 4<br> theft: 4<br> numberthird: 4<br> editionitem: 4<br> rk: 3<br> publisher: 3<br> erro: 3<br> opportunities: 3<br> pearsoned: 3<br> questions: 3<br> permissions: 3<br> hardwiring: 3<br> posterity: 3<br> ypes: 3<br> holmes: 3<br> advi: 3<br> nts: 3<br> steele: 3<br> multi: 3<br> continues: 3<br> reimplemented: 3<br> teams: 3<br> feels: 3<br> xv: 3<br> california: 3<br> illustrating: 3<br> gone: 3<br> tends: 3<br> unnatural: 3<br> methodologies: 3<br> readers: 3<br> julie: 3<br> tasteful: 3<br> blessed: 3<br> imaginable: 3<br> sincerest: 3<br> goetz: 3<br> beth: 3<br> bottos: 3<br> improvements: 3<br> unfailingly: 3<br> thro: 3<br> neal: 3<br> gafter: 3<br> mccloskey: 3<br> gener: 3<br> lisa: 3<br> ries: 3<br> engineers: 3<br> andrew: 3<br> larry: 3<br> wadler: 3<br> subpackages: 3<br> ach: 3<br> published: 3<br> explains: 3<br> assumes: 3<br> maintainable: 3<br> effectivejava: 3<br> au: 3<br> ory: 3<br> flyweight: 3<br> terfaces: 3<br> pu: 3<br> ssible: 3<br> jumboenumset: 3<br> proved: 3<br> jdbc: 3<br> criteria: 3<br> choo: 3<br> instantiated: 3<br> ult: 3<br> exhaustive: 3<br> stance: 3<br> gettype: 3<br> newtype: 3<br> inconsistency: 3<br> ead: 3<br> combines: 3<br> ired: 3<br> lik: 3<br> builds: 3<br> invoca: 3<br> chained: 3<br> archy: 3<br> rresponding: 3<br> mul: 3<br> tiple: 3<br> rameter: 3<br> evolves: 3<br> spurious: 3<br> ee: 3<br> ur: 3<br> ensu: 3<br> circum: 3<br> inflexible: 3<br> isvalid: 3<br> typo: 3<br> testability: 3<br> preserves: 3<br> projects: 3<br> typi: 3<br> gu: 3<br> adapted: 3<br> bikini: 3<br> creations: 3<br> millions: 3<br> advisable: 3<br> initializing: 3<br> vious: 3<br> counterintuitive: 3<br> views: 3<br> delegates: 3<br> backing: 3<br> distinction: 3<br> calculates: 3<br> unintentional: 3<br> clutters: 3<br> unin: 3<br> ences: 3<br> refere: 3<br> ry: 3<br> unimportant: 3<br> weakhashmap: 3<br> inspection: 3<br> erratic: 3<br> portability: 3<br> analogue: 3<br> specia: 3<br> varies: 3<br> ithout: 3<br> gc: 3<br> odds: 3<br> collectio: 3<br> partially: 3<br> immune: 3<br> fileoutputstream: 3<br> sql: 3<br> triggered: 3<br> filereader: 3<br> got: 3<br> exampl: 3<br> virtually: 3<br> solved: 3<br> abstractset: 3<br> abstractmap: 3<br> expects: 3<br> transitive: 3<br> appearances: 3<br> deemed: 3<br> vio: 3<br> equalsignorecase: 3<br> intentioned: 3<br> oblivious: 3<br> conceived: 3<br> refactor: 3<br> forgo: 3<br> unitcircle: 3<br> met: 3<br> becaus: 3<br> ound: 3<br> equa: 3<br> prohibition: 3<br> nullity: 3<br> mytype: 3<br> ization: 3<br> analogous: 3<br> fiel: 3<br> ds: 3<br> amounts: 3<br> ot: 3<br> caveats: 3<br> searching: 3<br> automati: 3<br> provisions: 3<br> optimi: 3<br> par: 3<br> yields: 3<br> collisions: 3<br> ru: 3<br> numb: 3<br> putation: 3<br> assigning: 3<br> wants: 3<br> diagnostic: 3<br> specifying: 3<br> potion: 3<br> ely: 3<br> resorting: 3<br> fac: 3<br> thinly: 3<br> requir: 3<br> ements: 3<br> cloned: 3<br> declares: 3<br> prob: 3<br> iterates: 3<br> nonempty: 3<br> consumes: 3<br> whichever: 3<br> subcla: 3<br> forcing: 3<br> ra: 3<br> gram: 3<br> alphabe: 3<br> ption: 3<br> implementor: 3<br> rst: 3<br> lts: 3<br> ates: 3<br> decl: 3<br> extracts: 3<br> extracted: 3<br> complement: 3<br> hashcodeorder: 3<br> fraught: 3<br> poorly: 3<br> workings: 3<br> tested: 3<br> speeds: 3<br> modi: 3<br> increasing: 3<br> restricts: 3<br> enfo: 3<br> ac: 3<br> repr: 3<br> exposing: 3<br> lib: 3<br> questionable: 3<br> obtaining: 3<br> tmp: 3<br> muta: 3<br> concur: 3<br> structor: 3<br> magnitude: 3<br> ive: 3<br> getter: 3<br> tandem: 3<br> expo: 3<br> getaddcount: 3<br> fragility: 3<br> inserted: 3<br> containsall: 3<br> removeall: 3<br> retainall: 3<br> transforms: 3<br> inher: 3<br> temporarily: 3<br> dogs: 3<br> delegation: 3<br> uld: 3<br> ils: 3<br> depended: 3<br> documenta: 3<br> abstractcollection: 3<br> lection: 3<br> involves: 3<br> removerange: 3<br> inclusive: 3<br> documentatio: 3<br> ove: 3<br> lightly: 3<br> augmenting: 3<br> severely: 3<br> obeys: 3<br> hierar: 3<br> nonhierarchical: 3<br> bloated: 3<br> combinatorial: 3<br> rfaces: 3<br> comple: 3<br> setvalue: 3<br> mandate: 3<br> maintains: 3<br> commons: 3<br> abou: 3<br> neces: 3<br> exporting: 3<br> flavors: 3<br> corrects: 3<br> associates: 3<br> doubly: 3<br> cont: 3<br> mem: 3<br> belongs: 3<br> sees: 3<br> splitting: 3<br> compil: 3<br> codebase: 3<br> declar: 3<br> ming: 3<br> fetched: 3<br> supposed: 3<br> newer: 3<br> teed: 3<br> numelementsincommon: 3<br> vararg: 3<br> exaltation: 3<br> arraystoreexception: 3<br> tee: 3<br> meterized: 3<br> rning: 3<br> touppercase: 3<br> blockingqueue: 3<br> ric: 3<br> identityfunction: 3<br> sider: 3<br> ow: 3<br> guides: 3<br> declara: 3<br> gracefully: 3<br> leaky: 3<br> compromised: 3<br> exercises: 3<br> disconcerting: 3<br> needless: 3<br> appr: 3<br> incorrectly: 3<br> tive: 3<br> forname: 3<br> enumer: 3<br> deceiving: 3<br> jupiter: 3<br> surfaceweight: 3<br> weighttable: 3<br> modes: 3<br> stant: 3<br> switches: 3<br> ecial: 3<br> associating: 3<br> octet: 3<br> bitwise: 3<br> italic: 3<br> pow: 3<br> openumtype: 3<br> nicely: 3<br> runtests: 3<br> exceptio: 3<br> caught: 3<br> isinstance: 3<br> doublybad: 3<br> decla: 3<br> exceptiontestcontainer: 3<br> ning: 3<br> rface: 3<br> ementations: 3</p><p>gr: 3<br> doublebinaryoperator: 3<br> exceeds: 3<br> tional: 3<br> opens: 3<br> summarized: 3<br> ovide: 3<br> dard: 3<br> eldestentryremovalfunction: 3<br> biconsumer: 3<br> structurally: 3<br> existed: 3<br> pseudorandom: 3<br> el: 3<br> heuristics: 3<br> meets: 3<br> computeifabsent: 3<br> maintainability: 3<br> satisfying: 3<br> defeats: 3<br> newdeck: 3<br> fraction: 3<br> amenable: 3<br> opaque: 3<br> nction: 3<br> snippets: 3<br> albums: 3<br> lis: 3<br> concat: 3<br> emptylist: 3<br> parallelization: 3<br> ranges: 3<br> abstra: 3<br> sequential: 3<br> performan: 3<br> speedup: 3<br> sy: 3<br> synchronizes: 3<br> contention: 3<br> commen: 3<br> tu: 3<br> defensiv: 3<br> vulnerability: 3<br> toctou: 3<br> temperaturescale: 3<br> ends: 3<br> viol: 3<br> arity: 3<br> parentprocess: 3<br> constitute: 3<br> phrases: 3<br> metacharacters: 3<br> summarizes: 3<br> prematurely: 3<br> dictates: 3<br> rm: 3<br> instruments: 3<br> checkstyle: 3<br> mandated: 3<br> paste: 3<br> traversal: 3<br> abs: 3<br> om: 3<br> transferto: 3<br> acquired: 3<br> dictate: 3<br> proble: 3<br> lineforitem: 3<br> sonset: 3<br> approp: 3<br> riate: 3<br> operating: 3<br> jackson: 3<br> fore: 3<br> getsize: 3<br> processors: 3<br> rformance: 3<br> edu: 3<br> abbreviations: 3<br> pendent: 3<br> outward: 3<br> exhaustion: 3<br> thecheckedexception: 3<br> actionpermitted: 3<br> concu: 3<br> failu: 3<br> multicore: 3<br> requeststop: 3<br> synchronizing: 3<br> notifications: 3<br> unsynchronized: 3<br> threadpoolexecutor: 3<br> executing: 3<br> concurrentmap: 3<br> previousvalue: 3<br> blocking: 3<br> starvation: 3<br> posix: 3<br> circularities: 3<br> lization: 3<br> slowcountdownlatch: 3<br> alization: 3<br> ransomware: 3<br> muni: 3<br> robert: 3<br> rmi: 3<br> blacklisting: 3<br> whitelist: 3<br> swat: 3<br> excessively: 3<br> readobjectnodata: 3<br> serializ: 3<br> lastname: 3<br> firstname: 3<br> rogue: 3<br> pend: 3<br> hound: 3<br> heartbreak: 3<br> technetwork: 3<br> htm: 3<br> consumption: 3<br> london: 2<br> designations: 2<br> wi: 2<br> implied: 2<br> designs: 2<br> copyright: 2<br> foreword: 2<br> acces: 2<br> sibility: 2<br> tterns: 2<br> ams: 2<br> ef: 2<br> algorithmic: 2<br> sons: 2<br> puzzling: 2<br> addresses: 2<br> modifications: 2<br> headaches: 2<br> simplicity: 2<br> triple: 2<br> extensions: 2<br> dates: 2<br> jose: 2<br> mentio: 2<br> ial: 2<br> ited: 2<br> learned: 2<br> moved: 2<br> successes: 2<br> thoroughly: 2<br> ote: 2<br> bigger: 2<br> contin: 2<br> enjoyable: 2<br> intervening: 2<br> matured: 2<br> tate: 2<br> scott: 2<br> targeted: 2<br> inevitably: 2<br> compo: 2<br> someth: 2<br> conducive: 2<br> helps: 2<br> thei: 2<br> professors: 2<br> greg: 2<br> doench: 2<br> remained: 2<br> unflappable: 2<br> meticulous: 2<br> reviewed: 2<br> consisted: 2<br> kernighan: 2<br> kevin: 2<br> bourrillion: 2<br> halloran: 2<br> yoshiki: 2<br> shibata: 2<br> martin: 2<br> buchholz: 2<br> aleksey: 2<br> weinberger: 2<br> boards: 2<br> ugh: 2<br> encouragement: 2<br> framemaker: 2<br> suggesting: 2<br> lindholm: 2<br> hendrickson: 2<br> sup: 2<br> konstantin: 2<br> kladko: 2<br> zhenghua: 2<br> bennett: 2<br> mary: 2<br> rema: 2<br> ben: 2<br> richard: 2<br> contributed: 2<br> coverage: 2<br> antipatterns: 2<br> sestoft: 2<br> ould: 2<br> slavishly: 2<br> numbe: 2<br> quad: 2<br> discussing: 2<br> nicknames: 2<br> ness: 2<br> lan: 2<br> applica: 2<br> memb: 2<br> tively: 2<br> commits: 2<br> toolkit: 2<br> atic: 2<br> mers: 2<br> leads: 2<br> packag: 2<br> serv: 2<br> plays: 2<br> drivermanager: 2<br> ral: 2<br> serviceloader: 2<br> predates: 2<br> disguise: 2<br> encourages: 2<br> meantime: 2<br> jack: 2<br> stackwalker: 2<br> reflex: 2<br> ering: 2<br> labels: 2<br> trans: 2<br> programm: 2<br> optionalprivate: 2<br> setters: 2<br> setservingsize: 2<br> setservings: 2<br> setcalories: 2<br> setsodium: 2<br> setcarbohydrate: 2<br> wordy: 2<br> ances: 2<br> simulates: 2<br> ag: 2<br> ainst: 2<br> sausage: 2<br> noneof: 2<br> imports: 2<br> noticeable: 2<br> ough: 2<br> worthwhile: 2<br> proach: 2<br> privileged: 2<br> seco: 2<br> ance: 2<br> jects: 2<br> nonsensical: 2<br> instantia: 2<br> utilityclass: 2<br> stances: 2<br> mildly: 2<br> prev: 2<br> unde: 2<br> untestable: 2<br> dictionaries: 2<br> suffice: 2<br> satisfies: 2<br> injected: 2<br> peatedly: 2<br> embody: 2<br> mosaic: 2<br> tile: 2<br> thousands: 2<br> functionally: 2<br> md: 2<br> compiling: 2<br> gains: 2<br> adapters: 2<br> naively: 2<br> diff: 2<br> hideously: 2<br> reclamation: 2<br> optimiz: 2<br> lurking: 2<br> ev: 2<br> outofmemoryerror: 2<br> grows: 2<br> tains: 2<br> dereferenced: 2<br> tentional: 2<br> retentions: 2<br> prevented: 2<br> corrected: 2<br> narrowest: 2<br> manages: 2<br> allocated: 2<br> inactive: 2<br> grammer: 2<br> solutions: 2<br> matically: 2<br> scheduledthreadpoolexecutor: 2<br> manifest: 2<br> destructors: 2<br> unreachable: 2<br> promptness: 2<br> debugged: 2<br> gui: 2<br> weren: 2<br> became: 2<br> halt: 2<br> aimed: 2<br> runfinalizersonexit: 2<br> threadstop: 2<br> ination: 2<br> neglects: 2<br> arantee: 2<br> nati: 2<br> cleaned: 2<br> piles: 2<br> cleans: 2<br> pointer: 2<br> hopefully: 2<br> inadvisable: 2<br> exits: 2<br> unpredictability: 2<br> tem: 2<br> puzzlers: 2<br> thirds: 2<br> defi: 2<br> tes: 2<br> fell: 2<br> shorte: 2<br> programmatically: 2<br> contrived: 2<br> defaultval: 2<br> signed: 2<br> entitie: 2<br> mere: 2<br> tothe: 2<br> tract: 2<br> symmetric: 2<br> behaves: 2<br> obeying: 2<br> subsets: 2<br> interop: 2<br> erate: 2<br> polish: 2<br> poin: 2<br> recursion: 2<br> stackoverflowerror: 2<br> atomicinteger: 2<br> tiable: 2<br> consis: 2<br> ip: 2<br> urls: 2<br> translating: 2<br> refines: 2<br> entail: 2<br> sts: 2<br> nonstandard: 2<br> aring: 2<br> accordingly: 2<br> myclass: 2<br> overloads: 2<br> altern: 2<br> urce: 2<br> mistakes: 2<br> eq: 2<br> ual: 2<br> atrocious: 2<br> stead: 2<br> uniformly: 2<br> approximation: 2<br> preferably: 2<br> parisons: 2<br> subtraction: 2<br> architectures: 2<br> vms: 2<br> determ: 2<br> hashing: 2<br> imitive: 2<br> merit: 2<br> unusable: 2<br> instea: 2<br> displayed: 2<br> informative: 2<br> argued: 2<br> debugger: 2<br> explanatory: 2<br> reports: 2<br> assertion: 2<br> abc: 2<br> unambiguous: 2<br> xxx: 2<br> yyy: 2<br> zzzz: 2<br> ink: 2<br> ducing: 2<br> facto: 2<br> aids: 2<br> unenforceable: 2<br> docum: 2<br> ented: 2<br> resultin: 2<br> withou: 2<br> enforced: 2<br> replica: 2<br> wasteful: 2<br> ea: 2<br> allocates: 2<br> iteratively: 2<br> overwrites: 2<br> ridden: 2<br> possibl: 2<br> presumably: 2<br> syn: 2<br> mand: 2<br> formance: 2<br> disc: 2<br> ussed: 2<br> menting: 2<br> tical: 2<br> designates: 2<br> equi: 2<br> resu: 2<br> frees: 2<br> retu: 2<br> relational: 2<br> demonstratin: 2<br> orders: 2<br> orde: 2<br> distinguishes: 2<br> harmin: 2<br> profiling: 2<br> beca: 2<br> lowest: 2<br> poss: 2<br> harming: 2<br> ckage: 2<br> decomposition: 2<br> acc: 2<br> fied: 2<br> pri: 2<br> unaffected: 2<br> advisory: 2<br> modular: 2<br> declaratio: 2<br> ess: 2<br> auxiliary: 2<br> exposes: 2<br> ecause: 2<br> resulted: 2<br> observed: 2<br> expresses: 2<br> prec: 2<br> lize: 2<br> corre: 2<br> verbs: 2<br> synchroni: 2<br> ently: 2<br> ies: 2<br> nals: 2<br> bout: 2<br> possi: 2<br> flipbit: 2<br> exponentiation: 2<br> outlined: 2<br> alternat: 2<br> defen: 2<br> sively: 2<br> assumption: 2<br> tobytearray: 2<br> immuta: 2<br> ded: 2<br> serializab: 2<br> coul: 2<br> rrors: 2<br> ants: 2<br> exemplifies: 2<br> reached: 2<br> conc: 2<br> boundaries: 2<br> ors: 2<br> suppos: 2<br> query: 2<br> insertions: 2<br> rts: 2<br> initcap: 2<br> loadfactor: 2<br> il: 2<br> instrumentation: 2<br> idogs: 2<br> wraps: 2<br> decorator: 2<br> acce: 2<br> tter: 2<br> propagates: 2<br> powerfu: 2<br> problematic: 2<br> genuine: 2<br> superc: 2<br> backgr: 2<br> formally: 2<br> hooks: 2<br> rewrite: 2<br> undertaken: 2<br> situatio: 2<br> notifica: 2<br> inconvenience: 2<br> resides: 2<br> stract: 2<br> chy: 2<br> ordered: 2<br> mi: 2<br> neatly: 2<br> audioclip: 2<br> ibility: 2<br> lifesaver: 2<br> combinations: 2<br> enhancements: 2<br> advantag: 2<br> plementing: 2<br> skelet: 2<br> intarrayaslist: 2<br> oldval: 2<br> wer: 2<br> pitfalls: 2<br> primi: 2<br> subinterface: 2<br> lt: 2<br> exemplified: 2<br> warrant: 2<br> nontrivial: 2<br> defa: 2<br> supplied: 2<br> writin: 2<br> maintainers: 2<br> sary: 2<br> lockstep: 2<br> irritate: 2<br> kg: 2<br> namespaces: 2<br> lite: 2<br> rals: 2<br> consecutive: 2<br> cores: 2<br> mols: 2<br> cluttered: 2<br> harmed: 2<br> plementations: 2<br> burdened: 2<br> belonging: 2<br> betwee: 2<br> thereafter: 2<br> asso: 2<br> iterators: 2<br> myiterator: 2<br> catastrophic: 2<br> simultaneously: 2<br> inherits: 2<br> pancake: 2<br> perm: 2<br> chap: 2<br> bene: 2<br> fits: 2<br> exemplary: 2<br> emits: 2<br> trieve: 2<br> pos: 2<br> sible: 2<br> mpiler: 2<br> ains: 2<br> emitting: 2<br> assu: 2<br> deci: 2<br> sions: 2<br> opted: 2<br> ider: 2<br> igno: 2<br> holding: 2<br> corrupting: 2<br> mething: 2<br> compa: 2<br> speci: 2<br> fy: 2<br> provoked: 2<br> proving: 2<br> arraycopy: 2<br> tw: 2<br> objectarray: 2<br> retrieved: 2<br> contai: 2<br> boldface: 2<br> vouch: 2<br> fety: 2<br> tad: 2<br> impulse: 2<br> wasn: 2<br> conventional: 2<br> explained: 2<br> arises: 2<br> opt: 2<br> guys: 2<br> dick: 2<br> harry: 2<br> stooges: 2<br> moe: 2<br> aflcio: 2<br> emptyset: 2<br> ul: 2<br> unaryfunction: 2<br> samestring: 2<br> samenumber: 2<br> rable: 2<br> intval: 2<br> iter: 2<br> producers: 2<br> naftalin: 2<br> ified: 2<br> intersection: 2<br> intr: 2<br> comparables: 2<br> adde: 2<br> orig: 2<br> inal: 2<br> raises: 2<br> nguage: 2<br> sites: 2<br> hid: 2<br> agrees: 2<br> hich: 2<br> variab: 2<br> tual: 2<br> neric: 2<br> warns: 2<br> oach: 2<br> erred: 2<br> terized: 2<br> nner: 2<br> favoritestring: 2<br> favoriteinteger: 2<br> favoriteclass: 2<br> getname: 2<br> dentally: 2<br> linkage: 2<br> loses: 2<br> dynamically: 2<br> erence: 2<br> additio: 2<br> annotatedelement: 2<br> rforms: 2<br> annotationtypename: 2<br> senting: 2<br> families: 2<br> prefixed: 2<br> fledged: 2<br> enumeration: 2<br> expres: 2<br> pare: 2<br> namespace: 2<br> associat: 2<br> parentheses: 2<br> um: 2<br> mercury: 2<br> venus: 2<br> mars: 2<br> uranus: 2<br> neptune: 2<br> universal: 2<br> earthweight: 2<br> enabling: 2<br> pluto: 2<br> beha: 2<br> roundingmode: 2<br> fundamentally: 2<br> reachable: 2<br> implementatio: 2<br> ofnullable: 2<br> mappings: 2<br> stri: 2<br> forces: 2<br> duplic: 2<br> woul: 2<br> inverse: 2<br> inclusion: 2<br> stants: 2<br> flags: 2<br> solo: 2<br> duet: 2<br> trio: 2<br> quintet: 2<br> sextet: 2<br> septet: 2<br> nonet: 2<br> dectet: 2<br> musicians: 2<br> styles: 2<br> inted: 2<br> richness: 2<br> insulated: 2<br> perennial: 2<br> biennial: 2<br> rep: 2<br> responsi: 2<br> rewritten: 2<br> lc: 2<br> comput: 2<br> mapfactory: 2<br> captured: 2<br> tran: 2<br> ionize: 2<br> deionize: 2<br> enumerate: 2<br> opcode: 2<br> exp: 2<br> opset: 2<br> designate: 2<br> hopes: 2<br> essen: 2<br> leaving: 2<br> testclass: 2<br> qua: 2<br> designated: 2<br> wrappedex: 2<br> commas: 2<br> replaces: 2<br> exctypes: 2<br> valued: 2<br> ires: 2<br> getannotationsbytype: 2<br> exctests: 2<br> exctest: 2<br> scratches: 2<br> predefined: 2<br> ic: 2<br> tently: 2<br> rary: 2<br> notably: 2<br> behavi: 2<br> ree: 2<br> evaluated: 2<br> increment: 2<br> mbda: 2<br> presumed: 2<br> goshthisclassnameishumongous: 2<br> inline: 2<br> isafter: 2<br> len: 2<br> predicates: 2<br> bipredicate: 2<br> argum: 2<br> sult: 2<br> bifunction: 2<br> tointbifunction: 2<br> booleansupplier: 2<br> andard: 2<br> nctional: 2<br> standa: 2<br> latt: 2<br> deserves: 2<br> eas: 2<br> sequentially: 2<br> sources: 2<br> generators: 2<br> aelpst: 2<br> paths: 2<br> overusing: 2<br> eel: 2<br> moderately: 2<br> effec: 2<br> concatenate: 2<br> pipelin: 2<br> nextprobableprime: 2<br> plural: 2<br> intvalueexact: 2<br> filters: 2<br> exponent: 2<br> encapsulates: 2<br> concatenates: 2<br> boils: 2<br> expressing: 2<br> stems: 2<br> mutates: 2<br> alre: 2<br> ady: 2<br> paral: 2<br> comb: 2<br> tocollection: 2<br> collectionfactory: 2<br> extraction: 2<br> streamof: 2<br> keymapper: 2<br> valuemapper: 2<br> minate: 2<br> mappers: 2<br> lues: 2<br> selling: 2<br> wins: 2<br> falls: 2<br> llector: 2<br> joining: 2<br> comma: 2<br> suffix: 2<br> justifiably: 2<br> frustrating: 2<br> hideous: 2<br> iterableof: 2<br> concisely: 2<br> nth: 2<br> powerset: 2<br> suffi: 2<br> ream: 2<br> ver: 2<br> sequen: 2<br> mainstream: 2<br> parallelized: 2<br> indefinitely: 2<br> paralle: 2<br> circuiting: 2<br> overhead: 2<br> extensively: 2<br> interfering: 2<br> ascending: 2<br> domains: 2<br> longstream: 2<br> inap: 2<br> focuses: 2<br> modulus: 2<br> wher: 2<br> chec: 2<br> claims: 2<br> asserts: 2<br> plicit: 2<br> sorts: 2<br> overruns: 2<br> exploiting: 2<br> zoneddatetime: 2<br> repaired: 2<br> mischief: 2<br> succe: 2<br> ssfully: 2<br> nerally: 2<br> compon: 2<br> chances: 2<br> trusts: 2<br> selves: 2<br> hints: 2<br> consensus: 2<br> executes: 2<br> sparkling: 2<br> winelist: 2<br> discern: 2<br> dispatching: 2<br> diagnosing: 2<br> writeint: 2<br> readint: 2<br> interactions: 2<br> selects: 2<br> damaged: 2<br> nces: 2<br> newcachedthreadpool: 2<br> inexact: 2<br> anomaly: 2<br> firstarg: 2<br> remainingargs: 2<br> allocation: 2<br> invaluable: 2<br> counts: 2<br> rsion: 2<br> conceptually: 2<br> showed: 2<br> orelse: 2<br> ituation: 2<br> streamofoptionals: 2<br> prim: 2<br> itive: 2<br> fected: 2<br> standards: 2<br> rendered: 2<br> font: 2<br> latte: 2<br> escaped: 2<br> geometric: 2<br> converges: 2<br> begins: 2<br> inde: 2<br> xed: 2<br> percussion: 2<br> bers: 2<br> serializability: 2<br> recommendations: 2<br> adheres: 2<br> devoted: 2<br> sensibly: 2<br> sulting: 2<br> avoi: 2<br> unlucky: 2<br> dice: 2<br> traps: 2<br> prevention: 2<br> occasions: 2<br> ilure: 2<br> releas: 2<br> hoc: 2<br> sta: 2<br> multithreaded: 2<br> alternate: 2<br> furnish: 2<br> priced: 2<br> candies: 2<br> cents: 2<br> identities: 2<br> evaluating: 2<br> proceeds: 2<br> evaluates: 2<br> iboxed: 2<br> jboxed: 2<br> outright: 2<br> translated: 2<br> unforgeable: 2<br> ich: 2<br> concatenating: 2<br> sized: 2<br> unaware: 2<br> perfo: 2<br> rmance: 2<br> priorityqueue: 2<br> appropriat: 2<br> invo: 2<br> suffers: 2<br> msg: 2<br> instantiates: 2<br> multiprecision: 2<br> aphorisms: 2<br> wulf: 2<br> donald: 2<br> knuth: 2<br> mit: 2<br> protocols: 2<br> formats: 2<br> warp: 2<br> weaker: 2<br> lies: 2<br> measuring: 2<br> faulty: 2<br> cmu: 2<br> capitalized: 2<br> futuretask: 2<br> uppercase: 2<br> httpurl: 2<br> denom: 2<br> housenum: 2<br> adjective: 2<br> nouns: 2<br> beans: 2<br> recognizable: 2<br> misguided: 2<br> iler: 2<br> began: 2<br> induced: 2<br> fl: 2<br> indication: 2<br> exce: 2<br> nonportable: 2<br> uncheckedexceptions: 2<br> litmus: 2<br> sparingly: 2<br> overused: 2<br> covers: 2<br> alread: 2<br> propriate: 2<br> bidding: 2<br> lowerlevelexception: 2<br> capturing: 2<br> docume: 2<br> ntation: 2<br> achievable: 2<br> anot: 2<br> numcolors: 2<br> executionexception: 2<br> locked: 2<br> ize: 2<br> cooperative: 2<br> onization: 2<br> nextserialnum: 2<br> newsinglethreadexecutor: 2<br> shutdown: 2<br> reentrant: 2<br> traversed: 2<br> whatsoever: 2<br> oversynchronize: 2<br> enqueue: 2<br> completing: 2<br> ily: 2<br> thr: 2<br> briefly: 2<br> canonicalizing: 2<br> cyclicbarrier: 2<br> phaser: 2<br> stops: 2<br> currentthread: 2<br> workers: 2<br> startnanos: 2<br> wakeup: 2<br> notifying: 2<br> wakes: 2<br> assumptions: 2<br> hronization: 2<br> threadsafe: 2<br> decreases: 2<br> initializa: 2<br> uninitialized: 2<br> racy: 2<br> sizing: 2<br> adjusting: 2<br> vulnerabilities: 2<br> sfmta: 2<br> seacord: 2<br> dos: 2<br> gadget: 2<br> crafted: 2<br> wouter: 2<br> coekaerts: 2<br> ecosystem: 2<br> otobuf: 2<br> rejecting: 2<br> whitelisting: 2<br> seriali: 2<br> serializati: 2<br> identifiers: 2<br> invalidclassexception: 2<br> releasing: 2<br> vi: 2<br> olate: 2<br> rializable: 2<br> regarding: 2<br> throwaway: 2<br> middlename: 2<br> overflows: 2<br> appends: 2<br> serialdata: 2<br> numelements: 2<br> alizing: 2<br> intact: 2<br> randomlongvalue: 2<br> serialver: 2<br> sf: 2<br> bytearrayinputstream: 2<br> jan: 2<br> deserializ: 2<br> bytearrayoutputstream: 2<br> suffices: 2<br> technotes: 2<br> sebastopol: 2<br> reilly: 2<br> rsa: 2<br> dx: 2<br> doi: 2<br> maurice: 2<br> thomas: 2<br> addendum: 2<br> communications: 2<br> ansi: 2<br> ancients: 2<br> bilow: 2<br> validator: 2<br> explosions: 2<br> incompatibility: 2<br> decreasing: 2</p>",23))])}const v=d(o,[["render",c],["__file","Java@.html.vue"]]),E=JSON.parse('{"path":"/2%20%E7%AC%AC%E4%BA%8C%E5%A4%A7%E8%84%91/1%20%E8%8A%82%E7%82%B9/CS/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/Java/Java@.html","title":"最佳实践","lang":"zh-CN","frontmatter":{"draw":null,"aliases":["最佳实践"],"tags":[],"title":"最佳实践","date created":"2024-07-03T00:00:00.000Z","date modified":"2024-11-12T00:00:00.000Z","linter-yaml-title-alias":"最佳实践","description":"提升？看代码啊，不用看什么spring啊netty之类的庞然大物，说几个力所能及的库，可以好好研究。知识是有索引的，看到不懂得就去查慢慢就提升了。 1.lombok*，看看怎么实现的，这个牵涉java的编译部分挺有意思；通过注解对几种设计模式的实现很有意思；试着扩展，比如能不能搞个单例的注解？ 2.mockito，这个库挺好玩的，古板的java玩出了d...","head":[["meta",{"property":"og:url","content":"https://vuepress-theme-hope-docs-demo.netlify.app/2%20%E7%AC%AC%E4%BA%8C%E5%A4%A7%E8%84%91/1%20%E8%8A%82%E7%82%B9/CS/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/Java/Java@.html"}],["meta",{"property":"og:site_name","content":"转了码的刘公子"}],["meta",{"property":"og:title","content":"最佳实践"}],["meta",{"property":"og:description","content":"提升？看代码啊，不用看什么spring啊netty之类的庞然大物，说几个力所能及的库，可以好好研究。知识是有索引的，看到不懂得就去查慢慢就提升了。 1.lombok*，看看怎么实现的，这个牵涉java的编译部分挺有意思；通过注解对几种设计模式的实现很有意思；试着扩展，比如能不能搞个单例的注解？ 2.mockito，这个库挺好玩的，古板的java玩出了d..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-11-24T17:46:49.000Z"}],["meta",{"property":"article:modified_time","content":"2024-11-24T17:46:49.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"最佳实践\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-11-24T17:46:49.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"转了码的刘公子\\",\\"url\\":\\"https://mister-hope.com\\"}]}"]]},"headers":[{"level":2,"title":"Unstaged","slug":"unstaged","link":"#unstaged","children":[]},{"level":2,"title":"最佳实践","slug":"最佳实践","link":"#最佳实践","children":[]}],"git":{"createdTime":1732465042000,"updatedTime":1732470409000,"contributors":[{"name":"Luis","email":"liuysh20@gmail.com","commits":2}]},"readingTime":{"minutes":37.77,"words":11330},"filePathRelative":"2 第二大脑/1 节点/CS/编程语言/Java/Java@.md","localizedDate":"2024年11月25日","autoDesc":true}');export{v as comp,E as data};
