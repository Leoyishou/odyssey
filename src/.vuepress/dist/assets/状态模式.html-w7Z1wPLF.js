import{_ as d}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as e,a as r,g as a,f as i,o as n}from"./app-DokaGNO4.js";const o={};function c(l,t){return n(),e("div",null,[t[0]||(t[0]=r("p",null,"用查表法来实现有限状态机的状态转移",-1)),a(" more "),t[1]||(t[1]=i('<h2 id="关键词" tabindex="-1"><a class="header-anchor" href="#关键词"><span>关键词</span></a></h2><table><thead><tr><th>分类</th><th>关键词</th><th>说明</th></tr></thead><tbody><tr><td>核心角色</td><td>State</td><td>状态接口/抽象类</td></tr><tr><td></td><td>ConcreteState</td><td>具体状态实现</td></tr><tr><td></td><td>Context</td><td>上下文，维护当前状态</td></tr><tr><td></td><td>StateMachine</td><td>状态机，管理状态转换</td></tr><tr><td></td><td>Transition</td><td>状态转换</td></tr><tr><td>状态管理</td><td>InitialState</td><td>初始状态</td></tr><tr><td></td><td>FinalState</td><td>终止状态</td></tr><tr><td></td><td>CurrentState</td><td>当前状态</td></tr><tr><td></td><td>PreviousState</td><td>前一个状态</td></tr><tr><td></td><td>NextState</td><td>下一个状态</td></tr><tr><td>转换控制</td><td>ChangeState</td><td>改变状态的方法</td></tr><tr><td></td><td>TransitionTo</td><td>转换到指定状态</td></tr><tr><td></td><td>AllowTransition</td><td>允许的状态转换</td></tr><tr><td></td><td>Guard</td><td>状态转换守卫条件</td></tr><tr><td></td><td>Trigger</td><td>触发状态转换的事件</td></tr><tr><td>状态类型</td><td>Simple State</td><td>简单状态</td></tr><tr><td></td><td>Composite State</td><td>组合状态</td></tr><tr><td></td><td>Hierarchical State</td><td>层次状态</td></tr><tr><td></td><td>Parallel State</td><td>并行状态</td></tr><tr><td></td><td>History State</td><td>历史状态</td></tr><tr><td>实现方式</td><td>Enum Based</td><td>基于枚举实现</td></tr><tr><td></td><td>Event Driven</td><td>事件驱动实现</td></tr><tr><td></td><td>Table Driven</td><td>表驱动实现</td></tr><tr><td></td><td>Rule Engine</td><td>规则引擎实现</td></tr><tr><td></td><td>FSM</td><td>有限状态机</td></tr><tr><td>状态行为</td><td>Entry Action</td><td>进入状态动作</td></tr><tr><td></td><td>Exit Action</td><td>退出状态动作</td></tr><tr><td></td><td>Do Action</td><td>状态内动作</td></tr><tr><td></td><td>Transition Action</td><td>转换时动作</td></tr><tr><td></td><td>Event Handler</td><td>事件处理器</td></tr><tr><td>持久化</td><td>State Storage</td><td>状态存储</td></tr><tr><td></td><td>State Recovery</td><td>状态恢复</td></tr><tr><td></td><td>State Snapshot</td><td>状态快照</td></tr><tr><td></td><td>State History</td><td>状态历史记录</td></tr><tr><td></td><td>State Serialization</td><td>状态序列化</td></tr><tr><td>调试特性</td><td>State Logging</td><td>状态日志</td></tr><tr><td></td><td>State Visualization</td><td>状态可视化</td></tr><tr><td></td><td>State Monitoring</td><td>状态监控</td></tr><tr><td></td><td>Debugging Tools</td><td>调试工具支持</td></tr><tr><td>高级特性</td><td>State Machine DSL</td><td>状态机领域语言</td></tr><tr><td></td><td>Visual Editor</td><td>可视化编辑器</td></tr><tr><td></td><td>Code Generation</td><td>代码生成</td></tr><tr><td></td><td>Hot Reload</td><td>热重载支持</td></tr></tbody></table><h2 id="场景" tabindex="-1"><a class="header-anchor" href="#场景"><span>场景</span></a></h2><figure><img src="https://cdn-a.markji.com/files/65950680084f1761475c01ca_hd.png?e=1713366779981&amp;token=xX63b9jqTlDOcGmctt5K9254rV0LG8hS9BmDeFBy:w32Wc9CTntCqqkUtwdHqDUX-wns=" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h2 id="实现" tabindex="-1"><a class="header-anchor" href="#实现"><span>实现</span></a></h2><p><strong>用查表法来实现有限状态机的状态转移</strong></p><p>什么是状态机？</p><ul><li>图论中的概念，本质是一张图结构</li></ul><p>为啥叫有限状态机？</p><ul><li>无限状态机只是一个理论概念</li><li>有限状态机由 3 个部分组成：状态、事件、动作。其中，事件也称为转移条件。事件触发状态的转移及动作的执行。不过，动作不是必须的，也可能只转移状态，不执行任何动作。</li></ul><p>什么是查表法？</p><ul><li>通过一张表把状态转移图落实到表上，表在 Java 中用 Map&lt;K, Map&gt;的数据结构就可以实现</li></ul><table><thead><tr><th>当前状态</th><th>事件</th><th>目标状态</th></tr></thead><tbody><tr><td>离线，修改中</td><td>上线操作</td><td>离线，上线审核中</td></tr><tr><td>离线，修改中</td><td>修改</td><td>离线，修改中</td></tr><tr><td>离线，上线审核中</td><td>审核通过</td><td>在线，审核通过</td></tr><tr><td>离线，上线审核中</td><td>审核驳回</td><td>离线，审核驳回</td></tr><tr><td>离线，审核驳回</td><td>修改</td><td>离线，修改中</td></tr><tr><td>离线，审核驳回</td><td>上线操作</td><td>离线，上线审核中</td></tr><tr><td>离线，审核通过</td><td>修改</td><td>离线，修改中</td></tr><tr><td>离线，审核通过</td><td>上线操作</td><td>离线，上线审核中</td></tr><tr><td>在线，审核通过</td><td>下线操作</td><td>在线，下线审核中</td></tr><tr><td>在线，下线审核中</td><td>审核通过</td><td>离线，审核通过</td></tr><tr><td>在线，下线审核中</td><td>审核驳回</td><td>在线，审核驳回</td></tr><tr><td>在线，审核驳回</td><td>修改</td><td>在线，修改中</td></tr><tr><td>在线，审核驳回</td><td>下线</td><td>在线，下线审核中</td></tr><tr><td>在线，修改中</td><td>修改</td><td>在线，修改中</td></tr><tr><td>在线，修改中</td><td>上线申请</td><td>在线，上线审核中</td></tr><tr><td>在线，上线审核中</td><td>审核通过</td><td>在线，审核通过</td></tr><tr><td>在线，上线审核中</td><td>审核驳回</td><td>在线，审核驳回</td></tr><tr><td>在线，审核通过</td><td>修改操作</td><td>在线，修改中</td></tr><tr><td>在线，修改中</td><td>下线</td><td>在线，下线审核中</td></tr><tr><td>在线，上线审核通过</td><td>下线</td><td>在线，下线审核中</td></tr></tbody></table><figure><img src="https://imagehosting4picgo.oss-cn-beijing.aliyuncs.com/imagehosting/fix-dir%2Fpicgo%2Fpicgo-clipboard-images%2F2024%2F05%2F09%2F22-19-26-fe56f9ffe194312560ac15d7026a896f-20240509221925-1d7271.png" alt="image.png|1000" tabindex="0" loading="lazy"><figcaption>image.png|1000</figcaption></figure><figure><img src="https://imagehosting4picgo.oss-cn-beijing.aliyuncs.com/imagehosting/fix-dir%2Fpicgo%2Fpicgo-clipboard-images%2F2024%2F05%2F09%2F22-19-45-130ea5d7a71099a8f8ae1130f256fa79-20240509221943-f6aa5c.png" alt="image.png|1000" tabindex="0" loading="lazy"><figcaption>image.png|1000</figcaption></figure><figure><img src="https://cdn-a.markji.com/files/65950679084f1761475c0144_hd.png?e=1713366779981&amp;token=xX63b9jqTlDOcGmctt5K9254rV0LG8hS9BmDeFBy:vXTS_VHDsWZR5c4n5lzdamyQswM=" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>',16))])}const g=d(o,[["render",c],["__file","状态模式.html.vue"]]),m=JSON.parse('{"path":"/2%20%E7%AC%AC%E4%BA%8C%E5%A4%A7%E8%84%91/1%20%E8%8A%82%E7%82%B9/CS/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/%E7%8A%B6%E6%80%81%E6%A8%A1%E5%BC%8F.html","title":"状态模式","lang":"zh-CN","frontmatter":{"draw":null,"title":"状态模式","tags":["1 Dev","信息革命","设计模式"],"date created":"2024-05-08T00:00:00.000Z","date modified":"2024-11-12T00:00:00.000Z","description":"用查表法来实现有限状态机的状态转移 关键词 场景 实现 用查表法来实现有限状态机的状态转移 什么是状态机？ 图论中的概念，本质是一张图结构 为啥叫有限状态机？ 无限状态机只是一个理论概念 有限状态机由 3 个部分组成：状态、事件、动作。其中，事件也称为转移条件。事件触发状态的转移及动作的执行。不过，动作不是必须的，也可能只转移状态，不执行任何动作。 什...","head":[["meta",{"property":"og:url","content":"https://vuepress-theme-hope-docs-demo.netlify.app/2%20%E7%AC%AC%E4%BA%8C%E5%A4%A7%E8%84%91/1%20%E8%8A%82%E7%82%B9/CS/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/%E7%8A%B6%E6%80%81%E6%A8%A1%E5%BC%8F.html"}],["meta",{"property":"og:site_name","content":"转了码的刘公子"}],["meta",{"property":"og:title","content":"状态模式"}],["meta",{"property":"og:description","content":"用查表法来实现有限状态机的状态转移 关键词 场景 实现 用查表法来实现有限状态机的状态转移 什么是状态机？ 图论中的概念，本质是一张图结构 为啥叫有限状态机？ 无限状态机只是一个理论概念 有限状态机由 3 个部分组成：状态、事件、动作。其中，事件也称为转移条件。事件触发状态的转移及动作的执行。不过，动作不是必须的，也可能只转移状态，不执行任何动作。 什..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://cdn-a.markji.com/files/65950680084f1761475c01ca_hd.png?e=1713366779981&token=xX63b9jqTlDOcGmctt5K9254rV0LG8hS9BmDeFBy:w32Wc9CTntCqqkUtwdHqDUX-wns="}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-11-24T16:17:22.000Z"}],["meta",{"property":"article:tag","content":"1 Dev"}],["meta",{"property":"article:tag","content":"信息革命"}],["meta",{"property":"article:tag","content":"设计模式"}],["meta",{"property":"article:modified_time","content":"2024-11-24T16:17:22.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"状态模式\\",\\"image\\":[\\"https://cdn-a.markji.com/files/65950680084f1761475c01ca_hd.png?e=1713366779981&token=xX63b9jqTlDOcGmctt5K9254rV0LG8hS9BmDeFBy:w32Wc9CTntCqqkUtwdHqDUX-wns=\\",\\"https://imagehosting4picgo.oss-cn-beijing.aliyuncs.com/imagehosting/fix-dir%2Fpicgo%2Fpicgo-clipboard-images%2F2024%2F05%2F09%2F22-19-26-fe56f9ffe194312560ac15d7026a896f-20240509221925-1d7271.png\\",\\"https://imagehosting4picgo.oss-cn-beijing.aliyuncs.com/imagehosting/fix-dir%2Fpicgo%2Fpicgo-clipboard-images%2F2024%2F05%2F09%2F22-19-45-130ea5d7a71099a8f8ae1130f256fa79-20240509221943-f6aa5c.png\\",\\"https://cdn-a.markji.com/files/65950679084f1761475c0144_hd.png?e=1713366779981&token=xX63b9jqTlDOcGmctt5K9254rV0LG8hS9BmDeFBy:vXTS_VHDsWZR5c4n5lzdamyQswM=\\"],\\"dateModified\\":\\"2024-11-24T16:17:22.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"转了码的刘公子\\",\\"url\\":\\"https://mister-hope.com\\"}]}"]]},"headers":[{"level":2,"title":"关键词","slug":"关键词","link":"#关键词","children":[]},{"level":2,"title":"场景","slug":"场景","link":"#场景","children":[]},{"level":2,"title":"实现","slug":"实现","link":"#实现","children":[]}],"git":{"createdTime":1732465042000,"updatedTime":1732465042000,"contributors":[{"name":"Luis","email":"liuysh20@gmail.com","commits":1}]},"readingTime":{"minutes":3.14,"words":942},"filePathRelative":"2 第二大脑/1 节点/CS/软件工程/设计模式/状态模式.md","localizedDate":"2024年11月25日","autoDesc":true}');export{g as comp,m as data};
