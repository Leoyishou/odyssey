import{_ as e}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as o,f as n,o as r}from"./app-DokaGNO4.js";const s={};function i(a,t){return r(),o("div",null,t[0]||(t[0]=[n('<p><strong>Batch API</strong> 是一种可以批量处理大量请求的异步接口，非常适合那些不需要立即返回结果的任务。例如，如果你有一个庞大的数据集需要分类、要进行大量的嵌入生成，或者需要对模型进行评估，那么 Batch API 可以帮助你更快、更省成本地完成这些工作。</p><p><strong>Batch API 的好处</strong></p><ol><li><p><strong>降低成本</strong>：Batch API 每次请求的费用比实时 API 低 50%，适合需要处理大量数据但又想节省成本的场景。</p></li><li><p><strong>更高的速率限制</strong>：使用 Batch API 时，允许的请求速率比标准 API 高很多，让你可以一次性处理更多的请求。</p></li><li><p><strong>24小时内完成</strong>：每个批次最多需要 24 小时就可以完成。对于不需要立即返回结果的任务（如数据分析），这是个非常合适的选择。</p></li></ol><p><strong>使用流程</strong></p><ol><li><p><strong>准备批处理文件</strong>：首先，你需要一个 .jsonl 文件（JSON格式的文本文件，每行代表一个请求）。在每一行里，包含请求的详细信息，比如模型名称、输入文本、输出的最大 token 数量等。</p></li><li><p><strong>上传批处理文件</strong>：用 OpenAI 提供的 Files API 上传这个 .jsonl 文件。</p></li><li><p><strong>创建批处理任务</strong>：上传文件后，创建一个批处理任务。这个任务会依次处理每一行请求并返回结果。</p></li><li><p><strong>查询任务状态</strong>：任务创建后，你可以随时查看其状态，如“处理中”、“已完成”或“已过期”等。</p></li><li><p><strong>下载批处理结果</strong>：任务完成后，可以下载一个 .jsonl 文件，其中包含每条请求的响应。</p></li><li><p><strong>取消任务</strong>：如果批处理任务需要中止，可以发出取消指令。</p></li></ol><p><strong>使用场景</strong> • <strong>运行评估</strong>：可以批量测试模型的输出质量，查看模型是否符合预期。 • <strong>分类数据集</strong>：对大规模数据集进行分类。 • <strong>嵌入内容</strong>：将大量文本内容转换成向量（Embedding）用于进一步的分析。</p><p><strong>限制和注意事项</strong></p><p>• <strong>请求数量</strong>：每个批处理任务最多包含 50,000 个请求。</p><p>• <strong>文件大小</strong>：批处理文件最大不能超过 200MB。</p><p>• <strong>单个批次的执行时间</strong>：每个批次会在 24 小时内完成，但通常会更快。</p><p>• <strong>任务过期</strong>：如果批处理任务超过 24 小时未完成，会自动变成过期状态，已完成的请求结果仍可以下载。</p><p><strong>总结</strong></p><p>Batch API 就像是一个“后台处理器”，让你可以把大量的请求一次性提交给模型，它会在后台自动处理，而不占用实时请求的资源。所以，对于需要批量处理而不急于得到即时反馈的任务来说，Batch API 是一个高效且经济的选择。</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span></span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div>',14)]))}const g=e(s,[["render",i],["__file","Batch API.html.vue"]]),c=JSON.parse('{"path":"/1%20%E4%B8%80%E5%88%87%E7%9A%86%E9%A1%B9%E7%9B%AE/qt%20Agent/API%20%E7%89%B9%E6%80%A7/Batch%20API.html","title":"","lang":"zh-CN","frontmatter":{"description":"Batch API 是一种可以批量处理大量请求的异步接口，非常适合那些不需要立即返回结果的任务。例如，如果你有一个庞大的数据集需要分类、要进行大量的嵌入生成，或者需要对模型进行评估，那么 Batch API 可以帮助你更快、更省成本地完成这些工作。 Batch API 的好处 降低成本：Batch API 每次请求的费用比实时 API 低 50%，适合...","head":[["meta",{"property":"og:url","content":"https://vuepress-theme-hope-docs-demo.netlify.app/1%20%E4%B8%80%E5%88%87%E7%9A%86%E9%A1%B9%E7%9B%AE/qt%20Agent/API%20%E7%89%B9%E6%80%A7/Batch%20API.html"}],["meta",{"property":"og:site_name","content":"转了码的刘公子"}],["meta",{"property":"og:description","content":"Batch API 是一种可以批量处理大量请求的异步接口，非常适合那些不需要立即返回结果的任务。例如，如果你有一个庞大的数据集需要分类、要进行大量的嵌入生成，或者需要对模型进行评估，那么 Batch API 可以帮助你更快、更省成本地完成这些工作。 Batch API 的好处 降低成本：Batch API 每次请求的费用比实时 API 低 50%，适合..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-11-24T16:17:22.000Z"}],["meta",{"property":"article:modified_time","content":"2024-11-24T16:17:22.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-11-24T16:17:22.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"转了码的刘公子\\",\\"url\\":\\"https://mister-hope.com\\"}]}"]]},"headers":[],"git":{"createdTime":1732465042000,"updatedTime":1732465042000,"contributors":[{"name":"Luis","email":"liuysh20@gmail.com","commits":1}]},"readingTime":{"minutes":2.45,"words":735},"filePathRelative":"1 一切皆项目/qt Agent/API 特性/Batch API.md","localizedDate":"2024年11月25日","autoDesc":true}');export{g as comp,c as data};
