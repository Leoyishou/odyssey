import{_ as l}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as t,f as e,a as s,b as a,d as h,e as r,r as p,o}from"./app-DokaGNO4.js";const d={};function k(g,i){const n=p("RouteLink");return o(),t("div",null,[i[9]||(i[9]=e('<ul><li><a href="#github%E7%9A%84%20ssh">github的 ssh</a></li><li><a href="#DDD">DDD</a></li><li><a href="#Openai%20Assistant">Openai Assistant</a></li><li><a href="#%E4%B8%89%E3%80%81%E9%83%A8%E7%BD%B2">三、部署</a></li><li><a href="#%E9%83%A8%E7%BD%B2%E6%AD%A5%E9%AA%A4">部署步骤</a></li><li><a href="#%E6%9C%8D%E5%8A%A1%E5%99%A8">服务器</a></li><li><a href="#CICD/%E6%B5%81%E6%B0%B4%E7%BA%BF">CICD/流水线</a><ul><li><a href="#%E5%B0%9D%E8%AF%95%E8%BF%87github%20action">尝试过github action</a></li></ul></li><li><a href="#Docker">Docker</a></li><li><a href="#%E5%A6%82%E4%BD%95%E5%85%B3shell%E7%9A%84%E6%97%B6%E5%80%99%E4%B9%9F%E4%B8%8D%E5%85%B3%E5%BA%94%E7%94%A8">如何关shell的时候也不关应用</a></li><li><a href="#%E5%AD%A6%E4%B9%A0%E7%82%B9">学习点</a></li><li><a href="#%E5%9F%9F%E5%90%8D">域名</a></li><li><a href="#%E5%A6%82%E4%BD%95%E7%BB%91%E5%AE%9A%E5%88%B0%E6%8C%87%E5%AE%9A%E7%9A%84%E7%AB%AF%E5%8F%A3">如何绑定到指定的端口</a><ul><li><a href="#1.%20%E8%AE%BE%E7%BD%AE%20DNS%20%E8%AE%B0%E5%BD%95">1. 设置 DNS 记录</a></li><li><a href="#2.%20%E5%A4%84%E7%90%86%E7%AB%AF%E5%8F%A3%E8%BD%AC%E5%8F%91%EF%BC%88%E5%A6%82%E6%9E%9C%E9%9C%80%E8%A6%81%EF%BC%89">2. 处理端口转发（如果需要）</a></li><li><a href="#3.%20%E7%A1%AE%E4%BF%9D%E5%AE%89%E5%85%A8%E7%BB%84%E5%92%8C%E9%98%B2%E7%81%AB%E5%A2%99%E8%AE%BE%E7%BD%AE">3. 确保安全组和防火墙设置</a></li></ul></li><li><a href="#%E7%9B%B8%E5%85%B3%E8%B5%84%E6%96%99">相关资料</a></li><li><a href="#terminal%E8%BF%9E%E6%8E%A5">terminal连接</a></li><li><a href="#python%E8%99%9A%E6%8B%9F%E7%8E%AF%E5%A2%83">python虚拟环境</a></li><li><a href="#%E6%9C%AC%E5%9C%B0docker%E9%83%A8%E7%BD%B2">本地docker部署</a></li><li><a href="#python%E5%AD%A6%E4%B9%A0">python学习</a></li><li><a href="#What%20are%20tokens?">What are tokens?</a></li></ul><h2 id="github-的-ssh" tabindex="-1"><a class="header-anchor" href="#github-的-ssh"><span>Github 的 ssh</span></a></h2><p>cat ~/.ssh/id_ed25519.pub</p><h2 id="ddd" tabindex="-1"><a class="header-anchor" href="#ddd"><span>DDD</span></a></h2>',4)),s("ul",null,[s("li",null,[i[7]||(i[7]=s("p",null,[s("strong",null,"domain/"),a(": 包含领域逻辑和领域模型。")],-1)),s("ul",null,[i[4]||(i[4]=s("li",null,[s("strong",null,"entities/"),a(": 领域实体，例如视频、转录文本、用户等。")],-1)),i[5]||(i[5]=s("li",null,[s("strong",null,"repositories/"),a(": 数据访问接口，例如视频和文本的存储和检索。")],-1)),i[6]||(i[6]=s("li",null,[s("strong",null,"services/"),a(": 领域服务，包括复杂的业务逻辑。")],-1)),s("li",null,[i[1]||(i[1]=s("strong",null,"value_objects/",-1)),i[2]||(i[2]=a(": ")),h(n,{to:"/2%20%E7%AC%AC%E4%BA%8C%E5%A4%A7%E8%84%91/1%20%E8%8A%82%E7%82%B9/%E8%8B%B1%E8%AF%AD/viva/%E4%B8%8D%E5%8F%AF%E5%8F%98%E7%9A%84.html"},{default:r(()=>i[0]||(i[0]=[a("不可变的")])),_:1}),i[3]||(i[3]=a("对象，用于表示领域内的值。"))])])]),i[8]||(i[8]=e("<li><p><strong>application/</strong>: 应用层，协调领域和基础设施层的操作。</p><ul><li><strong>interfaces/</strong>: 用于定义外部服务接口，例如语音识别和大模型 API。</li><li><strong>services/</strong>: 应用服务，处理应用逻辑，如调用领域服务和基础设施。</li><li><strong>handlers/</strong>: 处理外部请求（例如 API 请求）并调用应用服务。</li></ul></li><li><p><strong>infrastructure/</strong>: 基础设施层，实现数据持久化、外部服务集成等。</p><ul><li><strong>api_clients/</strong>: 与外部 API（如语音识别和大模型 API）的集成。</li><li><strong>database/</strong>: 数据库访问实现，如 ORM 模型。</li><li><strong>messaging/</strong>: 消息队列、事件总线等。</li><li><strong>file_storage/</strong>: 文件存储实现，用于视频上传和存储。</li></ul></li><li><p><strong>presentation/</strong>: 表现层，用户界面和 API 端点。</p><ul><li><strong>api/</strong>: 提供 RESTful API 端点。</li><li><strong>cli/</strong>: 如果需要，可以提供命令行界面。</li><li><strong>web/</strong>: Web 前端界面（如果有）。</li></ul></li><li><p><strong>tests/</strong>: 测试目录，包括领域、应用和基础设施层的测试。</p></li><li><p><strong>main.py</strong>: 应用程序入口点。</p></li><li><p><strong>requirements.txt</strong>: 项目依赖。</p></li>",6))]),i[10]||(i[10]=e(`<h2 id="openai-assistant" tabindex="-1"><a class="header-anchor" href="#openai-assistant"><span>Openai Assistant</span></a></h2><p>面向对象的 assistant 写法 <a href="https://github.com/dbookstaber/OpenAI_Assistant/blob/main/assistant.py" target="_blank" rel="noopener noreferrer">OpenAI_Assistant/assistant.py at main · dbookstaber/OpenAI_Assistant (github.com)</a></p><h2 id="三、部署" tabindex="-1"><a class="header-anchor" href="#三、部署"><span>三、部署</span></a></h2><h3 id="部署步骤" tabindex="-1"><a class="header-anchor" href="#部署步骤"><span>部署步骤</span></a></h3><h3 id="服务器" tabindex="-1"><a class="header-anchor" href="#服务器"><span>服务器</span></a></h3><p>aws 的 lightsail 是目前大厂云最便宜的，每个月 3.5 美元，配置双核，搞搞普通应用完全足够了。</p><p>这个费用可以用 aws 的优惠码抵扣，而很多 aws 优惠码可以买到，这就叫吃码，注意优惠码的有效期和 aws 区域限定，不要充错了。</p><h3 id="cicd-流水线" tabindex="-1"><a class="header-anchor" href="#cicd-流水线"><span>CICD/流水线</span></a></h3><ol><li>github action</li><li>jenkins</li></ol><h3 id="docker" tabindex="-1"><a class="header-anchor" href="#docker"><span>Docker</span></a></h3><p>官方 python 的 docker 部署文档<br><a href="https://docs.docker.com/language/python/deploy/" target="_blank" rel="noopener noreferrer">Test your Python deployment | Docker Docs</a></p><p><a href="https://aws.amazon.com/blogs/aws/lightsail-containers-an-easy-way-to-run-your-containers-in-the-cloud/" target="_blank" rel="noopener noreferrer">Lightsail Containers: An Easy Way to Run your Containers in the Cloud | AWS News Blog (amazon.com)</a></p><h3 id="如何关-shell-的时候也不关应用" tabindex="-1"><a class="header-anchor" href="#如何关-shell-的时候也不关应用"><span>如何关 shell 的时候也不关应用</span></a></h3><ol><li><p>tmux<br><a href="https://medium.com/p/416a41f69dc3" target="_blank" rel="noopener noreferrer">How to Deploy a Stre amlit App using an Amazon Free ec2 instance? | by Rahul Agarwal | Towards Data Science (medium.com)</a><br><code> tmux</code> 是一个终端复用器，它允许用户在一个终端窗口中开启多个会话，同时还能够断开和重新连接会话，而不会丢失控制台的状态。这在远程工作或需要长时间运行程序的情况下非常有用。</p></li><li><p>设置为系统服务<br> 在 <code>/etc/systemd/system/</code> 编写系统服务的配置文件</p></li></ol><h3 id="python-依赖" tabindex="-1"><a class="header-anchor" href="#python-依赖"><span>Python 依赖</span></a></h3><p>生成 reqs 的正确姿势 <a href="https://learnku.com/articles/47470" target="_blank" rel="noopener noreferrer">python生成requirements.txt的两种方法 | Python 技术论坛 (learnku.com)</a></p><h3 id="域名" tabindex="-1"><a class="header-anchor" href="#域名"><span>域名</span></a></h3><p>代理分 forward 和 reverse，客户端到服务器的方向为正向</p><h4 id="绑定域名" tabindex="-1"><a class="header-anchor" href="#绑定域名"><span>绑定域名</span></a></h4><p>要将绑定到 AWS Lightsail 的域名指向你的特定服务（如 <code>http://3.36.87.181:8501/</code>），你需要进行几个步骤。这通常涉及到设置 DNS 记录以及可能的服务器配置。以下是一般步骤：</p><h5 id="_1-设置-dns-记录" tabindex="-1"><a class="header-anchor" href="#_1-设置-dns-记录"><span>1. 设置 DNS 记录</span></a></h5><p>要将域名解析到特定的 IP 地址，你需要在你的域名注册商的控制面板中设置 DNS 记录。对于 AWS Lightsail：</p><ol><li>登录到 AWS Lightsail 控制台。</li><li>转到「网络」选项卡，然后选择你的域名。</li><li>在 DNS 区域管理中，你可以添加或编辑 DNS 记录。</li><li>添加一个 A 记录，将你的域名（例如 <code>www.example.com</code>）指向你的公网 IP 地址（例如 <code>3.36.87.181</code>）。</li></ol><h5 id="_2-处理端口转发-如果需要" tabindex="-1"><a class="header-anchor" href="#_2-处理端口转发-如果需要"><span>2. 处理端口转发（如果需要）</span></a></h5><p>由于你的服务运行在非标准端口（8501），你可能还需要在服务器上设置端口转发，让所有指向标准 HTTP 端口（80）的流量自动转发到端口 8501。这可以通过设置反向代理来完成，例如使用 Nginx 或 Apache。</p><p>以 Nginx 为例：</p><ol><li><p>安装 Nginx。</p></li><li><p>编辑 Nginx 配置文件（通常位于 <code>/etc/nginx/sites-available/default</code>）。</p></li><li><p>设置一个 server 块来转发流量：</p><p>nginxCopy code</p></li></ol><div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" data-title="java" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">server {     </span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">	listen </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">80</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">  </span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">	   </span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">	server_name </span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">www</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">liugongzi</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">org</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">	</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">	location </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">/</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;"> {        </span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">		proxy_pass http</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">:</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">//localhost:8501;         </span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">		proxy_set_header </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;">Host</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> $host</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">         </span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">		proxy_set_header X</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">-</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">Real</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">-</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;">IP</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> $remote_addr</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">   </span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">			proxy_set_header X</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">-</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">Forwarded</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">-</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;">For</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">			$proxy_add_x_forwarded_for</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">         </span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">		proxy_set_header X</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">-</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">Forwarded</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">-</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;">Proto</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> $scheme</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">     </span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">	} </span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol><li>重启 Nginx 以应用更改。</li></ol><h5 id="_3-确保安全组和防火墙设置" tabindex="-1"><a class="header-anchor" href="#_3-确保安全组和防火墙设置"><span>3. 确保安全组和防火墙设置</span></a></h5><p>确保你的 Lightsail 实例的安全组和防火墙设置允许从端口 80（HTTP）和端口 8501 访问。</p><p>完成这些步骤后，你的域名应该能够正确指向你的服务。需要注意的是，DNS 更改可能需要一段时间才能在整个网络上生效。</p><h2 id="相关资料" tabindex="-1"><a class="header-anchor" href="#相关资料"><span>相关资料</span></a></h2><h3 id="terminal-连接" tabindex="-1"><a class="header-anchor" href="#terminal-连接"><span>Terminal 连接</span></a></h3><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">ssh</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -i</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> LightsailDefaultKey-ap-northeast-2.pem</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> bitnami@15.164.143.163</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h3 id="python-虚拟环境" tabindex="-1"><a class="header-anchor" href="#python-虚拟环境"><span>Python 虚拟环境</span></a></h3><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" data-title="shell" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">/opt/bitnami/python/venvs/viva_venv/bin</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h3 id="本地-docker-部署" tabindex="-1"><a class="header-anchor" href="#本地-docker-部署"><span>本地 docker 部署</span></a></h3><p>python -m viva run --host=0.0.0.0</p><p><img src="https://cdn.jsdelivr.net/gh/Leoyishou/imageHosting@main/img/20231220200129.png" alt="image.png|1000" loading="lazy"><br><img src="https://cdn.jsdelivr.net/gh/Leoyishou/imageHosting@main/img/20231220200504.png" alt="image.png|1000" loading="lazy"></p>`,40))])}const E=l(d,[["render",k],["__file","开发经验.html.vue"]]),m=JSON.parse('{"path":"/2%20%E7%AC%AC%E4%BA%8C%E5%A4%A7%E8%84%91/1%20%E8%8A%82%E7%82%B9/%E8%8B%B1%E8%AF%AD/viva/%E5%BC%80%E5%8F%91%E7%BB%8F%E9%AA%8C.html","title":"开发经验","lang":"zh-CN","frontmatter":{"draw":null,"tags":[],"title":"开发经验","date created":"2023-12-02T00:00:00.000Z","date modified":"2024-11-12T00:00:00.000Z","description":"github的 ssh DDD Openai Assistant 三、部署 部署步骤 服务器 CICD/流水线 尝试过github action Docker 如何关shell的时候也不关应用 学习点 域名 如何绑定到指定的端口 1. 设置 DNS 记录 2. 处理端口转发（如果需要） 3. 确保安全组和防火墙设置 相关资料 terminal连接 py...","head":[["meta",{"property":"og:url","content":"https://vuepress-theme-hope-docs-demo.netlify.app/2%20%E7%AC%AC%E4%BA%8C%E5%A4%A7%E8%84%91/1%20%E8%8A%82%E7%82%B9/%E8%8B%B1%E8%AF%AD/viva/%E5%BC%80%E5%8F%91%E7%BB%8F%E9%AA%8C.html"}],["meta",{"property":"og:site_name","content":"转了码的刘公子"}],["meta",{"property":"og:title","content":"开发经验"}],["meta",{"property":"og:description","content":"github的 ssh DDD Openai Assistant 三、部署 部署步骤 服务器 CICD/流水线 尝试过github action Docker 如何关shell的时候也不关应用 学习点 域名 如何绑定到指定的端口 1. 设置 DNS 记录 2. 处理端口转发（如果需要） 3. 确保安全组和防火墙设置 相关资料 terminal连接 py..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://cdn.jsdelivr.net/gh/Leoyishou/imageHosting@main/img/20231220200129.png"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-11-24T16:17:22.000Z"}],["meta",{"property":"article:modified_time","content":"2024-11-24T16:17:22.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"开发经验\\",\\"image\\":[\\"https://cdn.jsdelivr.net/gh/Leoyishou/imageHosting@main/img/20231220200129.png\\",\\"https://cdn.jsdelivr.net/gh/Leoyishou/imageHosting@main/img/20231220200504.png\\"],\\"dateModified\\":\\"2024-11-24T16:17:22.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"转了码的刘公子\\",\\"url\\":\\"https://mister-hope.com\\"}]}"]]},"headers":[{"level":2,"title":"Github 的 ssh","slug":"github-的-ssh","link":"#github-的-ssh","children":[]},{"level":2,"title":"DDD","slug":"ddd","link":"#ddd","children":[]},{"level":2,"title":"Openai Assistant","slug":"openai-assistant","link":"#openai-assistant","children":[]},{"level":2,"title":"三、部署","slug":"三、部署","link":"#三、部署","children":[{"level":3,"title":"部署步骤","slug":"部署步骤","link":"#部署步骤","children":[]},{"level":3,"title":"服务器","slug":"服务器","link":"#服务器","children":[]},{"level":3,"title":"CICD/流水线","slug":"cicd-流水线","link":"#cicd-流水线","children":[]},{"level":3,"title":"Docker","slug":"docker","link":"#docker","children":[]},{"level":3,"title":"如何关 shell 的时候也不关应用","slug":"如何关-shell-的时候也不关应用","link":"#如何关-shell-的时候也不关应用","children":[]},{"level":3,"title":"Python 依赖","slug":"python-依赖","link":"#python-依赖","children":[]},{"level":3,"title":"域名","slug":"域名","link":"#域名","children":[]}]},{"level":2,"title":"相关资料","slug":"相关资料","link":"#相关资料","children":[{"level":3,"title":"Terminal 连接","slug":"terminal-连接","link":"#terminal-连接","children":[]},{"level":3,"title":"Python 虚拟环境","slug":"python-虚拟环境","link":"#python-虚拟环境","children":[]},{"level":3,"title":"本地 docker 部署","slug":"本地-docker-部署","link":"#本地-docker-部署","children":[]}]}],"git":{"createdTime":1732465042000,"updatedTime":1732465042000,"contributors":[{"name":"Luis","email":"liuysh20@gmail.com","commits":1}]},"readingTime":{"minutes":5.17,"words":1550},"filePathRelative":"2 第二大脑/1 节点/英语/viva/开发经验.md","localizedDate":"2024年11月25日","autoDesc":true}');export{E as comp,m as data};
