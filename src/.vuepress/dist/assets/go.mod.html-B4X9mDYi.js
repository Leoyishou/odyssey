import{_ as s}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as a,f as e,o as l}from"./app-DokaGNO4.js";const n={};function t(d,i){return l(),a("div",null,i[0]||(i[0]=[e(`<p><code>go mod init 6.824</code> 这个命令在 Go 中类似于在 Java 项目中创建 <code>pom.xml</code>（Maven）或 <code>build.gradle</code>（Gradle）文件。</p><p>让我详细解释一下：</p><ol><li><p><strong>Java 对比</strong>:</p><ul><li>Java: <code>pom.xml</code> 或 <code>build.gradle</code> 定义项目的依赖管理和构建配置</li><li>Go: <code>go.mod</code> 文件实现类似功能</li></ul></li><li><p><strong>模块名称</strong>:</p><ul><li><code>6.824</code> 是模块名称，类似于 Java 中的 <code>groupId</code> + <code>artifactId</code></li><li>比如 Java 中可能是：<div class="language-xml line-numbers-mode" data-highlighter="shiki" data-ext="xml" data-title="xml" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">groupId</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;edu.mit&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">groupId</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">artifactId</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;distributed-systems&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">artifactId</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div></li></ul></li><li><p><strong>功能对比</strong>:</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>Java (Maven)                    |  Go (go.mod)</span></span>
<span class="line"><span>--------------------------------|--------------------------------</span></span>
<span class="line"><span>依赖管理: &lt;dependencies&gt;        |  require 语句</span></span>
<span class="line"><span>版本控制: &lt;version&gt;            |  模块版本号 (v1.2.3)</span></span>
<span class="line"><span>项目标识: groupId + artifactId  |  module 名称</span></span>
<span class="line"><span>构建配置: &lt;build&gt;              |  go build 命令</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p><strong>示例</strong>:</p><div class="language-go line-numbers-mode" data-highlighter="shiki" data-ext="go" data-title="go" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">// go.mod 文件内容</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">module</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 6.824</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">go</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 1.16</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">  // Go 版本声明</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">require</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> (</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">    github</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">com</span><span style="--shiki-light:#383A42;--shiki-dark:#C678DD;">/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">some</span><span style="--shiki-light:#383A42;--shiki-dark:#C678DD;">/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">dependency</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> v1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">2.3</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">  // 外部依赖</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ol><p>这个命令创建的 <code>go.mod</code> 文件是 Go 模块系统的核心，它：</p><ol><li>定义了项目的模块路径</li><li>管理项目的依赖关系</li><li>确保项目的可重复构建</li><li>支持版本控制</li></ol><p>所以它在功能上最接近 Java 的 Maven/Gradle 配置文件，但语法和结构更简单。</p>`,6)]))}const r=s(n,[["render",t],["__file","go.mod.html.vue"]]),h=JSON.parse('{"path":"/2%20%E7%AC%AC%E4%BA%8C%E5%A4%A7%E8%84%91/1%20%E8%8A%82%E7%82%B9/CS/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/go.mod.html","title":"","lang":"zh-CN","frontmatter":{"description":"go mod init 6.824 这个命令在 Go 中类似于在 Java 项目中创建 pom.xml（Maven）或 build.gradle（Gradle）文件。 让我详细解释一下： Java 对比: Java: pom.xml 或 build.gradle 定义项目的依赖管理和构建配置 Go: go.mod 文件实现类似功能 模块名称: 6.82...","head":[["meta",{"property":"og:url","content":"https://vuepress-theme-hope-docs-demo.netlify.app/2%20%E7%AC%AC%E4%BA%8C%E5%A4%A7%E8%84%91/1%20%E8%8A%82%E7%82%B9/CS/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/go.mod.html"}],["meta",{"property":"og:site_name","content":"转了码的刘公子"}],["meta",{"property":"og:description","content":"go mod init 6.824 这个命令在 Go 中类似于在 Java 项目中创建 pom.xml（Maven）或 build.gradle（Gradle）文件。 让我详细解释一下： Java 对比: Java: pom.xml 或 build.gradle 定义项目的依赖管理和构建配置 Go: go.mod 文件实现类似功能 模块名称: 6.82..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-12-11T14:48:27.000Z"}],["meta",{"property":"article:modified_time","content":"2024-12-11T14:48:27.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-12-11T14:48:27.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"转了码的刘公子\\",\\"url\\":\\"https://mister-hope.com\\"}]}"]]},"headers":[],"git":{"createdTime":1733928507000,"updatedTime":1733928507000,"contributors":[{"name":"Luis","email":"liuysh20@gmail.com","commits":1}]},"readingTime":{"minutes":0.87,"words":261},"filePathRelative":"2 第二大脑/1 节点/CS/编程语言/go.mod.md","localizedDate":"2024年12月11日","autoDesc":true}');export{r as comp,h as data};
