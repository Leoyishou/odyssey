import{_ as n}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as E,a as d,b as r,d as o,e as a,f as l,r as i,o as s}from"./app-DokaGNO4.js";const m={};function p(c,t){const e=i("RouteLink");return s(),E("div",null,[t[2]||(t[2]=d("p",null,[r("有一些超级难的算法比如遗传算法，蚁群算法，看了数学建模国赛感觉好难写，那些人怎么写出来的? - 幼鹰 me 的回答 - 知乎"),d("br"),r(" https://www.zhihu.com/question/345429819/answer/887625579")],-1)),d("p",null,[o(e,{to:"/2%20%E7%AC%AC%E4%BA%8C%E5%A4%A7%E8%84%91/1%20%E8%8A%82%E7%82%B9/CS/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%92%8C%E7%AE%97%E6%B3%95/LeetCode.html"},{default:a(()=>t[0]||(t[0]=[r("LeetCode")])),_:1})]),d("p",null,[o(e,{to:"/2%20%E7%AC%AC%E4%BA%8C%E5%A4%A7%E8%84%91/1%20%E8%8A%82%E7%82%B9/CS/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%92%8C%E7%AE%97%E6%B3%95/%E6%8E%92%E5%BA%8F.html"},{default:a(()=>t[1]||(t[1]=[r("排序")])),_:1})]),t[3]||(t[3]=l("<table><thead><tr><th>主题</th><th>子主题</th><th>具体内容</th><th>相关题目</th><th>备注</th></tr></thead><tbody><tr><td>数组</td><td>一维</td><td>数组理论基础</td><td></td><td></td></tr><tr><td></td><td></td><td></td><td>有多少小于当前数字的数字</td><td></td></tr><tr><td></td><td></td><td></td><td>3. 移除元素</td><td></td></tr><tr><td></td><td></td><td></td><td>4. 有序数组的平方</td><td></td></tr><tr><td></td><td></td><td></td><td>5. 长度最小的子数组</td><td></td></tr><tr><td></td><td></td><td></td><td>【网易】电影院选座</td><td></td></tr><tr><td></td><td>摩尔投票法</td><td></td><td>169. 多数元素</td><td>JZ39 数组中出现次数超过一半的数字</td></tr><tr><td></td><td></td><td></td><td></td><td>摩尔投票法对拼消耗</td></tr><tr><td></td><td>for因子动态变化</td><td></td><td>6. 螺旋矩阵II</td><td>JZ29 顺时针打印矩阵</td></tr><tr><td></td><td></td><td></td><td></td><td>模拟过程（四边界 或 偏移量）</td></tr><tr><td></td><td></td><td></td><td>7. 跳跃游戏</td><td>一格一更</td></tr><tr><td></td><td></td><td></td><td>8. 跳跃游戏II</td><td>一步一更</td></tr><tr><td></td><td>前缀和</td><td></td><td>剑指 Offer II 071. 按权重生成随机数</td><td>随机数 random.nextInt(n)[0,n) newDouble[0, 1.0)</td></tr><tr><td></td><td></td><td></td><td>525. 连续数组</td><td></td></tr><tr><td></td><td></td><td></td><td>剑指 Offer II 013. 二维子矩阵的和</td><td></td></tr><tr><td></td><td></td><td></td><td>lc303</td><td></td></tr><tr><td></td><td></td><td></td><td>lc304</td><td></td></tr><tr><td></td><td>二维</td><td></td><td>17. 用最少数量的箭引爆气球</td><td>Integer.compare(o1[0],o2[0])，直接极小和极大作差会造成整型溢出</td></tr><tr><td></td><td></td><td></td><td>18. 无重叠区间</td><td>Float.compare(a,b)</td></tr><tr><td></td><td></td><td></td><td>20. 合并区间</td><td>二维数组排序，也是自定义比较器</td></tr><tr><td></td><td></td><td></td><td>19. 划分字母区间</td><td>flag + 数组型哈希</td></tr><tr><td></td><td></td><td></td><td>7. 总结篇</td><td></td></tr><tr><td>字符串</td><td></td><td></td><td>1. 反转字符串</td><td></td></tr><tr><td></td><td></td><td></td><td>JZ58 左旋转字符串</td><td>str.substring()</td></tr><tr><td></td><td></td><td></td><td>2. 反转字符串II</td><td></td></tr><tr><td></td><td></td><td></td><td>3. 替换空格</td><td></td></tr><tr><td></td><td></td><td></td><td>【百度】for循环的嵌套层数</td><td>把一大段文本，逐行扫描，append成一个长字符串</td></tr><tr><td></td><td>考虑多情况处理流程</td><td></td><td>JZ67 把字符串转换成整数(atoi)</td><td>lc8. 字符串转换整数 (atoi)</td></tr><tr><td></td><td></td><td></td><td></td><td>011111111(+127) 11111111(-127) 00000000(0) 10000000 (-128)</td></tr><tr><td></td><td>kmp</td><td></td><td>6. 实现strStr())</td><td></td></tr><tr><td></td><td></td><td></td><td>7. 重复的子字符串</td><td></td></tr><tr><td></td><td></td><td></td><td>43. 字符串相乘</td><td>int y = j &gt;= 0? num2.charAt(j) - &#39;0&#39;: 0;</td></tr><tr><td></td><td></td><td></td><td>8. 总结篇</td><td></td></tr><tr><td>链表</td><td></td><td></td><td>1. 链表理论基础</td><td></td></tr><tr><td></td><td></td><td></td><td>JZ18 删除链表的节点</td><td>dummy = new ListNode(-1)</td></tr><tr><td></td><td></td><td></td><td>BM11 链表相加（二）</td><td>2. 两数相加</td></tr><tr><td></td><td></td><td></td><td>2. 移除链表元素</td><td></td></tr><tr><td></td><td></td><td></td><td>3. 设计链表</td><td></td></tr><tr><td></td><td></td><td></td><td>4. 翻转链表</td><td>dummyNode</td></tr><tr><td></td><td></td><td></td><td>5. 两两交换链表中的节点</td><td>按顺序连线</td></tr><tr><td></td><td></td><td></td><td>JZ76 删除链表中重复的结点</td><td>82. 删除排序链表中的重复元素 II</td></tr><tr><td></td><td></td><td></td><td></td><td>cur.next!= null前面一定要有cur!= null</td></tr><tr><td></td><td></td><td></td><td>JZ6 从尾到头打印链表</td><td></td></tr><tr><td></td><td></td><td></td><td>14. 根据身高重建队列</td><td>链表定点添加</td></tr><tr><td></td><td></td><td></td><td>9. 总结篇</td><td></td></tr><tr><td>集合</td><td></td><td></td><td>【美团】字母数</td><td></td></tr><tr><td>有序集合</td><td></td><td></td><td>【美团】集合问题</td><td></td></tr><tr><td>哈希表</td><td></td><td></td><td>1. 哈希表理论基础</td><td></td></tr><tr><td></td><td></td><td></td><td>JZ35 复杂链表的复制</td><td>需要储存映射关系以备使用的时候就用哈希表</td></tr><tr><td></td><td>数组即可胜任</td><td></td><td>【5.1】修改大小写</td><td></td></tr><tr><td></td><td></td><td></td><td>JZ50 第一个只出现一次的字符</td><td>ref.keySet().contains(x)</td></tr><tr><td></td><td></td><td></td><td>2. 有效的字母异位词</td><td></td></tr><tr><td></td><td></td><td></td><td>3. 两个数组的交集</td><td></td></tr><tr><td></td><td></td><td></td><td>4. 快乐数</td><td>取数值各个位上的单数操作</td></tr><tr><td></td><td></td><td></td><td>6. 四数相加II</td><td>分为两组两数之和</td></tr><tr><td></td><td></td><td></td><td>7. 赎金信</td><td></td></tr><tr><td></td><td>用哈希</td><td></td><td>5. 两数之和</td><td>JZ57 和为S的两个数字</td></tr><tr><td></td><td></td><td></td><td></td><td>边放边搜，ref.containsKey(array[i])</td></tr><tr><td></td><td>不用哈希，用指针</td><td></td><td>8. 三数之和</td><td>两个去重点</td></tr><tr><td></td><td></td><td></td><td>9. 四数之和</td><td></td></tr><tr><td>有序哈希表</td><td></td><td></td><td></td><td>TreeMap按照key的大小，LinkedHashMap按照key加入的时间</td></tr><tr><td>哈希+双向链表</td><td></td><td></td><td>146. LRU 缓存</td><td></td></tr><tr><td>双哈希</td><td></td><td></td><td>460. LFU 缓存</td><td>排行榜的场景,重写compareTo、equals、hachcode。ts默认是从左到右升序</td></tr><tr><td>栈与队列</td><td></td><td></td><td>2. 用栈实现队列</td><td></td></tr><tr><td></td><td></td><td></td><td>3. 用队列实现栈</td><td></td></tr><tr><td></td><td></td><td></td><td>JZ31 栈的压入、弹出序列</td><td></td></tr><tr><td></td><td></td><td></td><td>4. 有效的括号</td><td></td></tr><tr><td></td><td></td><td></td><td>lc32. 最长有效括号</td><td>栈中存下标 先标记再统计</td></tr><tr><td></td><td></td><td></td><td>71. 简化路径</td><td>根目录退无可退，deque出口均在前first，split会出现&quot;&quot;元素</td></tr><tr><td></td><td></td><td></td><td>【腾讯】压缩算法</td><td>转义字符</td></tr><tr><td></td><td></td><td></td><td>5. 删除字符串中的所有相邻重复项</td><td></td></tr><tr><td></td><td></td><td></td><td>155. 最小栈</td><td>随时序变化的每一刻都记录，才能倒退回去</td></tr><tr><td></td><td></td><td></td><td>3. 二叉树的迭代遍历</td><td>迭代法 - 自己压栈弹栈</td></tr><tr><td></td><td></td><td></td><td>6. 逆波兰表达式求值</td><td></td></tr><tr><td>单调队列/滑动窗口</td><td></td><td></td><td>7. 滑动窗口最大值</td><td>JZ59 滑动窗口的最大值</td></tr><tr><td></td><td></td><td></td><td></td><td>普通队列实现滑动，单调性维护窗口内秩序</td></tr><tr><td></td><td></td><td></td><td>【美团6.1】小团的装饰物2</td><td></td></tr><tr><td>单调栈</td><td></td><td></td><td>1. 每日温度</td><td>数组初始化默认值都为0，可以利用哦！</td></tr><tr><td></td><td></td><td></td><td>2. 下一个更大元素I</td><td></td></tr><tr><td></td><td></td><td></td><td>3. 下一个更大元素II</td><td></td></tr><tr><td></td><td></td><td></td><td>JZ30 包含min函数的栈</td><td>两个Integer比较要用equals，它不会自动拆箱</td></tr><tr><td></td><td></td><td></td><td>4. 接雨水</td><td></td></tr><tr><td></td><td></td><td></td><td>5. 柱状图中最大的矩形</td><td></td></tr><tr><td></td><td></td><td></td><td>【腾讯】逛街</td><td>反向遍历</td></tr><tr><td>堆（优先队列）</td><td>大根堆</td><td></td><td>面试题 17.14. 最小K个数</td><td></td></tr><tr><td></td><td></td><td></td><td>【美团】晋级人数</td><td></td></tr><tr><td></td><td></td><td></td><td>【美团】搭配出售</td><td>多维度考量的时候转为贪心思想，动态最大的情况用堆处理</td></tr><tr><td></td><td>小根堆</td><td></td><td>8. 前K个高频元素</td><td>o1-o2是小根堆</td></tr><tr><td></td><td></td><td></td><td>【美团10.3】公司食堂</td><td></td></tr><tr><td></td><td></td><td></td><td>JZ41 数据流中的中位数</td><td>比较器、lambda表达式</td></tr><tr><td>二叉树</td><td></td><td></td><td>35. 二叉树总结篇</td><td></td></tr><tr><td></td><td>BFS</td><td></td><td>5. 二叉树的层序遍历</td><td>JZ32 从上往下打印二叉树</td></tr><tr><td></td><td></td><td></td><td></td><td>循环队列的思想</td></tr><tr><td></td><td></td><td></td><td>【京东】紧急疏散</td><td></td></tr><tr><td></td><td></td><td></td><td>17. 找树左下角的值</td><td></td></tr><tr><td></td><td></td><td></td><td>JZ77 按之字形顺序打印二叉树</td><td>JZ78 把二叉树打印成多行</td></tr><tr><td></td><td></td><td></td><td></td><td>Collections.reverse()</td></tr><tr><td></td><td></td><td></td><td>JZ37 序列化二叉树</td><td></td></tr><tr><td></td><td>preOrder</td><td></td><td>前序</td><td>2. 二叉树的递归遍历</td></tr><tr><td></td><td></td><td></td><td></td><td>递归法 - java方法的栈机制</td></tr><tr><td></td><td></td><td></td><td>6. 翻转二叉树</td><td>JZ27 二叉树的镜像</td></tr><tr><td></td><td></td><td></td><td>8. 对称二叉树</td><td>100. 相同的树</td></tr><tr><td></td><td></td><td></td><td></td><td>双线同时先序遍历</td></tr><tr><td></td><td></td><td></td><td>22. 合并二叉树</td><td></td></tr><tr><td></td><td>inOrder</td><td></td><td>中序</td><td></td></tr><tr><td></td><td></td><td></td><td>JZ8 二叉树的下一个结点</td><td></td></tr><tr><td></td><td></td><td></td><td>19. 从中序与后序遍历序列构造二叉树</td><td>划分左右区间的递归问题，注意右区间索引的复杂性。</td></tr><tr><td></td><td>postOrder</td><td></td><td>后序</td><td>4. 二叉树的统一迭代法</td></tr><tr><td></td><td></td><td></td><td>9. 二叉树的最大深度</td><td>JZ55 二叉树的深度</td></tr><tr><td></td><td></td><td></td><td></td><td>左右比较后传值给根</td></tr><tr><td></td><td></td><td></td><td>10. 二叉树的最小深度</td><td>左右孩子都为空的节点才是叶子节点</td></tr><tr><td></td><td></td><td></td><td>11. 完全二叉树的节点个数</td><td></td></tr><tr><td></td><td></td><td></td><td>12. 平衡二叉树</td><td>JZ79 判断是不是平衡二叉树</td></tr><tr><td></td><td></td><td></td><td>16. 左叶子之和</td><td></td></tr><tr><td></td><td></td><td></td><td>27. 二叉树的最近公共祖先</td><td>JZ86 在二叉树中找到两个节点的最近公共祖先</td></tr><tr><td></td><td>D</td><td></td><td>JZ26 树的子结构</td><td>||控制的遍历递归</td></tr><tr><td></td><td>D</td><td></td><td>JZ13 机器人的运动范围</td><td>数位和，深度优先写的时候靠几个分叉控制（只写首层的广度）</td></tr><tr><td>二叉搜索树</td><td></td><td></td><td>23. 二叉搜索树中的搜索</td><td></td></tr><tr><td></td><td></td><td></td><td>24. 验证二叉搜索树</td><td>前驱pre节点的初始化</td></tr><tr><td></td><td></td><td></td><td>25. 二叉搜索树的最小绝对差</td><td></td></tr><tr><td></td><td></td><td></td><td>26. 二叉搜索树中的众数</td><td>pre节点初始化、flag刷新思想</td></tr><tr><td></td><td></td><td></td><td>JZ33 二叉搜索树的后序遍历序列</td><td>不要必须落入顺序数组的俗套中，一切从基本性质出发</td></tr><tr><td></td><td></td><td></td><td>29. 二叉搜索树的最近公共祖先</td><td>JZ68 二叉搜索树的最近公共祖先</td></tr><tr><td></td><td></td><td></td><td>30. 二叉搜索树中的插入操作</td><td></td></tr><tr><td></td><td></td><td></td><td>31. 删除二叉搜索树中的节点</td><td></td></tr><tr><td></td><td></td><td></td><td>32. 修剪二叉搜索树</td><td></td></tr><tr><td></td><td></td><td></td><td>33. 将有序数组转换为二叉搜索树</td><td></td></tr><tr><td></td><td></td><td></td><td>34. 把二叉搜索树转换为累加树</td><td></td></tr><tr><td></td><td></td><td></td><td>JZ54 二叉搜索树的第k个节点</td><td>if(root == null || res!= null) return false; root为null是到底停止的条件，res不为null是完成任务的停止条件，至于返回值，只是个信息，可以用也可以不用</td></tr><tr><td>图</td><td></td><td></td><td></td><td></td></tr><tr><td></td><td>DFS</td><td></td><td>【美团】小美的美丽树</td><td></td></tr><tr><td></td><td></td><td></td><td>200. 岛屿数量</td><td></td></tr><tr><td></td><td></td><td></td><td>【ZOOM】树结点染色计算总体权重</td><td></td></tr><tr><td></td><td></td><td></td><td>【米哈游】树的连通块</td><td>不要看到树就以为是二叉树，按有向图（多叉树）做</td></tr><tr><td></td><td></td><td></td><td>797. 所有可能的路径</td><td></td></tr></tbody></table>",1))])}const A=n(m,[["render",p],["__file","数据结构和算法.html.vue"]]),B=JSON.parse('{"path":"/2%20%E7%AC%AC%E4%BA%8C%E5%A4%A7%E8%84%91/1%20%E8%8A%82%E7%82%B9/CS/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%92%8C%E7%AE%97%E6%B3%95/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%92%8C%E7%AE%97%E6%B3%95.html","title":"数据结构和算法","lang":"zh-CN","frontmatter":{"draw":null,"tags":[],"title":"数据结构和算法","date created":"2024-07-14T00:00:00.000Z","date modified":"2024-11-12T00:00:00.000Z","description":"有一些超级难的算法比如遗传算法，蚁群算法，看了数学建模国赛感觉好难写，那些人怎么写出来的? - 幼鹰 me 的回答 - 知乎 https://www.zhihu.com/question/345429819/answer/887625579","head":[["meta",{"property":"og:url","content":"https://vuepress-theme-hope-docs-demo.netlify.app/2%20%E7%AC%AC%E4%BA%8C%E5%A4%A7%E8%84%91/1%20%E8%8A%82%E7%82%B9/CS/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%92%8C%E7%AE%97%E6%B3%95/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%92%8C%E7%AE%97%E6%B3%95.html"}],["meta",{"property":"og:site_name","content":"转了码的刘公子"}],["meta",{"property":"og:title","content":"数据结构和算法"}],["meta",{"property":"og:description","content":"有一些超级难的算法比如遗传算法，蚁群算法，看了数学建模国赛感觉好难写，那些人怎么写出来的? - 幼鹰 me 的回答 - 知乎 https://www.zhihu.com/question/345429819/answer/887625579"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-11-24T16:17:22.000Z"}],["meta",{"property":"article:modified_time","content":"2024-11-24T16:17:22.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"数据结构和算法\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-11-24T16:17:22.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"转了码的刘公子\\",\\"url\\":\\"https://mister-hope.com\\"}]}"]]},"headers":[],"git":{"createdTime":1732465042000,"updatedTime":1732465042000,"contributors":[{"name":"Luis","email":"liuysh20@gmail.com","commits":1}]},"readingTime":{"minutes":6.37,"words":1911},"filePathRelative":"2 第二大脑/1 节点/CS/数据结构和算法/数据结构和算法.md","localizedDate":"2024年11月25日","autoDesc":true}');export{A as comp,B as data};
