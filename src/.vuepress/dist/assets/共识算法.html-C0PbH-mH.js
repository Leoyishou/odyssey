import{_ as n}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as r,a as e,g as s,d as a,e as E,b as o,r as i,o as p}from"./app-DokaGNO4.js";const m={};function B(d,t){const l=i("RouteLink");return p(),r("div",null,[t[5]||(t[5]=e("p",null,"换句话说，可以理解为共识算法就是用来确保每个节点上的日志顺序都是一致的。",-1)),s(" more "),t[6]||(t[6]=e("p",null,[e("a",{href:"%E6%8B%9C%E5%8D%A0%E5%BA%AD%E5%B0%86%E5%86%9B%E9%97%AE%E9%A2%98"},"拜占庭将军问题")],-1)),t[7]||(t[7]=e("p",null,"两个反例：",-1)),t[8]||(t[8]=e("ol",null,[e("li",null,"桃花源记中的不知有汉 无论魏晋"),e("li",null,"有一名日本军官，二战结束后仍在菲律宾孤岛负隅顽抗30年")],-1)),e("p",null,[a(l,{to:"/1%20%E4%B8%80%E5%88%87%E7%9A%86%E9%A1%B9%E7%9B%AE/Q2%EF%BC%9A%E5%81%9ACS%E7%9A%84%E7%BB%8F%E5%85%B8lab/%E5%85%B1%E8%AF%86%E7%AE%97%E6%B3%95.html"},{default:E(()=>t[0]||(t[0]=[o("共识算法")])),_:1}),t[1]||(t[1]=o(" 允许一组节点像一个整体一样一起工作，即使其中一些节点出现故障也能够继续工作下去，其正确性主要源于复制状态机的性质："))]),t[9]||(t[9]=e("blockquote",null,[e("p",null,"任何初始状态一样的状态机，如果执行的命令序列一样，则最终达到的状态也一样。如果将此特性应用在多参与者进行协商共识上，可以理解为系统中存在多个具有完全相同的状态机（参与者），这些状态机能最终保持一致的关键就是起始状态完全一致和执行命令序列完全一致。")],-1)),t[10]||(t[10]=e("p",null,[o("众所周知，"),e("a",{href:"Paxos"},"Paxos"),o(" 是一个非常划时代的共识算法。在 Raft 出现之前的 10 年里，Paxos 几乎统治着共识算法这一领域：因为绝大多数共识算法的实现都是基于 Paxos 或者受其影响，同时 Paxos 也成为了教学领域里讲解共识问题时的示例。但是不幸的是，尽管有很多工作都在尝试降低 Paxos 的复杂性，但是它依然十分难以理解。并且，Paxos 自身的算法结构需要进行大幅的修改才能够应用到实际的系统中。这些都导致了工业界和学术界都对 Paxos 算法感到十分头疼。比如 Google Chubby 的论文就提到，因为 Paxos 的描述和现实差距太大，所以最终人们总会实现一套未经证实的类 Paxos 协议。")],-1)),e("p",null,[t[3]||(t[3]=o("基于以上背景，Diego Ongaro 在就读博士期间，深入研究 Paxos 协议后提出了 ")),a(l,{to:"/1%20%E4%B8%80%E5%88%87%E7%9A%86%E9%A1%B9%E7%9B%AE/Q2%EF%BC%9A%E5%81%9ACS%E7%9A%84%E7%BB%8F%E5%85%B8lab/Raft.html"},{default:E(()=>t[2]||(t[2]=[o("Raft")])),_:1}),t[4]||(t[4]=o(" 协议，旨在提供更为易于理解的共识算法。Raft 的宗旨在于可实践性和可理解性，并且相比 Paxos 几乎没有牺牲多少性能。"))])])}const f=n(m,[["render",B],["__file","共识算法.html.vue"]]),g=JSON.parse('{"path":"/1%20%E4%B8%80%E5%88%87%E7%9A%86%E9%A1%B9%E7%9B%AE/Q2%EF%BC%9A%E5%81%9ACS%E7%9A%84%E7%BB%8F%E5%85%B8lab/%E5%85%B1%E8%AF%86%E7%AE%97%E6%B3%95.html","title":"共识算法","lang":"zh-CN","frontmatter":{"draw":null,"tags":[],"title":"共识算法","date created":"2024-08-07T00:00:00.000Z","date modified":"2024-11-12T00:00:00.000Z","description":"换句话说，可以理解为共识算法就是用来确保每个节点上的日志顺序都是一致的。 拜占庭将军问题 两个反例： 桃花源记中的不知有汉 无论魏晋 有一名日本军官，二战结束后仍在菲律宾孤岛负隅顽抗30年 允许一组节点像一个整体一样一起工作，即使其中一些节点出现故障也能够继续工作下去，其正确性主要源于复制状态机的性质： 任何初始状态一样的状态机，如果执行的命令序列一样...","head":[["meta",{"property":"og:url","content":"https://vuepress-theme-hope-docs-demo.netlify.app/1%20%E4%B8%80%E5%88%87%E7%9A%86%E9%A1%B9%E7%9B%AE/Q2%EF%BC%9A%E5%81%9ACS%E7%9A%84%E7%BB%8F%E5%85%B8lab/%E5%85%B1%E8%AF%86%E7%AE%97%E6%B3%95.html"}],["meta",{"property":"og:site_name","content":"转了码的刘公子"}],["meta",{"property":"og:title","content":"共识算法"}],["meta",{"property":"og:description","content":"换句话说，可以理解为共识算法就是用来确保每个节点上的日志顺序都是一致的。 拜占庭将军问题 两个反例： 桃花源记中的不知有汉 无论魏晋 有一名日本军官，二战结束后仍在菲律宾孤岛负隅顽抗30年 允许一组节点像一个整体一样一起工作，即使其中一些节点出现故障也能够继续工作下去，其正确性主要源于复制状态机的性质： 任何初始状态一样的状态机，如果执行的命令序列一样..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-11-24T16:17:22.000Z"}],["meta",{"property":"article:modified_time","content":"2024-11-24T16:17:22.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"共识算法\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-11-24T16:17:22.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"转了码的刘公子\\",\\"url\\":\\"https://mister-hope.com\\"}]}"]]},"headers":[],"git":{"createdTime":1732465042000,"updatedTime":1732465042000,"contributors":[{"name":"Luis","email":"liuysh20@gmail.com","commits":1}]},"readingTime":{"minutes":1.96,"words":587},"filePathRelative":"1 一切皆项目/Q2：做CS的经典lab/共识算法.md","localizedDate":"2024年11月25日","autoDesc":true}');export{f as comp,g as data};
