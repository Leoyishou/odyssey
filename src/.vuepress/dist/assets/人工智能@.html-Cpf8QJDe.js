import{_ as e}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as B,a,b as s,d as l,e as t,f as A,r as E,o as p}from"./app-DokaGNO4.js";const r={};function d(o,i){const n=E("RouteLink");return p(),B("div",null,[a("p",null,[i[5]||(i[5]=a("img",{src:"https://imagehosting4picgo.oss-cn-beijing.aliyuncs.com/imagehosting/fix-dir%2Fpicgo%2Fpicgo-clipboard-images%2F2024%2F07%2F25%2F01-46-44-3b9d13a42b4c542b70cd587385dd65fb-20240725014643-4e7863.png",alt:"image.png|1000",loading:"lazy"},null,-1)),i[6]||(i[6]=a("br",null,null,-1)),i[7]||(i[7]=s(' 1943 年，麦卡洛克和皮茨发表 "M-P 神经元模型 "，用数理逻辑解释并模拟人脑的计算单元，并提出')),l(n,{to:"/2%20%E7%AC%AC%E4%BA%8C%E5%A4%A7%E8%84%91/1%20%E8%8A%82%E7%82%B9/CS/%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD/%E7%A5%9E%E7%BB%8F%E7%BD%91%E7%BB%9C.html"},{default:t(()=>i[0]||(i[0]=[s("神经网络")])),_:1}),i[8]||(i[8]=s('这一概念。 1956 年，" 人工智能 " 一词首先在达特茅斯会议上被提出。 1957 年，罗森布拉特提出')),i[9]||(i[9]=a("strong",null,"感知机",-1)),i[10]||(i[10]=s("模型，并在两年后成功制造能够识别英文字母的硬件感知机 Mark-1.")),i[11]||(i[11]=a("br",null,null,-1)),i[12]||(i[12]=s(" 1969 年，明斯基发表《感知机》，书中指出的感知机缺陷沉重打击了感知机乃至神经网络的研究。 1983 年，辛顿发明玻尔兹曼机。 1986 年，辛顿发明误差")),l(n,{to:"/2%20%E7%AC%AC%E4%BA%8C%E5%A4%A7%E8%84%91/1%20%E8%8A%82%E7%82%B9/CS/%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD/%E5%8F%8D%E5%90%91%E4%BC%A0%E6%92%AD%E7%AE%97%E6%B3%95.html"},{default:t(()=>i[1]||(i[1]=[s("反向传播算法")])),_:1}),i[13]||(i[13]=s('。 1989 年，杨立昆 (Yann LeCun) 发明 " 卷积神经网络 "(')),l(n,{to:"/2%20%E7%AC%AC%E4%BA%8C%E5%A4%A7%E8%84%91/1%20%E8%8A%82%E7%82%B9/CS/%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD/CNN.html"},{default:t(()=>i[2]||(i[2]=[s("CNN")])),_:1}),i[14]||(i[14]=s(")。 2006 年，辛顿提出深度信念网络，开启")),l(n,{to:"/2%20%E7%AC%AC%E4%BA%8C%E5%A4%A7%E8%84%91/1%20%E8%8A%82%E7%82%B9/CS/%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0.html"},{default:t(()=>i[3]||(i[3]=[s("深度学习")])),_:1}),i[15]||(i[15]=s("时代。 2012 年，辛顿和他的两个学生设计 AlexNet 在 ImageNet（李飞飞发起的）大赛中以绝对优势获得冠军，深度学习被业界所重视。 2015 年，Google 收购的 DeepMind 公司推出 AlphaGo，2016 年战胜李世石，2017 年战胜柯洁。OpenAI 成立。 2016 年，Hugging Face 成立。 2017 年，Google 发表 ")),l(n,{to:"/2%20%E7%AC%AC%E4%BA%8C%E5%A4%A7%E8%84%91/1%20%E8%8A%82%E7%82%B9/CS/%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD/Transformer.html"},{default:t(()=>i[4]||(i[4]=[s("Transformer")])),_:1}),i[16]||(i[16]=s(" 模型论文。 2018 年，OpenAI 基于 Transformer 架构发布了 GPT-1。Hugging Face 发布 Transformers 项目。 2019 年，OpenAI 发布 GPT-2。 2020 年，OpenAI 发布 GPT-3。Hugging Face 推出 Hugging Face Hub。 2022 年，OpenAI 发布 ChatGPT"))]),a("p",null,[i[18]||(i[18]=s("图中高亮的模块都用到了")),l(n,{to:"/2%20%E7%AC%AC%E4%BA%8C%E5%A4%A7%E8%84%91/1%20%E8%8A%82%E7%82%B9/CS/%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD/%E6%A2%AF%E5%BA%A6%E4%B8%8B%E9%99%8D%E7%AE%97%E6%B3%95.html"},{default:t(()=>i[17]||(i[17]=[s("梯度下降算法")])),_:1})]),i[41]||(i[41]=A(`<div class="language-mermaid line-numbers-mode" data-highlighter="shiki" data-ext="mermaid" data-title="mermaid" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">graph LR</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    AI[人工智能] --&gt; ML[机器学习]</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    AI --&gt; NLP[自然语言处理]</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    AI --&gt; CV[计算机视觉]</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    AI --&gt; Rob[机器人学]</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    AI --&gt; KR[知识表示与推理]</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    ML --&gt; SL[监督学习]</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    ML --&gt; UL[无监督学习]</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    ML --&gt; RL[强化学习]</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    ML --&gt; DL[深度学习]</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    SL --&gt; Cls[分类]:::gradient</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    SL --&gt; Reg[回归]:::gradient</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    UL --&gt; Clu[聚类]</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    UL --&gt; DR[降维]:::gradient</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    RL --&gt; Q[Q-learning]:::gradient</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    RL --&gt; PG[策略梯度]:::gradient</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    DL --&gt; CNN[卷积神经网络]:::gradient</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    DL --&gt; RNN[循环神经网络]:::gradient</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    DL --&gt; Tra[Transformer]:::gradient</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    NLP --&gt; MT[机器翻译]:::gradient</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    NLP --&gt; SA[情感分析]:::gradient</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    NLP --&gt; QA[问答系统]:::gradient</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    CV --&gt; OR[目标识别]:::gradient</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    CV --&gt; IS[图像分割]:::gradient</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    CV --&gt; FR[人脸识别]:::gradient</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    Rob --&gt; PP[路径规划]:::gradient</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    Rob --&gt; CV[计算机视觉]</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    Rob --&gt; ML[机器学习]</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    KR --&gt; LOG[逻辑推理]</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    KR --&gt; ONT[本体论]</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    KR --&gt; SM[语义网]</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    </span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    classDef gradient fill:#f96,stroke:#333,stroke-width:2px;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,1)),a("p",null,[l(n,{to:"/2%20%E7%AC%AC%E4%BA%8C%E5%A4%A7%E8%84%91/1%20%E8%8A%82%E7%82%B9/CS/%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD/%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD@.html"},{default:t(()=>i[19]||(i[19]=[s("人工智能@")])),_:1}),i[27]||(i[27]=a("br",null,null,-1)),l(n,{to:"/2%20%E7%AC%AC%E4%BA%8C%E5%A4%A7%E8%84%91/1%20%E8%8A%82%E7%82%B9/CS/%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0.html"},{default:t(()=>i[20]||(i[20]=[s("机器学习")])),_:1}),i[28]||(i[28]=a("br",null,null,-1)),l(n,{to:"/2%20%E7%AC%AC%E4%BA%8C%E5%A4%A7%E8%84%91/1%20%E8%8A%82%E7%82%B9/CS/%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD/%E7%A5%9E%E7%BB%8F%E7%BD%91%E7%BB%9C.html"},{default:t(()=>i[21]||(i[21]=[s("神经网络")])),_:1}),i[29]||(i[29]=a("br",null,null,-1)),l(n,{to:"/2%20%E7%AC%AC%E4%BA%8C%E5%A4%A7%E8%84%91/1%20%E8%8A%82%E7%82%B9/CS/%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0.html"},{default:t(()=>i[22]||(i[22]=[s("深度学习")])),_:1}),i[30]||(i[30]=a("br",null,null,-1)),l(n,{to:"/2%20%E7%AC%AC%E4%BA%8C%E5%A4%A7%E8%84%91/1%20%E8%8A%82%E7%82%B9/CS/%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD/LLM.html"},{default:t(()=>i[23]||(i[23]=[s("LLM")])),_:1}),i[31]||(i[31]=a("br",null,null,-1)),l(n,{to:"/2%20%E7%AC%AC%E4%BA%8C%E5%A4%A7%E8%84%91/1%20%E8%8A%82%E7%82%B9/CS/%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD/RNN.html"},{default:t(()=>i[24]||(i[24]=[s("RNN")])),_:1}),i[32]||(i[32]=a("br",null,null,-1)),l(n,{to:"/2%20%E7%AC%AC%E4%BA%8C%E5%A4%A7%E8%84%91/1%20%E8%8A%82%E7%82%B9/CS/%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD/CNN.html"},{default:t(()=>i[25]||(i[25]=[s("CNN")])),_:1}),i[33]||(i[33]=a("br",null,null,-1)),l(n,{to:"/2%20%E7%AC%AC%E4%BA%8C%E5%A4%A7%E8%84%91/1%20%E8%8A%82%E7%82%B9/CS/%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD/GAN.html"},{default:t(()=>i[26]||(i[26]=[s("GAN")])),_:1})]),a("p",null,[i[37]||(i[37]=s("CNN 先统治了计算机视觉，")),l(n,{to:"/2%20%E7%AC%AC%E4%BA%8C%E5%A4%A7%E8%84%91/1%20%E8%8A%82%E7%82%B9/CS/%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD/Transformer.html"},{default:t(()=>i[34]||(i[34]=[s("Transformer")])),_:1}),i[38]||(i[38]=s("颠覆了之前被")),l(n,{to:"/2%20%E7%AC%AC%E4%BA%8C%E5%A4%A7%E8%84%91/1%20%E8%8A%82%E7%82%B9/CS/%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD/RNN.html"},{default:t(()=>i[35]||(i[35]=[s("RNN")])),_:1}),i[39]||(i[39]=s("统治的")),l(n,{to:"/2%20%E7%AC%AC%E4%BA%8C%E5%A4%A7%E8%84%91/1%20%E8%8A%82%E7%82%B9/CS/%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD/NLP.html"},{default:t(()=>i[36]||(i[36]=[s("NLP")])),_:1}),i[40]||(i[40]=s("，然后是语音，图像，视频的多模态领域"))]),i[42]||(i[42]=A('<h2 id="学习路线" tabindex="-1"><a class="header-anchor" href="#学习路线"><span>学习路线</span></a></h2><p>数学基础 线性代数：矩阵运算、特征值和特征向量、奇异值分解<em>等。概率和统计：概率论基础、贝叶斯理论</em>、描述统计、推断统计等。微积分：导数、积分、偏导数、梯度、泰勒展开+等。优化方法：凸优化、梯度下降法*、牛顿法、随机梯度下降法*等。</p><p>编程基础 Python：Python是AI领域最常用的编程语言。要学会基础语法、数据结构等。这个编程语言没有别的，只有 Python。数据处理：学会使用NumPy*、Pandas等库进行数据预处理。这个会极大影响你的效率，所以要熟练掌握。</p><p>机器学习基础 下面这些主要是一些基础性的公式、简单的评估方法与模型的原理性的东西。如果要学习，最好是亲手写个代码。监督学习：线性回归、逻辑回归、支持向量机、决策树、随机森林、K近邻、朴素贝叶斯等。无监督学习：聚类*、降维、密度估计等。模型评估：交叉验证、偏差和方差、过拟合＋和欠拟合、性能指标（准确率、召回率、F1分数等）。</p><p>深度学习基础 尽管你不喜欢，但是这些基础性的原理还是要必须学会的。神经网络+基础：前馈神经网络*、反向传播算法、激活函数等。卷积神经网络（CNN）+：用于图像识别、对象检测等任务。循环神经网络（RNN）<em>：用于序列数据，如自然语言处理、时间序列分析等。Transformer：LLM</em>、及一切可能。常见框架：TensorFlow、PyTorch*、Keras的基础知识。</p><p>熟悉编程框架 这个是快速实现你想法的基础了。如果你不能熟练的使用某一个 AI 的编程框架，那你怎么来验证你的想法是不是对的，是不是有用的，是不是真的能超过人类呢？因为我pytorch+用的多，所以如何熟练用这个编程框架，我就以它为例吧。了解PyTorch的基础结构和概念 张量*（Tensor）：理解PyTorch中的基础数据结构张量，它类似于NumPy的数组。自动微分+（Autograd）：理解PyTorch的自动微分机制，如何利用它来自动计算梯度。神经网络（nn。Module）：学习如何使用PyTorch的nn。Module来定义神经网络。这个玩意是所有自定义模型的基础 学习构建基本的神经网络模型+ 要用 pytorch 能熟练的完成下面模型的编写工作。前馈神经网络：学习如何构建和训练基本的前馈神经网络。你要会写输入、输出、隐藏层还有激活函数什么的。卷积神经网络：用于图像识别等计算机视觉任务。像LetNet、VGGNet*。循环神经网络：适用于序列数据如文本、时间序列等。像LSTM*、GRU 类的网络。Transformer：LLM及一切任务，都能用它。BERT 与 GPT 是必练的模型。我的收藏可 bookmark 2024-09-22模型的训练与验证 损失函数+：理解不同任务的损失函数，如交叉熵损失*、均方误差损失等。这个怎么用pytorch 搞到你的模型里是个非常非常重要的工作。优化器：掌握常见的优化器如SGD*、Adam等，并了解它们的工作原理。跟损失函数同样重要。模型验证和测试：学会如何在验证集上验证模型性能，并在测试集上进行测试。干活嘛，总要有标准，这个就是标准。你做的对不对，好不对，全看它了。模型的保存和加载 学习如何保存和加载模型：包括模型结构和模型参数。Ctrl+S 你说重要不？</p><ul><li><p>学习与复现现有的经典项目</p><ul><li>研究GitHub开源项目</li><li>学习使用预训练模型和工具库</li></ul></li><li><p>确定自己的发展方向</p><ul><li>自然语言处理(NLP)</li><li>计算机视觉(CV)</li><li>推荐系统</li><li>语音处理</li><li>大语言模型(LLM)</li></ul></li><li><p>自主学习</p><ul><li>项目实践:个人项目、参与开源项目、竞赛参与- 参与Kaggle竞赛</li><li>论文阅读:选择高质量论文、定期阅读、深入理解和实践</li><li>交流:参与线上社区、线下Meetup、研讨会和会议</li></ul></li></ul>',7))])}const u=e(r,[["render",d],["__file","人工智能@.html.vue"]]),k=JSON.parse('{"path":"/2%20%E7%AC%AC%E4%BA%8C%E5%A4%A7%E8%84%91/1%20%E8%8A%82%E7%82%B9/CS/%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD/%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD@.html","title":"人工智能@","lang":"zh-CN","frontmatter":{"draw":null,"aliases":["A("],"tags":[],"title":"人工智能@","date created":"2024-07-25T00:00:00.000Z","date modified":"2024-11-12T00:00:00.000Z","description":"image.png|1000 1943 年，麦卡洛克和皮茨发表 \\"M-P 神经元模型 \\"，用数理逻辑解释并模拟人脑的计算单元，并提出这一概念。 1956 年，\\" 人工智能 \\" 一词首先在达特茅斯会议上被提出。 1957 年，罗森布拉特提出感知机模型，并在两年后成功制造能够识别英文字母的硬件感知机 Mark-1. 1969 年，明斯基发表《感知机》，书中...","head":[["meta",{"property":"og:url","content":"https://vuepress-theme-hope-docs-demo.netlify.app/2%20%E7%AC%AC%E4%BA%8C%E5%A4%A7%E8%84%91/1%20%E8%8A%82%E7%82%B9/CS/%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD/%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD@.html"}],["meta",{"property":"og:site_name","content":"转了码的刘公子"}],["meta",{"property":"og:title","content":"人工智能@"}],["meta",{"property":"og:description","content":"image.png|1000 1943 年，麦卡洛克和皮茨发表 \\"M-P 神经元模型 \\"，用数理逻辑解释并模拟人脑的计算单元，并提出这一概念。 1956 年，\\" 人工智能 \\" 一词首先在达特茅斯会议上被提出。 1957 年，罗森布拉特提出感知机模型，并在两年后成功制造能够识别英文字母的硬件感知机 Mark-1. 1969 年，明斯基发表《感知机》，书中..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://imagehosting4picgo.oss-cn-beijing.aliyuncs.com/imagehosting/fix-dir%2Fpicgo%2Fpicgo-clipboard-images%2F2024%2F07%2F25%2F01-46-44-3b9d13a42b4c542b70cd587385dd65fb-20240725014643-4e7863.png"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-11-24T16:17:22.000Z"}],["meta",{"property":"article:modified_time","content":"2024-11-24T16:17:22.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"人工智能@\\",\\"image\\":[\\"https://imagehosting4picgo.oss-cn-beijing.aliyuncs.com/imagehosting/fix-dir%2Fpicgo%2Fpicgo-clipboard-images%2F2024%2F07%2F25%2F01-46-44-3b9d13a42b4c542b70cd587385dd65fb-20240725014643-4e7863.png\\"],\\"dateModified\\":\\"2024-11-24T16:17:22.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"转了码的刘公子\\",\\"url\\":\\"https://mister-hope.com\\"}]}"]]},"headers":[{"level":2,"title":"学习路线","slug":"学习路线","link":"#学习路线","children":[]}],"git":{"createdTime":1732465042000,"updatedTime":1732465042000,"contributors":[{"name":"Luis","email":"liuysh20@gmail.com","commits":1}]},"readingTime":{"minutes":6.06,"words":1819},"filePathRelative":"2 第二大脑/1 节点/CS/人工智能/人工智能@.md","localizedDate":"2024年11月25日","autoDesc":true}');export{u as comp,k as data};
