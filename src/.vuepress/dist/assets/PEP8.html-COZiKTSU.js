import{_ as e}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as a,f as o,o as l}from"./app-DokaGNO4.js";const n={};function r(i,t){return l(),a("div",null,t[0]||(t[0]=[o('<h2 id="命名规范" tabindex="-1"><a class="header-anchor" href="#命名规范"><span>命名规范</span></a></h2><ol><li><strong>文件名（模块名）</strong>：使用 <strong>蛇形命名法</strong>（snake_case），例如 my_module.py。</li><li><strong>类名</strong>：使用 <strong>大驼峰命名法</strong>（CapWords 或 CamelCase），例如 MyClass。</li><li><strong>函数名和变量名</strong>：使用 <strong>蛇形命名法</strong>，例如 my_function 或 my_variable。</li></ol><h3 id="为什么与-java-不同" tabindex="-1"><a class="header-anchor" href="#为什么与-java-不同"><span>为什么与 Java 不同</span></a></h3><p>Python：</p><ul><li>Python 社区认为，使用不同的命名方式区分不同的代码元素。例如，文件名使用蛇形命名，类名使用驼峰命名，有助于开发者快速识别代码结构。</li><li>文件名使用小写和下划线可以避免在不同操作系统间的大小写敏感性问题。</li></ul><p>Java：</p><ol><li><strong>致性</strong>： <ul><li>在 Java 中，每个公共类必须放在与类名相同的文件中。这种强制性要求使得文件名与类名一致，使用大驼峰命名法更为直观和统一。</li></ul></li><li><strong>面向对象设计</strong>： <ul><li>Java 强调面向对象编程，类名作为核心元素，采用大驼峰命名法有助于突出其重要性和独立性。</li></ul></li><li><strong>历史和传统</strong>： <ul><li>Java 自诞生以来就采用了这些命名规范，社区和开发者已形成共识，沿袭至今。</li></ul></li></ol><ul><li><strong>Python</strong> 强调简洁和可读性，蛇形命名法在模块名和函数名中提供了清晰的分隔，符合&quot;有明确的命名区分不同元素&quot;的设计理念。</li><li><strong>Java</strong> 强调严格的结构和面向对象设计，使用大驼峰命名法在文件名和类名中保持一致性，符合其模块化和类驱动的架构。</li></ul>',8)]))}const p=e(n,[["render",r],["__file","PEP8.html.vue"]]),c=JSON.parse('{"path":"/2%20%E7%AC%AC%E4%BA%8C%E5%A4%A7%E8%84%91/1%20%E8%8A%82%E7%82%B9/CS/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/Python/PEP8.html","title":"PEP8","lang":"zh-CN","frontmatter":{"draw":null,"tags":[],"title":"PEP8","date created":"2024-09-17T00:00:00.000Z","date modified":"2024-11-12T00:00:00.000Z","description":"命名规范 文件名（模块名）：使用 蛇形命名法（snake_case），例如 my_module.py。 类名：使用 大驼峰命名法（CapWords 或 CamelCase），例如 MyClass。 函数名和变量名：使用 蛇形命名法，例如 my_function 或 my_variable。 为什么与 Java 不同 Python： Python 社区认...","head":[["meta",{"property":"og:url","content":"https://vuepress-theme-hope-docs-demo.netlify.app/2%20%E7%AC%AC%E4%BA%8C%E5%A4%A7%E8%84%91/1%20%E8%8A%82%E7%82%B9/CS/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/Python/PEP8.html"}],["meta",{"property":"og:site_name","content":"转了码的刘公子"}],["meta",{"property":"og:title","content":"PEP8"}],["meta",{"property":"og:description","content":"命名规范 文件名（模块名）：使用 蛇形命名法（snake_case），例如 my_module.py。 类名：使用 大驼峰命名法（CapWords 或 CamelCase），例如 MyClass。 函数名和变量名：使用 蛇形命名法，例如 my_function 或 my_variable。 为什么与 Java 不同 Python： Python 社区认..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-11-24T16:17:22.000Z"}],["meta",{"property":"article:modified_time","content":"2024-11-24T16:17:22.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"PEP8\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-11-24T16:17:22.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"转了码的刘公子\\",\\"url\\":\\"https://mister-hope.com\\"}]}"]]},"headers":[{"level":2,"title":"命名规范","slug":"命名规范","link":"#命名规范","children":[{"level":3,"title":"为什么与 Java 不同","slug":"为什么与-java-不同","link":"#为什么与-java-不同","children":[]}]}],"git":{"createdTime":1732465042000,"updatedTime":1732465042000,"contributors":[{"name":"Luis","email":"liuysh20@gmail.com","commits":1}]},"readingTime":{"minutes":1.36,"words":407},"filePathRelative":"2 第二大脑/1 节点/CS/编程语言/Python/PEP8.md","localizedDate":"2024年11月25日","autoDesc":true}');export{p as comp,c as data};
