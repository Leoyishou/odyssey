import{_ as e}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as i,f as o,o as l}from"./app-DokaGNO4.js";const n={};function r(s,t){return l(),i("div",null,t[0]||(t[0]=[o('<p><strong>continuous integration and continuous delivery/continuous deployment</strong></p><p>一条<code>git push</code>触发一连串命令，比如</p><ul><li>构建你的 VuePress 项目</li><li>运行测试</li><li>部署到 GitHub Pages 或其他服务器</li></ul><p>在软件开发中，&quot;build&quot; 和 &quot;deploy&quot; 是两个不同的阶段：</p><ol><li><p><strong>Build</strong>:</p><ul><li><strong>定义</strong>: Build 是将源代码转换成可执行代码的过程。这通常包括编译源代码，将其转换成机器代码或中间字节码，链接各种库和依赖，以及执行其他必要的步骤来创建软件的可运行版本。</li><li><strong>目的</strong>: Build 的目的是创建一个可以在计算机或服务器上运行的软件产品。</li><li><strong>过程</strong>: 这通常涉及编译器和其他构建工具，如 Make、Maven、Gradle 等。</li><li><strong>结果</strong>: Build 的结果是生成了可执行的程序或应用程序包，如.jar、.exe、.apk 等文件。</li></ul></li><li><p><strong>Deploy</strong>:</p><ul><li><strong>定义</strong>: Deploy 是将构建好的软件部署到生产环境或用户的设备上的过程。</li><li><strong>目的</strong>: Deploy 的目的是确保软件可在目标环境中运行，可供最终用户使用。</li><li><strong>过程</strong>: 这可能包括将软件上传到服务器、配置服务器环境、设置数据库和网络连接、更新系统设置等。</li><li><strong>结果</strong>: Deploy 的结果是软件在生产环境中的运行实例，用户可以直接访问和使用这个实例。</li></ul></li></ol><p>总结来说，Build 是创建软件的过程，而 Deploy 是将构建好的软件部署到实际使用环境的过程。</p><h2 id="github-actions-工作流脚本" tabindex="-1"><a class="header-anchor" href="#github-actions-工作流脚本"><span>GitHub Actions 工作流脚本</span></a></h2><p>[[GitHub Actions]] 是 GitHub 提供的持续集成和持续部署（CI/CD）服务。通过添加这个脚本，你可以实现以下功能：</p><ol><li><p><strong>自动构建</strong>: 每当你推送新的代码到 GitHub 仓库时，这个脚本会自动运行并构建你的 VuePress 网站。</p></li><li><p><strong>自动部署</strong>: 构建完成后，脚本可以将生成的静态文件自动部署到 GitHub Pages 或其他托管服务。</p></li><li><p><strong>质量控制</strong>: 你可以在脚本中添加测试步骤，确保每次更改都符合项目标准。</p></li></ol><h2 id="选择是否添加脚本" tabindex="-1"><a class="header-anchor" href="#选择是否添加脚本"><span>选择是否添加脚本</span></a></h2><ul><li><p>如果你计划使用 GitHub 托管你的项目，并希望自动化部署过程，选择添加这个脚本是个不错的选择。</p></li><li><p>如果你不打算使用 GitHub 托管，或者prefer手动部署，你可以选择不添加这个脚本。</p></li></ul><h2 id="脚本的好处" tabindex="-1"><a class="header-anchor" href="#脚本的好处"><span>脚本的好处</span></a></h2><ol><li><p><strong>省时省力</strong>: 自动化部署流程可以节省大量手动操作时间。</p></li><li><p><strong>一致性</strong>: 确保每次部署都遵循相同的步骤，减少人为错误。</p></li><li><p><strong>版本控制</strong>: 部署脚本也被版本控制，方便追踪和管理部署流程的变化。</p></li></ol><p>如果你决定添加这个脚本，它通常会被保存在你项目的 <code>.github/workflows</code> 目录下，文件名类似 <code>deploy.yml</code>。你可以根据需要随时修改这个脚本，以适应你的特定需求[1][3].</p>',14)]))}const u=e(n,[["render",r],["__file","CICD.html.vue"]]),d=JSON.parse('{"path":"/2%20%E7%AC%AC%E4%BA%8C%E5%A4%A7%E8%84%91/1%20%E8%8A%82%E7%82%B9/CS/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B/%E8%BF%90%E7%BB%B4/CICD.html","title":"CICD","lang":"zh-CN","frontmatter":{"draw":null,"tags":[],"title":"CICD","date created":"2023-12-10T00:00:00.000Z","date modified":"2024-11-12T00:00:00.000Z","description":"continuous integration and continuous delivery/continuous deployment 一条git push触发一连串命令，比如 构建你的 VuePress 项目 运行测试 部署到 GitHub Pages 或其他服务器 在软件开发中，\\"build\\" 和 \\"deploy\\" 是两个不同的阶段： Build...","head":[["meta",{"property":"og:url","content":"https://vuepress-theme-hope-docs-demo.netlify.app/2%20%E7%AC%AC%E4%BA%8C%E5%A4%A7%E8%84%91/1%20%E8%8A%82%E7%82%B9/CS/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B/%E8%BF%90%E7%BB%B4/CICD.html"}],["meta",{"property":"og:site_name","content":"转了码的刘公子"}],["meta",{"property":"og:title","content":"CICD"}],["meta",{"property":"og:description","content":"continuous integration and continuous delivery/continuous deployment 一条git push触发一连串命令，比如 构建你的 VuePress 项目 运行测试 部署到 GitHub Pages 或其他服务器 在软件开发中，\\"build\\" 和 \\"deploy\\" 是两个不同的阶段： Build..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-11-24T18:19:12.000Z"}],["meta",{"property":"article:modified_time","content":"2024-11-24T18:19:12.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"CICD\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-11-24T18:19:12.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"转了码的刘公子\\",\\"url\\":\\"https://mister-hope.com\\"}]}"]]},"headers":[{"level":2,"title":"GitHub Actions 工作流脚本","slug":"github-actions-工作流脚本","link":"#github-actions-工作流脚本","children":[]},{"level":2,"title":"选择是否添加脚本","slug":"选择是否添加脚本","link":"#选择是否添加脚本","children":[]},{"level":2,"title":"脚本的好处","slug":"脚本的好处","link":"#脚本的好处","children":[]}],"git":{"createdTime":1732465042000,"updatedTime":1732472352000,"contributors":[{"name":"Luis","email":"liuysh20@gmail.com","commits":2}]},"readingTime":{"minutes":2.54,"words":761},"filePathRelative":"2 第二大脑/1 节点/CS/软件工程/运维/CICD.md","localizedDate":"2024年11月25日","autoDesc":true}');export{u as comp,d as data};
