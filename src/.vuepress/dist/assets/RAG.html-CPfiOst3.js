import{_ as e}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as r,f as a,o as n}from"./app-DokaGNO4.js";const p={};function o(s,t){return n(),r("div",null,t[0]||(t[0]=[a('<p>LightRAG、GraphRAG和普通RAG系统在多个方面存在显著差异：</p><h2 id="知识表示" tabindex="-1"><a class="header-anchor" href="#知识表示"><span>知识表示</span></a></h2><p><strong>普通RAG</strong>：使用简单的向量存储来索引和检索信息，通常将文档分割成块并存储在向量数据库中[4]。</p><p><strong>GraphRAG</strong>：利用知识图谱来表示信息，捕捉实体之间的复杂关系和语义连接[4]。</p><p><strong>LightRAG</strong>：结合了知识图谱和嵌入式检索系统的优点，使用图结构和双层检索范式[5]。</p><h2 id="检索效率" tabindex="-1"><a class="header-anchor" href="#检索效率"><span>检索效率</span></a></h2><p><strong>普通RAG</strong>：在处理大规模数据集时可能面临效率和可扩展性问题[4]。</p><p><strong>GraphRAG</strong>：通过图结构提高了检索效率，但社区遍历可能仍然耗时[5]。</p><p><strong>LightRAG</strong>：采用双层检索策略，显著提高了检索速度和效率，同时降低了计算成本[1][5]。</p><h2 id="上下文理解" tabindex="-1"><a class="header-anchor" href="#上下文理解"><span>上下文理解</span></a></h2><p><strong>普通RAG</strong>：可能难以处理需要复杂推理的查询[4]。</p><p><strong>GraphRAG</strong>：通过知识图谱提供更丰富的上下文理解[2]。</p><p><strong>LightRAG</strong>：结合局部和全局检索，提供全面的上下文理解[1]。</p><h2 id="可解释性" tabindex="-1"><a class="header-anchor" href="#可解释性"><span>可解释性</span></a></h2><p><strong>普通RAG</strong>：通常缺乏可解释性[2]。</p><p><strong>GraphRAG</strong>：提供更好的可解释性，可以追踪信息来源[4]。</p><p><strong>LightRAG</strong>：保留了GraphRAG的可解释性优势[5]。</p><h2 id="适应性和更新" tabindex="-1"><a class="header-anchor" href="#适应性和更新"><span>适应性和更新</span></a></h2><p><strong>普通RAG</strong>：更新知识库可能需要重新索引整个数据集。</p><p><strong>GraphRAG</strong>：更新知识需要重建整个图结构，耗时较长[3]。</p><p><strong>LightRAG</strong>：支持增量更新，可以快速适应新数据，无需大规模重建索引[1][3]。</p><h2 id="查询处理" tabindex="-1"><a class="header-anchor" href="#查询处理"><span>查询处理</span></a></h2><p><strong>普通RAG</strong>：主要依赖于相似性搜索。</p><p><strong>GraphRAG</strong>：可以处理更复杂的查询，支持多跳推理[4]。</p><p><strong>LightRAG</strong>：通过双层检索提供多样化的答案，能更好地处理复杂查询[3][5]。</p><p>总体而言，LightRAG和GraphRAG相比普通RAG系统在处理复杂查询、提供上下文理解和可解释性方面表现更佳。而LightRAG在效率、适应性和成本效益方面又优于GraphRAG，使其成为一个强大而灵活的RAG解决方案[1][3][5]。</p><p>Citations: [1] https://aidisruptionpub.com/p/lightrag-is-open-sourced-lightweight [2] https://www.crestdata.ai/blogs/unveiling-the-power-of-graph-rag-revolutionizing-conversational-ai-and-knowledge-retrieval [3] https://hackernoon.com/lightrag-is-it-a-simple-and-efficient-rival-to-graphrag [4] https://www.falkordb.com/blog/what-is-graphrag/ [5] https://learnopencv.com/lightrag/</p><h2 id="动态章节检索" tabindex="-1"><a class="header-anchor" href="#动态章节检索"><span>动态章节检索</span></a></h2><p>我们很高兴介绍一种新的检索增强生成（RAG）技术——动态章节检索💫——这种技术确保您可以从文档中检索完整的连续章节，而不仅仅是简单的碎片化块。</p><p>这是我们社区在多文档RAG挑战中听到的一个主要问题——传统的RAG方法返回的是没有考虑到文档整体背景的碎片化上下文。我们的方法允许您从一个“简单”的分块技术开始（例如按页面），然后进行后处理流程来添加章节/子章节的元数据。</p><p>之后，您可以像GraphRAG那样进行检索（两阶段检索）：首先检索块，然后查找附加的章节元数据，最后执行第二次检索，返回所有匹配该章节ID的块。</p><p>这种方法有效解决了RAG系统在处理大文档时，由于将文档分割成小块进行检索导致的上下文断裂问题，实现了基于文档结构的智能检索，提供了更为完整的语义上下文。</p>',32)]))}const l=e(p,[["render",o],["__file","RAG.html.vue"]]),g=JSON.parse('{"path":"/2%20%E7%AC%AC%E4%BA%8C%E5%A4%A7%E8%84%91/1%20%E8%8A%82%E7%82%B9/CS/%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD/AIGC/RAG.html","title":"","lang":"zh-CN","frontmatter":{"description":"LightRAG、GraphRAG和普通RAG系统在多个方面存在显著差异： 知识表示 普通RAG：使用简单的向量存储来索引和检索信息，通常将文档分割成块并存储在向量数据库中[4]。 GraphRAG：利用知识图谱来表示信息，捕捉实体之间的复杂关系和语义连接[4]。 LightRAG：结合了知识图谱和嵌入式检索系统的优点，使用图结构和双层检索范式[5]。...","head":[["meta",{"property":"og:url","content":"https://vuepress-theme-hope-docs-demo.netlify.app/2%20%E7%AC%AC%E4%BA%8C%E5%A4%A7%E8%84%91/1%20%E8%8A%82%E7%82%B9/CS/%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD/AIGC/RAG.html"}],["meta",{"property":"og:site_name","content":"转了码的刘公子"}],["meta",{"property":"og:description","content":"LightRAG、GraphRAG和普通RAG系统在多个方面存在显著差异： 知识表示 普通RAG：使用简单的向量存储来索引和检索信息，通常将文档分割成块并存储在向量数据库中[4]。 GraphRAG：利用知识图谱来表示信息，捕捉实体之间的复杂关系和语义连接[4]。 LightRAG：结合了知识图谱和嵌入式检索系统的优点，使用图结构和双层检索范式[5]。..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-12-11T14:48:27.000Z"}],["meta",{"property":"article:modified_time","content":"2024-12-11T14:48:27.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-12-11T14:48:27.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"转了码的刘公子\\",\\"url\\":\\"https://mister-hope.com\\"}]}"]]},"headers":[{"level":2,"title":"知识表示","slug":"知识表示","link":"#知识表示","children":[]},{"level":2,"title":"检索效率","slug":"检索效率","link":"#检索效率","children":[]},{"level":2,"title":"上下文理解","slug":"上下文理解","link":"#上下文理解","children":[]},{"level":2,"title":"可解释性","slug":"可解释性","link":"#可解释性","children":[]},{"level":2,"title":"适应性和更新","slug":"适应性和更新","link":"#适应性和更新","children":[]},{"level":2,"title":"查询处理","slug":"查询处理","link":"#查询处理","children":[]},{"level":2,"title":"动态章节检索","slug":"动态章节检索","link":"#动态章节检索","children":[]}],"git":{"createdTime":1733928507000,"updatedTime":1733928507000,"contributors":[{"name":"Luis","email":"liuysh20@gmail.com","commits":1}]},"readingTime":{"minutes":2.9,"words":869},"filePathRelative":"2 第二大脑/1 节点/CS/人工智能/AIGC/RAG.md","localizedDate":"2024年12月11日","autoDesc":true}');export{l as comp,g as data};
