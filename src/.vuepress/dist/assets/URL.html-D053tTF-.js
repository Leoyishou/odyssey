import{_ as n}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as s,a as i,g as p,f as o,b as e,d as c,e as r,r as g,o as l}from"./app-DokaGNO4.js";const d={};function m(u,t){const a=g("RouteLink");return l(),s("div",null,[t[3]||(t[3]=i("p",null,"excerpt",-1)),p(" more "),t[4]||(t[4]=o('<h2 id="组成" tabindex="-1"><a class="header-anchor" href="#组成"><span>组成</span></a></h2><figure><img src="https://imagehosting4picgo.oss-cn-beijing.aliyuncs.com/imagehosting/fix-dir%2Fpicgo%2Fpicgo-clipboard-images%2F2024%2F08%2F12%2F01-10-54-7b84072f8369bfbafa3228c2c76511dc-202408120110374-6b0cd5.png" alt="image.png|1000" tabindex="0" loading="lazy"><figcaption>image.png|1000</figcaption></figure><div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" data-title="java" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">http</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">:</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">//nginx.org/en/download.html</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>视为 协议名 +（主机名 + 端口号）+ 路径 或者 schema://authority+path<br><img src="https://imagehosting4picgo.oss-cn-beijing.aliyuncs.com/imagehosting/fix-dir%2Fpicgo%2Fpicgo-clipboard-images%2F2024%2F06%2F05%2F22-13-29-3fe38d619d8422e8e489527a231cf2ec-20240605221328-103ab4.png" alt="image.png#pic_center|650" loading="lazy"></p><p>&quot;😕/&quot; 就像我做那个设计 excel 上传数据的需求，规定一个比较不常见的符号分割数据便于 splitter 拿内容一样</p><blockquote><p>URI 的创造者蒂姆·伯纳斯 - 李也曾经私下承认 &quot;😕/&quot; 并非必要，当初有些 &quot; 过于草率 &quot; 了。</p></blockquote>',6)),i("p",null,[t[1]||(t[1]=e("主机名可以是 ")),c(a,{to:"/2%20%E7%AC%AC%E4%BA%8C%E5%A4%A7%E8%84%91/1%20%E8%8A%82%E7%82%B9/CS/%E7%BD%91%E7%BB%9C/%E5%9F%9F%E5%90%8D.html"},{default:r(()=>t[0]||(t[0]=[e("域名")])),_:1}),t[2]||(t[2]=e("，也可以是 IP 地址"))]),t[5]||(t[5]=o('<h2 id="encoding" tabindex="-1"><a class="header-anchor" href="#encoding"><span>Encoding</span></a></h2><p>URI 是 ASCII 编码</p><p>刚才我们看到了，在 URI 里只能使用 ASCII 码，但如果要在 URI 里使用英语以外的汉语、日语等其他语言该怎么办呢？还有，某些特殊的 URI，会在 path、query 里出现 &quot;@&amp;?&quot; 等起界定符作用的字符，会导致 URI 解析错误，这时又该怎么办呢？所以，URI 引入了编码机制，对于 ASCII 码以外的字符集和特殊字符做一个特殊的操作，把它们转换成与 URI 语义不冲突的形式。这在 RFC 规范里称为 &quot;escape&quot; 和 &quot;unescape&quot;，俗称 &quot; 转义 &quot;。URI 转义的规则有点 &quot; 简单粗暴 &quot;，直接把非 ASCII 码或特殊字符转换成十六进制字节值，然后前面再加上一个 &quot;%&quot;。例如，空格被转义成 &quot;%20&quot;，&quot;?&quot; 被转义成 &quot;%3F&quot;。而中文、日文等则通常使用 UTF-8 编码后再转义，例如 &quot; 银河 &quot; 会被转义成 &quot;%E9%93%B6%E6%B2%B3&quot;。有了这个编码规则后，URI 就更加完美了，可以支持任意的字符集用任何语言来标记资源。不过我们在浏览器的地址栏里通常是不会看到这些转义后的 &quot; 乱码 &quot; 的，这实际上是浏览器一种 &quot; 友好 &quot; 表现，隐藏了 URI 编码后的 &quot; 丑陋一面 &quot;，不信你可以试试下面的这个 URI。</p><p><strong>当然，我理解您想要将</strong> <strong>URL</strong> <strong>中的单词用连字符（<strong><strong>-</strong></strong>）连接起来。这是一种常见的</strong> <strong>URL</strong> <strong>友好化处理方式，通常称为</strong> <strong>&quot;slug&quot;****。我们可以修改函数来实现这一点。</strong></p><p>需要对JSON数据进行URL编码（也称为百分号编码）处理主要有以下几个原因：</p><ol><li><p>特殊字符处理： URL中有许多字符是保留的或有特殊含义的，比如 <code>&amp;</code>, <code>=</code>, <code>?</code>, <code>/</code> 等。JSON数据中可能包含这些字符，如果不进行编码，可能会导致URL解析错误。</p></li><li><p>空格和换行符： JSON数据中的空格、换行符等在URL中是不允许直接使用的。编码可以将这些字符转换为合法的URL字符。</p></li><li><p>非ASCII字符： 如果JSON数据中包含非ASCII字符（如中文），编码可以确保这些字符被正确传输和解析。</p></li><li><p>避免歧义： 编码可以避免服务器在解析参数时产生歧义。例如，未编码的JSON中的冒号可能被误解为URL中的端口分隔符。</p></li><li><p>安全性： 编码可以防止一些基于注入的攻击，因为它会转义潜在的危险字符。</p></li><li><p>兼容性： 不同的服务器和客户端可能对URL中允许的字符有不同的限制。编码可以提高跨平台兼容性。</p></li></ol><p>在你的具体例子中，JSON数据包含了大量的特殊字符（如 <code>{}</code>, <code>&quot;</code>, <code>:</code> 等），这些都需要被编码以确保它们能作为一个完整的参数值被正确传递和解析。</p><p>虽然对于小型的、简单的数据，直接在URL中传递未编码的数据可能也能工作，但对于复杂的JSON数据，编码处理是一个更安全、更可靠的做法。这也是为什么在之前的回答中，我建议使用POST请求，将JSON数据放在请求体中，而不是直接放在URL中，因为这样可以避免URL长度限制，并且更适合传输大量复杂数据。an</p>',8))])}const b=n(d,[["render",m],["__file","URL.html.vue"]]),q=JSON.parse('{"path":"/2%20%E7%AC%AC%E4%BA%8C%E5%A4%A7%E8%84%91/1%20%E8%8A%82%E7%82%B9/CS/%E7%BD%91%E7%BB%9C/URL.html","title":"URL","lang":"zh-CN","frontmatter":{"draw":null,"aliases":["Uniform Resource Locator"],"title":"URL","tags":[],"date created":"2024-06-05T00:00:00.000Z","date modified":"2024-11-12T00:00:00.000Z","description":"excerpt 组成 image.png|1000image.png|1000 视为 协议名 +（主机名 + 端口号）+ 路径 或者 schema://authority+path image.png#pic_center|650 \\"😕/\\" 就像我做那个设计 excel 上传数据的需求，规定一个比较不常见的符号分割数据便于 splitter 拿内容一...","head":[["meta",{"property":"og:url","content":"https://vuepress-theme-hope-docs-demo.netlify.app/2%20%E7%AC%AC%E4%BA%8C%E5%A4%A7%E8%84%91/1%20%E8%8A%82%E7%82%B9/CS/%E7%BD%91%E7%BB%9C/URL.html"}],["meta",{"property":"og:site_name","content":"转了码的刘公子"}],["meta",{"property":"og:title","content":"URL"}],["meta",{"property":"og:description","content":"excerpt 组成 image.png|1000image.png|1000 视为 协议名 +（主机名 + 端口号）+ 路径 或者 schema://authority+path image.png#pic_center|650 \\"😕/\\" 就像我做那个设计 excel 上传数据的需求，规定一个比较不常见的符号分割数据便于 splitter 拿内容一..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://imagehosting4picgo.oss-cn-beijing.aliyuncs.com/imagehosting/fix-dir%2Fpicgo%2Fpicgo-clipboard-images%2F2024%2F08%2F12%2F01-10-54-7b84072f8369bfbafa3228c2c76511dc-202408120110374-6b0cd5.png"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-11-24T16:17:22.000Z"}],["meta",{"property":"article:modified_time","content":"2024-11-24T16:17:22.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"URL\\",\\"image\\":[\\"https://imagehosting4picgo.oss-cn-beijing.aliyuncs.com/imagehosting/fix-dir%2Fpicgo%2Fpicgo-clipboard-images%2F2024%2F08%2F12%2F01-10-54-7b84072f8369bfbafa3228c2c76511dc-202408120110374-6b0cd5.png\\",\\"https://imagehosting4picgo.oss-cn-beijing.aliyuncs.com/imagehosting/fix-dir%2Fpicgo%2Fpicgo-clipboard-images%2F2024%2F06%2F05%2F22-13-29-3fe38d619d8422e8e489527a231cf2ec-20240605221328-103ab4.png\\"],\\"dateModified\\":\\"2024-11-24T16:17:22.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"转了码的刘公子\\",\\"url\\":\\"https://mister-hope.com\\"}]}"]]},"headers":[{"level":2,"title":"组成","slug":"组成","link":"#组成","children":[]},{"level":2,"title":"Encoding","slug":"encoding","link":"#encoding","children":[]}],"git":{"createdTime":1732465042000,"updatedTime":1732465042000,"contributors":[{"name":"Luis","email":"liuysh20@gmail.com","commits":1}]},"readingTime":{"minutes":3.52,"words":1056},"filePathRelative":"2 第二大脑/1 节点/CS/网络/URL.md","localizedDate":"2024年11月25日","autoDesc":true}');export{b as comp,q as data};
