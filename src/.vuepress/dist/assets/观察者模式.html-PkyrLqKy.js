import{_ as d}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as e,a as r,g as a,f as i,o as c}from"./app-DokaGNO4.js";const o={};function n(l,t){return c(),e("div",null,[t[0]||(t[0]=r("p",null,"也叫订阅发布、事件驱动，核心就是动作之间的 attach",-1)),a(" more "),t[1]||(t[1]=i('<h2 id="关键词" tabindex="-1"><a class="header-anchor" href="#关键词"><span>关键词</span></a></h2><table><thead><tr><th>分类</th><th>关键词</th><th>说明</th><th></th></tr></thead><tbody><tr><td>核心角色</td><td>Observer/Subscriber</td><td>观察者/订阅者，接收通知的一方</td><td></td></tr><tr><td></td><td>Subject/Observable/Publisher</td><td>主题/被观察者/发布者，发送通知的一方</td><td></td></tr><tr><td></td><td>Listener</td><td>监听器，处理特定事件的组件</td><td></td></tr><tr><td></td><td>Handler</td><td>处理器，执行具体响应逻辑</td><td></td></tr><tr><td></td><td>Callback</td><td>回调函数，响应事件的具体方法</td><td></td></tr><tr><td></td><td>Hook</td><td>钩子，系统预留的定制化接口</td><td></td></tr><tr><td></td><td>Event</td><td>事件，触发通知的动作或消息</td><td></td></tr><tr><td></td><td>Notification</td><td>通知，传递给观察者的信息</td><td></td></tr><tr><td>动作/行为</td><td>Subscribe/Unsubscribe</td><td>订阅/取消订阅</td><td></td></tr><tr><td></td><td>Notify/Publish</td><td>通知/发布消息</td><td></td></tr><tr><td></td><td>Register</td><td>注册观察者/监听器</td><td></td></tr><tr><td></td><td>Dispatch</td><td>分发事件到对应处理器</td><td></td></tr><tr><td></td><td>Emit</td><td>触发/发射事件</td><td></td></tr><tr><td></td><td>Watch</td><td>监视数据或状态变化</td><td></td></tr><tr><td></td><td>Observe</td><td>观察目标对象变化</td><td></td></tr><tr><td>实现机制</td><td>Event Bus</td><td>事件总线，集中管理事件分发</td><td></td></tr><tr><td></td><td>Message Queue</td><td>消息队列，异步事件处理</td><td></td></tr><tr><td></td><td>PubSub Pattern</td><td>发布订阅模式，更松散的观察者模式变体</td><td></td></tr><tr><td></td><td>Event-Driven</td><td>事件驱动架构</td><td></td></tr><tr><td></td><td>Dependency Injection</td><td>依赖注入，解耦观察者和被观察者</td><td></td></tr><tr><td></td><td>Loose Coupling</td><td>松耦合，降低组件间依赖</td><td></td></tr><tr><td>应用场景</td><td>Event Handling</td><td>事件处理系统</td><td></td></tr><tr><td></td><td>UI Events</td><td>用户界面事件处理</td><td></td></tr><tr><td></td><td>State Management</td><td>状态管理系统</td><td></td></tr><tr><td></td><td>Change Detection</td><td>变更检测机制</td><td></td></tr><tr><td></td><td>Lifecycle Hooks</td><td>生命周期钩子函数</td><td></td></tr><tr><td></td><td>DOM Events</td><td>DOM事件处理系统</td><td></td></tr></tbody></table><h2 id="场景" tabindex="-1"><a class="header-anchor" href="#场景"><span>场景</span></a></h2><p>polaris 读取 excel 中的数据后，希望对 excel 中的数据格式做一定的检查，如果不满足要求，就抛出异常</p><h2 id="实现" tabindex="-1"><a class="header-anchor" href="#实现"><span>实现</span></a></h2><p>核心在于 attach 这个词，即一个动作完成，会自动传递到 attach 到它上的其他动作。我们把暴露出的可以被 attach 的一些点称为『钩子』</p><p><img src="https://cdn-a.markji.com/files/659cfceb5f8a5165c7f325fc_hd.png?e=1713366779981&amp;token=xX63b9jqTlDOcGmctt5K9254rV0LG8hS9BmDeFBy:BgJkr8KSZ19yDDSCM-le1SeMBP8=" alt="" loading="lazy"><br><img src="https://imagehosting4picgo.oss-cn-beijing.aliyuncs.com/imagehosting/fix-dir%2Fpicgo%2Fpicgo-clipboard-images%2F2024%2F05%2F09%2F23-42-51-1b544bb69d8473e8e4fc376b467e0271-20240509234250-733716.png" alt="image.png|1000" loading="lazy"></p>',7))])}const m=d(o,[["render",n],["__file","观察者模式.html.vue"]]),h=JSON.parse('{"path":"/2%20%E7%AC%AC%E4%BA%8C%E5%A4%A7%E8%84%91/1%20%E8%8A%82%E7%82%B9/CS/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/%E8%A7%82%E5%AF%9F%E8%80%85%E6%A8%A1%E5%BC%8F.html","title":"观察者模式","lang":"zh-CN","frontmatter":{"draw":null,"title":"观察者模式","tags":["Dev","信息革命","设计模式"],"date created":"2024-05-08T00:00:00.000Z","date modified":"2024-11-12T00:00:00.000Z","description":"也叫订阅发布、事件驱动，核心就是动作之间的 attach 关键词 场景 polaris 读取 excel 中的数据后，希望对 excel 中的数据格式做一定的检查，如果不满足要求，就抛出异常 实现 核心在于 attach 这个词，即一个动作完成，会自动传递到 attach 到它上的其他动作。我们把暴露出的可以被 attach 的一些点称为『钩子』 im...","head":[["meta",{"property":"og:url","content":"https://vuepress-theme-hope-docs-demo.netlify.app/2%20%E7%AC%AC%E4%BA%8C%E5%A4%A7%E8%84%91/1%20%E8%8A%82%E7%82%B9/CS/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/%E8%A7%82%E5%AF%9F%E8%80%85%E6%A8%A1%E5%BC%8F.html"}],["meta",{"property":"og:site_name","content":"转了码的刘公子"}],["meta",{"property":"og:title","content":"观察者模式"}],["meta",{"property":"og:description","content":"也叫订阅发布、事件驱动，核心就是动作之间的 attach 关键词 场景 polaris 读取 excel 中的数据后，希望对 excel 中的数据格式做一定的检查，如果不满足要求，就抛出异常 实现 核心在于 attach 这个词，即一个动作完成，会自动传递到 attach 到它上的其他动作。我们把暴露出的可以被 attach 的一些点称为『钩子』 im..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://cdn-a.markji.com/files/659cfceb5f8a5165c7f325fc_hd.png?e=1713366779981&token=xX63b9jqTlDOcGmctt5K9254rV0LG8hS9BmDeFBy:BgJkr8KSZ19yDDSCM-le1SeMBP8="}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-11-24T16:17:22.000Z"}],["meta",{"property":"article:tag","content":"Dev"}],["meta",{"property":"article:tag","content":"信息革命"}],["meta",{"property":"article:tag","content":"设计模式"}],["meta",{"property":"article:modified_time","content":"2024-11-24T16:17:22.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"观察者模式\\",\\"image\\":[\\"https://cdn-a.markji.com/files/659cfceb5f8a5165c7f325fc_hd.png?e=1713366779981&token=xX63b9jqTlDOcGmctt5K9254rV0LG8hS9BmDeFBy:BgJkr8KSZ19yDDSCM-le1SeMBP8=\\",\\"https://imagehosting4picgo.oss-cn-beijing.aliyuncs.com/imagehosting/fix-dir%2Fpicgo%2Fpicgo-clipboard-images%2F2024%2F05%2F09%2F23-42-51-1b544bb69d8473e8e4fc376b467e0271-20240509234250-733716.png\\"],\\"dateModified\\":\\"2024-11-24T16:17:22.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"转了码的刘公子\\",\\"url\\":\\"https://mister-hope.com\\"}]}"]]},"headers":[{"level":2,"title":"关键词","slug":"关键词","link":"#关键词","children":[]},{"level":2,"title":"场景","slug":"场景","link":"#场景","children":[]},{"level":2,"title":"实现","slug":"实现","link":"#实现","children":[]}],"git":{"createdTime":1732465042000,"updatedTime":1732465042000,"contributors":[{"name":"Luis","email":"liuysh20@gmail.com","commits":1}]},"readingTime":{"minutes":1.68,"words":503},"filePathRelative":"2 第二大脑/1 节点/CS/软件工程/设计模式/观察者模式.md","localizedDate":"2024年11月25日","autoDesc":true}');export{m as comp,h as data};
