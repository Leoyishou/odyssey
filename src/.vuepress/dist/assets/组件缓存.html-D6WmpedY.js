import{_ as i}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as r,a as t,b as o,d as a,e as d,f as n,r as u,o as p}from"./app-DokaGNO4.js";const c={};function m(E,e){const l=u("RouteLink");return p(),r("div",null,[e[3]||(e[3]=t("p",null,[t("code",null,"<router-view>"),o("：")],-1)),e[4]||(e[4]=t("ul",null,[t("li",null,"这是 Vue Router 的一个组件。"),t("li",null,"它用于显示当前路由匹配的组件。"),t("li",null,[o("当路由变化时，"),t("code",null,"<router-view>"),o(" 会渲染匹配的新组件。")])],-1)),t("p",null,[e[1]||(e[1]=t("code",null,"<keep-alive>",-1)),e[2]||(e[2]=o("： ")),a(l,{to:"/2%20%E7%AC%AC%E4%BA%8C%E5%A4%A7%E8%84%91/1%20%E8%8A%82%E7%82%B9/CS/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B/%E5%89%8D%E7%AB%AF/vue/KeepAlive.html"},{default:d(()=>e[0]||(e[0]=[o("KeepAlive")])),_:1})]),e[5]||(e[5]=n("<ul><li>这是 Vue 的一个内置组件。</li><li>用于缓存组件实例，保留组件状态，避免重新渲染。</li><li>当组件在 <code>&lt;keep-alive&gt;</code> 内被切换时，它的 <code>activated</code> 和 <code>deactivated</code> 这两个生命周期钩子函数将会被对应执行。</li></ul><p>这种组合的作用和优势：</p><ol><li>状态保留： <ul><li>被 <code>&lt;keep-alive&gt;</code> 包裹的组件在切换时不会被销毁，而是缓存起来。</li><li>当用户返回到之前的页面时，可以保留之前的状态（如表单输入、滚动位置等）。</li></ul></li><li>生命周期钩子： <ul><li>可以使用 <code>activated</code> 和 <code>deactivated</code> 钩子来控制组件的行为。</li></ul></li><li>灵活控制： <ul><li>可以通过 <code>include</code> 和 <code>&lt;router-view&gt;</code>0 属性来精确控制哪些组件需要被缓存。</li></ul></li></ol>",3))])}const A=i(c,[["render",m],["__file","组件缓存.html.vue"]]),v=JSON.parse('{"path":"/2%20%E7%AC%AC%E4%BA%8C%E5%A4%A7%E8%84%91/1%20%E8%8A%82%E7%82%B9/CS/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B/%E5%89%8D%E7%AB%AF/vue/%E7%BB%84%E4%BB%B6%E7%BC%93%E5%AD%98.html","title":"组件缓存","lang":"zh-CN","frontmatter":{"draw":null,"tags":[],"title":"组件缓存","date created":"2024-06-24T00:00:00.000Z","date modified":"2024-11-12T00:00:00.000Z","description":"<router-view>： 这是 Vue Router 的一个组件。 它用于显示当前路由匹配的组件。 当路由变化时，<router-view> 会渲染匹配的新组件。 <keep-alive>： 这是 Vue 的一个内置组件。 用于缓存组件实例，保留组件状态，避免重新渲染。 当组件在 <keep-alive> 内被切换时，它的 activated 和 ...","head":[["meta",{"property":"og:url","content":"https://vuepress-theme-hope-docs-demo.netlify.app/2%20%E7%AC%AC%E4%BA%8C%E5%A4%A7%E8%84%91/1%20%E8%8A%82%E7%82%B9/CS/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B/%E5%89%8D%E7%AB%AF/vue/%E7%BB%84%E4%BB%B6%E7%BC%93%E5%AD%98.html"}],["meta",{"property":"og:site_name","content":"转了码的刘公子"}],["meta",{"property":"og:title","content":"组件缓存"}],["meta",{"property":"og:description","content":"<router-view>： 这是 Vue Router 的一个组件。 它用于显示当前路由匹配的组件。 当路由变化时，<router-view> 会渲染匹配的新组件。 <keep-alive>： 这是 Vue 的一个内置组件。 用于缓存组件实例，保留组件状态，避免重新渲染。 当组件在 <keep-alive> 内被切换时，它的 activated 和 ..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-11-24T17:46:49.000Z"}],["meta",{"property":"article:modified_time","content":"2024-11-24T17:46:49.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"组件缓存\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-11-24T17:46:49.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"转了码的刘公子\\",\\"url\\":\\"https://mister-hope.com\\"}]}"]]},"headers":[],"git":{"createdTime":1732465042000,"updatedTime":1732470409000,"contributors":[{"name":"Luis","email":"liuysh20@gmail.com","commits":2}]},"readingTime":{"minutes":0.83,"words":250},"filePathRelative":"2 第二大脑/1 节点/CS/软件工程/前端/vue/组件缓存.md","localizedDate":"2024年11月25日","autoDesc":true}');export{A as comp,v as data};
