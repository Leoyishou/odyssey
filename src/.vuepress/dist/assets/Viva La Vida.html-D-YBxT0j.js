import{_ as t}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as p,f as o,a as e,d as n,e as l,b as a,r,o as d}from"./app-DokaGNO4.js";const c={};function u(m,s){const i=r("RouteLink");return d(),p("div",null,[s[10]||(s[10]=o(`<h2 id="待办区" tabindex="-1"><a class="header-anchor" href="#待办区"><span>待办区</span></a></h2><ul class="task-list-container"><li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-0" disabled="disabled"><label class="task-list-item-label" for="task-item-0"> 逐步梳理清楚文件结构，是的 git 的东西变得清晰</label></li><li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-1" disabled="disabled"><label class="task-list-item-label" for="task-item-1"><strong>需要在数据库中为</strong> <strong><code>active_use_scenario</code></strong> <strong>列创建一个</strong> <strong>GIN (Generalized Inverted Index)</strong> <strong>索引。具体来说：</strong></label></li><li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-2" disabled="disabled"><label class="task-list-item-label" for="task-item-2"> 首页加一篇文章，传递自己的认知</label></li></ul><h3 id="载入词典" tabindex="-1"><a class="header-anchor" href="#载入词典"><span>载入词典</span></a></h3><p><a href="https://github.com/fxsjy/jieba#%E8%BD%BD%E5%85%A5%E8%AF%8D%E5%85%B8" target="_blank" rel="noopener noreferrer"></a></p><ul><li>开发者可以指定自己自定义的词典，以便包含 jieba 词库里没有的词。虽然 jieba 有新词识别能力，但是自行添加新词可以保证更高的正确率</li><li>用法：jieba.load_userdict(file_name) # file_name 为文件类对象或自定义词典的路径</li><li>词典格式和 <code>dict.txt</code> 一样，一个词占一行；每一行分三部分：词语、词频（可省略）、词性（可省略），用空格隔开，顺序不可颠倒。<code>file_name</code> 若为路径或二进制方式打开的文件，则文件必须为 UTF-8 编码。</li><li>词频省略时使用自动计算的能保证分出该词的词频。</li></ul><p><strong>例如：</strong></p><div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" data-title="java" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">创新办 </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">3</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;"> i</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">云计算 </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">5</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">凱特琳 nz</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">台中</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li><p>更改分词器（默认为 <code>jieba.dt</code>）的 <code>tmp_dir</code> 和 <code>cache_file</code> 属性，可分别指定缓存文件所在的文件夹及其文件名，用于受限的文件系统。</p></li><li><p>范例：</p><ul><li><p>自定义词典：<a href="https://github.com/fxsjy/jieba/blob/master/test/userdict.txt" target="_blank" rel="noopener noreferrer">https://github.com/fxsjy/jieba/blob/master/test/userdict.txt</a></p></li><li><p>用法示例：<a href="https://github.com/fxsjy/jieba/blob/master/test/test_userdict.py" target="_blank" rel="noopener noreferrer">https://github.com/fxsjy/jieba/blob/master/test/test_userdict.py</a></p><ul><li><p>之前：李小福 / 是 / 创新 / 办 / 主任 / 也 / 是 / 云 / 计算 / 方面 / 的 / 专家 /</p></li><li><p>加载自定义词库后：　李小福 / 是 / 创新办 / 主任 / 也 / 是 / 云计算 / 方面 / 的 / 专家 /</p></li></ul></li></ul></li></ul><h3 id="调整词典" tabindex="-1"><a class="header-anchor" href="#调整词典"><span>调整词典</span></a></h3><p><a href="https://github.com/fxsjy/jieba#%E8%B0%83%E6%95%B4%E8%AF%8D%E5%85%B8" target="_blank" rel="noopener noreferrer"></a></p><ul><li><p>使用 <code>add_word(word, freq=None, tag=None)</code> 和 <code>del_word(word)</code> 可在程序中动态修改词典。</p></li><li><p>使用 \`\`\`Java [<br> {&quot;role&quot;: &quot;system&quot;, &quot;content&quot;: &quot;You are an assistant who can compose sentences with given words or phrases or sentences, you are expert in Chinese and English.&quot;},<br> {&quot;role&quot;: &quot;user&quot;, &quot;content&quot;: f&quot;如果“{word}” 是一个单词或者短语，那么用其生成一个30词以上的托福听力风格的英文句子，并把“{word}” 对应的英文用（）围起来，；如果“{word}” 是一句话的话，把它原封不动返回给我就好，返回结果中不应当有括号&quot;}<br> ]</p></li></ul><p>word 分别是 in a row， resolution， revolution， Like， that， toilet</p><div class="language-0 可调节单个词语的词频，使其能（或不能）被分出来。 line-numbers-mode" data-highlighter="shiki" data-ext="0 可调节单个词语的词频，使其能（或不能）被分出来。" data-title="0 可调节单个词语的词频，使其能（或不能）被分出来。" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>    </span></span>
<span class="line"><span>- 注意：自动计算的词频在使用 HMM 新词发现功能时可能无效。</span></span>
<span class="line"><span></span></span>
<span class="line"><span>## 初心</span></span>
<span class="line"><span></span></span>
<span class="line"><span>我记得在 22 年的时候，自己几乎没有什么编程基础，简单学了一些 python，那个时代也没有 ChatGPT 这样的 AI 工具。但是自己就是靠着一股子学习英语的热诚，和一些本能的数据思维。借助了简单的爬虫、IO 流制作了能实现托福听力词频分析、日记词汇累积统计这样一些功能的小程序。说来也有趣，当时的前端用的就是 Pycharm 的 Teminal 界面，数据库用的就是 excel。粗糙且原始，但是其实已实现了后端开发，所谓 data in data out 的本质。更重要的是，那次的编程实践，真正激发了我对计算机技术的热情。没有那一次的实践，可能也不会有后来的转码，自己也不会从事上真正热爱的事业了。</span></span>
<span class="line"><span></span></span>
<span class="line"><span>所以，随着自己技术的进步和对英语学习认知的加深，我更怀有无比的热诚，去将自己积累的方法论固化到一个真正的软件之中。完成自己数据驱动的梦想，亦是将高效科学的学习方式分享给大众。</span></span>
<span class="line"><span></span></span>
<span class="line"><span>Viva 是我加入的第一家公司去哪儿网的办公楼的名字。Viva La Vida 是一句西班牙语，『生命万岁』或『酷玩人生』之意，恰如落笔之此刻，恰如这一路的计算机和英语学习之旅！</span></span>
<span class="line"><span></span></span>
<span class="line"><span>## 第一性原理</span></span>
<span class="line"><span></span></span>
<span class="line"><span>英语学习的本质就是大脑中的信息储备足以填满下面这样表结构的一张表</span></span>
<span class="line"><span></span></span>
<span class="line"><span>![image.png|1000](https://imagehosting4picgo.oss-cn-beijing.aliyuncs.com/imagehosting/fix-dir%2Fpicgo%2Fpicgo-clipboard-images%2F2024%2F09%2F16%2F02-40-49-ae6c8c39ebb7dcff5f840967b6dd4834-202409160240119-c85568.png)</span></span>
<span class="line"><span></span></span>
<span class="line"><span>每个映射代表一块砖，四面墙代表四种映射  </span></span>
<span class="line"><span></span></span>
<span class="line"><span>左上：阅读词汇  </span></span>
<span class="line"><span>右上：听力词汇  </span></span>
<span class="line"><span>左下：口语词汇  </span></span>
<span class="line"><span>右下：写作词汇  </span></span>
<span class="line"><span>![image.png|1000](https://imagehosting4picgo.oss-cn-beijing.aliyuncs.com/imagehosting/fix-dir%2Fliuyishou%2Ftmp%2F2024%2F07%2F31%2F14-39-20-28ac40c13e87651a3c4ef0a5ac3e7909-kisspng-brick-wall-clip-art-brick-5ab58e97d68fa9.2673084215218479598789-f32cc2.png)</span></span>
<span class="line"><span></span></span>
<span class="line"><span>四种映射共同组成了英语能力  </span></span>
<span class="line"><span>![image.png|1000](https://imagehosting4picgo.oss-cn-beijing.aliyuncs.com/imagehosting/fix-dir%2Fliuyishou%2Ftmp%2F2024%2F07%2F31%2F14-38-12-512934aac593bfcb3810ce88f4f1350e-kisspng-stone-wall-brick-clip-art-brick-wall-5abf2a18ab3631.5554477315224775927013-4aa636.png)</span></span>
<span class="line"><span></span></span>
<span class="line"><span>\`\`\`Java</span></span>
<span class="line"><span>[  </span></span>
<span class="line"><span>    {&quot;role&quot;: &quot;system&quot;, &quot;content&quot;: &quot;You are an assistant who can compose sentences with given words or phrases or sentences, you are expert in Chinese and English.&quot;},  </span></span>
<span class="line"><span>    {&quot;role&quot;: &quot;user&quot;, &quot;content&quot;: f&quot;如果“{word}” 是一个单词或者短语，那么用其生成一个30词以上的托福听力风格的英文句子，并把“{word}” 对应的英文用（）围起来，；如果“{word}” 是一句话的话，把它原封不动返回给我就好，返回结果中不应当有括号&quot;}  </span></span>
<span class="line"><span>]</span></span>
<span class="line"><span></span></span>
<span class="line"><span>word 分别是 in a row， resolution， revolution， Like， that， toilet</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="两小两大" tabindex="-1"><a class="header-anchor" href="#两小两大"><span>两小两大</span></a></h2>`,14)),e("p",null,[n(i,{to:"/2%20%E7%AC%AC%E4%BA%8C%E5%A4%A7%E8%84%91/1%20%E8%8A%82%E7%82%B9/%E8%8B%B1%E8%AF%AD/viva/%E9%9F%B3%E6%A0%87.html"},{default:l(()=>s[0]||(s[0]=[a("音标")])),_:1}),s[3]||(s[3]=a("和")),n(i,{to:"/2%20%E7%AC%AC%E4%BA%8C%E5%A4%A7%E8%84%91/1%20%E8%8A%82%E7%82%B9/%E8%8B%B1%E8%AF%AD/viva/%E8%8B%B1%E8%AF%AD%E8%AF%AD%E6%B3%95@.html"},{default:l(()=>s[1]||(s[1]=[a("英语语法@")])),_:1}),s[4]||(s[4]=a("是两个非常小的模块")),s[5]||(s[5]=e("br",null,null,-1)),s[6]||(s[6]=a(" 主要的工作量在于")),s[7]||(s[7]=e("a",{href:"%E8%A2%AB%E5%8A%A8%E8%AF%8D%E6%B1%87"},"被动词汇",-1)),s[8]||(s[8]=a("和")),n(i,{to:"/2%20%E7%AC%AC%E4%BA%8C%E5%A4%A7%E8%84%91/1%20%E8%8A%82%E7%82%B9/%E8%8B%B1%E8%AF%AD/viva/%E4%B8%BB%E5%8A%A8%E8%AF%8D%E6%B1%87.html"},{default:l(()=>s[2]||(s[2]=[a("主动词汇")])),_:1}),s[9]||(s[9]=a("的积累"))])])}const h=t(c,[["render",u],["__file","Viva La Vida.html.vue"]]),v=JSON.parse('{"path":"/2%20%E7%AC%AC%E4%BA%8C%E5%A4%A7%E8%84%91/1%20%E8%8A%82%E7%82%B9/%E8%8B%B1%E8%AF%AD/viva/Viva%20La%20Vida.html","title":"Viva La Vida","lang":"zh-CN","frontmatter":{"draw":null,"tags":[],"title":"Viva La Vida","date created":"2024-09-16T00:00:00.000Z","date modified":"2024-11-12T00:00:00.000Z","description":"待办区 逐步梳理清楚文件结构，是的 git 的东西变得清晰 需要在数据库中为 active_use_scenario 列创建一个 GIN (Generalized Inverted Index) 索引。具体来说： 首页加一篇文章，传递自己的认知 载入词典 开发者可以指定自己自定义的词典，以便包含 jieba 词库里没有的词。虽然 jieba 有新词识别...","head":[["meta",{"property":"og:url","content":"https://vuepress-theme-hope-docs-demo.netlify.app/2%20%E7%AC%AC%E4%BA%8C%E5%A4%A7%E8%84%91/1%20%E8%8A%82%E7%82%B9/%E8%8B%B1%E8%AF%AD/viva/Viva%20La%20Vida.html"}],["meta",{"property":"og:site_name","content":"转了码的刘公子"}],["meta",{"property":"og:title","content":"Viva La Vida"}],["meta",{"property":"og:description","content":"待办区 逐步梳理清楚文件结构，是的 git 的东西变得清晰 需要在数据库中为 active_use_scenario 列创建一个 GIN (Generalized Inverted Index) 索引。具体来说： 首页加一篇文章，传递自己的认知 载入词典 开发者可以指定自己自定义的词典，以便包含 jieba 词库里没有的词。虽然 jieba 有新词识别..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://imagehosting4picgo.oss-cn-beijing.aliyuncs.com/imagehosting/fix-dir%2Fpicgo%2Fpicgo-clipboard-images%2F2024%2F09%2F16%2F02-40-49-ae6c8c39ebb7dcff5f840967b6dd4834-202409160240119-c85568.png"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-11-24T17:46:49.000Z"}],["meta",{"property":"article:modified_time","content":"2024-11-24T17:46:49.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Viva La Vida\\",\\"image\\":[\\"https://imagehosting4picgo.oss-cn-beijing.aliyuncs.com/imagehosting/fix-dir%2Fpicgo%2Fpicgo-clipboard-images%2F2024%2F09%2F16%2F02-40-49-ae6c8c39ebb7dcff5f840967b6dd4834-202409160240119-c85568.png\\",\\"https://imagehosting4picgo.oss-cn-beijing.aliyuncs.com/imagehosting/fix-dir%2Fliuyishou%2Ftmp%2F2024%2F07%2F31%2F14-39-20-28ac40c13e87651a3c4ef0a5ac3e7909-kisspng-brick-wall-clip-art-brick-5ab58e97d68fa9.2673084215218479598789-f32cc2.png\\",\\"https://imagehosting4picgo.oss-cn-beijing.aliyuncs.com/imagehosting/fix-dir%2Fliuyishou%2Ftmp%2F2024%2F07%2F31%2F14-38-12-512934aac593bfcb3810ce88f4f1350e-kisspng-stone-wall-brick-clip-art-brick-wall-5abf2a18ab3631.5554477315224775927013-4aa636.png\\"],\\"dateModified\\":\\"2024-11-24T17:46:49.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"转了码的刘公子\\",\\"url\\":\\"https://mister-hope.com\\"}]}"]]},"headers":[{"level":2,"title":"待办区","slug":"待办区","link":"#待办区","children":[{"level":3,"title":"载入词典","slug":"载入词典","link":"#载入词典","children":[]},{"level":3,"title":"调整词典","slug":"调整词典","link":"#调整词典","children":[]}]},{"level":2,"title":"两小两大","slug":"两小两大","link":"#两小两大","children":[]}],"git":{"createdTime":1732465042000,"updatedTime":1732470409000,"contributors":[{"name":"Luis","email":"liuysh20@gmail.com","commits":2}]},"readingTime":{"minutes":4.47,"words":1340},"filePathRelative":"2 第二大脑/1 节点/英语/viva/Viva La Vida.md","localizedDate":"2024年11月25日","autoDesc":true}');export{h as comp,v as data};
