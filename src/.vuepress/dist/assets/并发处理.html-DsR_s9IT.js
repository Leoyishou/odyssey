import{_ as o}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as r,a as e,g as a,o as n}from"./app-DokaGNO4.js";const p={};function l(i,t){return n(),r("div",null,[t[0]||(t[0]=e("p",null,"excerpt",-1)),a(" more "),t[1]||(t[1]=e("p",null,"3.【强制】线程资源必须通过线程池提供，不允许在应用中自行显式创建线程。",-1)),t[2]||(t[2]=e("blockquote",null,[e("p",null,"性能问题和降低管理成本")],-1)),t[3]||(t[3]=e("p",null,"4.【强制】线程池不允许使用 Executors 去创建，而是通过 ThreadPoolExecutor 的方式，这样的处理方式让写的同学更加明确线程池的运行规则，规避资源耗尽的风险。",-1))])}const E=o(p,[["render",l],["__file","并发处理.html.vue"]]),s=JSON.parse('{"path":"/2%20%E7%AC%AC%E4%BA%8C%E5%A4%A7%E8%84%91/1%20%E8%8A%82%E7%82%B9/CS/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/Java/%E9%98%BF%E9%87%8C%E8%A7%84%E8%8C%83/%E5%B9%B6%E5%8F%91%E5%A4%84%E7%90%86.html","title":"并发处理","lang":"zh-CN","frontmatter":{"draw":null,"title":"并发处理","tags":["1 Dev","Java","代码味道","信息革命"],"date created":"2024-04-17T00:00:00.000Z","date modified":"2024-11-12T00:00:00.000Z","description":"excerpt 3.【强制】线程资源必须通过线程池提供，不允许在应用中自行显式创建线程。 性能问题和降低管理成本 4.【强制】线程池不允许使用 Executors 去创建，而是通过 ThreadPoolExecutor 的方式，这样的处理方式让写的同学更加明确线程池的运行规则，规避资源耗尽的风险。","head":[["meta",{"property":"og:url","content":"https://vuepress-theme-hope-docs-demo.netlify.app/2%20%E7%AC%AC%E4%BA%8C%E5%A4%A7%E8%84%91/1%20%E8%8A%82%E7%82%B9/CS/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/Java/%E9%98%BF%E9%87%8C%E8%A7%84%E8%8C%83/%E5%B9%B6%E5%8F%91%E5%A4%84%E7%90%86.html"}],["meta",{"property":"og:site_name","content":"转了码的刘公子"}],["meta",{"property":"og:title","content":"并发处理"}],["meta",{"property":"og:description","content":"excerpt 3.【强制】线程资源必须通过线程池提供，不允许在应用中自行显式创建线程。 性能问题和降低管理成本 4.【强制】线程池不允许使用 Executors 去创建，而是通过 ThreadPoolExecutor 的方式，这样的处理方式让写的同学更加明确线程池的运行规则，规避资源耗尽的风险。"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-11-24T16:17:22.000Z"}],["meta",{"property":"article:tag","content":"1 Dev"}],["meta",{"property":"article:tag","content":"Java"}],["meta",{"property":"article:tag","content":"代码味道"}],["meta",{"property":"article:tag","content":"信息革命"}],["meta",{"property":"article:modified_time","content":"2024-11-24T16:17:22.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"并发处理\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-11-24T16:17:22.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"转了码的刘公子\\",\\"url\\":\\"https://mister-hope.com\\"}]}"]]},"headers":[],"git":{"createdTime":1732465042000,"updatedTime":1732465042000,"contributors":[{"name":"Luis","email":"liuysh20@gmail.com","commits":1}]},"readingTime":{"minutes":0.43,"words":128},"filePathRelative":"2 第二大脑/1 节点/CS/编程语言/Java/阿里规范/并发处理.md","localizedDate":"2024年11月25日","autoDesc":true}');export{E as comp,s as data};
