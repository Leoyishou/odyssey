import{_ as i}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as t,a as o,g as a,f as c,o as n}from"./app-DokaGNO4.js";const s={};function g(p,e){return n(),t("div",null,[e[0]||(e[0]=o("p",null,"一个乐高就需要几千个零件",-1)),a(" more "),e[1]||(e[1]=c('<h2 id="场景" tabindex="-1"><a class="header-anchor" href="#场景"><span>场景</span></a></h2><ol><li>成员变量很多，比如一个资源池 ResourcePoolConfig</li><li>有参构造的参数很多，入参顺序可能填错</li><li>那用 set 一个个注入？ <ol><li>用 set 可能会使对象在某个时刻处于无效状态，因为是逐步 set 的。（当然有的在乎这点，有的无所谓）</li><li>用 set 会使每个属性的注入是相对独立的，而 builder 的 build 方法可以提供一个统一的整合时机，比如可以做一些校验工作<br><img src="https://imagehosting4picgo.oss-cn-beijing.aliyuncs.com/imagehosting/fix-dir%2Fpicgo%2Fpicgo-clipboard-images%2F2024%2F05%2F12%2F00-36-40-34dbe56030337030081f2debc17bc723-20240512003639-0dabce.png" alt="image.png#pic_center|650" loading="lazy"><br><img src="https://imagehosting4picgo.oss-cn-beijing.aliyuncs.com/imagehosting/fix-dir%2Fpicgo%2Fpicgo-clipboard-images%2F2024%2F05%2F23%2F15-52-21-6bef004b0f4bb87cf7bf61832c233fd7-20240523155221-c96f19.png" alt="image.png#pic_center|1000" loading="lazy"></li></ol></li></ol><h2 id="踩坑" tabindex="-1"><a class="header-anchor" href="#踩坑"><span>踩坑</span></a></h2><figure><img src="https://imagehosting4picgo.oss-cn-beijing.aliyuncs.com/imagehosting/fix-dir%2Fpicgo%2Fpicgo-clipboard-images%2F2024%2F06%2F18%2F23-01-22-5d0e4e63dbe28d7217c706b90f4db2ee-20240618230121-0905f3.png" alt="image.png#pic_center|650" tabindex="0" loading="lazy"><figcaption>image.png#pic_center|650</figcaption></figure>',4))])}const d=i(s,[["render",g],["__file","建造者模式.html.vue"]]),m=JSON.parse('{"path":"/2%20%E7%AC%AC%E4%BA%8C%E5%A4%A7%E8%84%91/1%20%E8%8A%82%E7%82%B9/CS/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/%E5%BB%BA%E9%80%A0%E8%80%85%E6%A8%A1%E5%BC%8F.html","title":"建造者模式","lang":"zh-CN","frontmatter":{"draw":null,"title":"建造者模式","tags":["Dev","信息革命","设计模式"],"date created":"2024-05-08T00:00:00.000Z","date modified":"2024-11-12T00:00:00.000Z","description":"一个乐高就需要几千个零件 场景 成员变量很多，比如一个资源池 ResourcePoolConfig 有参构造的参数很多，入参顺序可能填错 那用 set 一个个注入？ 用 set 可能会使对象在某个时刻处于无效状态，因为是逐步 set 的。（当然有的在乎这点，有的无所谓） 用 set 会使每个属性的注入是相对独立的，而 builder 的 build 方...","head":[["meta",{"property":"og:url","content":"https://vuepress-theme-hope-docs-demo.netlify.app/2%20%E7%AC%AC%E4%BA%8C%E5%A4%A7%E8%84%91/1%20%E8%8A%82%E7%82%B9/CS/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/%E5%BB%BA%E9%80%A0%E8%80%85%E6%A8%A1%E5%BC%8F.html"}],["meta",{"property":"og:site_name","content":"转了码的刘公子"}],["meta",{"property":"og:title","content":"建造者模式"}],["meta",{"property":"og:description","content":"一个乐高就需要几千个零件 场景 成员变量很多，比如一个资源池 ResourcePoolConfig 有参构造的参数很多，入参顺序可能填错 那用 set 一个个注入？ 用 set 可能会使对象在某个时刻处于无效状态，因为是逐步 set 的。（当然有的在乎这点，有的无所谓） 用 set 会使每个属性的注入是相对独立的，而 builder 的 build 方..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://imagehosting4picgo.oss-cn-beijing.aliyuncs.com/imagehosting/fix-dir%2Fpicgo%2Fpicgo-clipboard-images%2F2024%2F05%2F12%2F00-36-40-34dbe56030337030081f2debc17bc723-20240512003639-0dabce.png"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-11-24T16:17:22.000Z"}],["meta",{"property":"article:tag","content":"Dev"}],["meta",{"property":"article:tag","content":"信息革命"}],["meta",{"property":"article:tag","content":"设计模式"}],["meta",{"property":"article:modified_time","content":"2024-11-24T16:17:22.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"建造者模式\\",\\"image\\":[\\"https://imagehosting4picgo.oss-cn-beijing.aliyuncs.com/imagehosting/fix-dir%2Fpicgo%2Fpicgo-clipboard-images%2F2024%2F05%2F12%2F00-36-40-34dbe56030337030081f2debc17bc723-20240512003639-0dabce.png\\",\\"https://imagehosting4picgo.oss-cn-beijing.aliyuncs.com/imagehosting/fix-dir%2Fpicgo%2Fpicgo-clipboard-images%2F2024%2F05%2F23%2F15-52-21-6bef004b0f4bb87cf7bf61832c233fd7-20240523155221-c96f19.png\\",\\"https://imagehosting4picgo.oss-cn-beijing.aliyuncs.com/imagehosting/fix-dir%2Fpicgo%2Fpicgo-clipboard-images%2F2024%2F06%2F18%2F23-01-22-5d0e4e63dbe28d7217c706b90f4db2ee-20240618230121-0905f3.png\\"],\\"dateModified\\":\\"2024-11-24T16:17:22.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"转了码的刘公子\\",\\"url\\":\\"https://mister-hope.com\\"}]}"]]},"headers":[{"level":2,"title":"场景","slug":"场景","link":"#场景","children":[]},{"level":2,"title":"踩坑","slug":"踩坑","link":"#踩坑","children":[]}],"git":{"createdTime":1732465042000,"updatedTime":1732465042000,"contributors":[{"name":"Luis","email":"liuysh20@gmail.com","commits":1}]},"readingTime":{"minutes":0.79,"words":237},"filePathRelative":"2 第二大脑/1 节点/CS/软件工程/设计模式/建造者模式.md","localizedDate":"2024年11月25日","autoDesc":true}');export{d as comp,m as data};
