import{_ as d}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as e,f as i,o as a}from"./app-DokaGNO4.js";const s={};function n(r,t){return a(),e("div",null,t[0]||(t[0]=[i(`<p>ddd说白了就是以前的service太乱太多了，把他们按照微服务的思想group by在了几个核心领域下<br> mapping的出生和essay的出生有关，但是之后的更新就和essay包括sentence都没关系了。ddd的核心就是把domain划分好，每个domain提供自己的能力，最外层的大逻辑放在application层<br><img src="https://imagehosting4picgo.oss-cn-beijing.aliyuncs.com/imagehosting/fix-dir%2Fpicgo%2Fpicgo-clipboard-images%2F2024%2F10%2F01%2F16-13-49-a18227f44755f78e7dffc31ab0b840fa-202410011613361-7387ac.png" alt="image.png|1800" loading="lazy"></p><h2 id="贫血充血" tabindex="-1"><a class="header-anchor" href="#贫血充血"><span>贫血充血？</span></a></h2><p>贫血模型：业务逻辑主要在服务层实现。就比如普通的<code>VO</code>和<code>DTO</code>，只是作为一个数据 bean，里面不会有太多动作<br> 充血模型：业务逻辑主要在域对象内部实现，比如<code>ProductRoom</code>这种，类里面有很多业务动作</p><p>贫血模型：对象主要负责存储数据，类似于数据结构。 充血模型：对象不仅存储数据，还负责实现与之相关的业务逻辑。</p><h2 id="分层" tabindex="-1"><a class="header-anchor" href="#分层"><span>分层</span></a></h2><div class="language-sql line-numbers-mode" data-highlighter="shiki" data-ext="sql" data-title="sql" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">com/qunar/hotel/</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">│</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">├── interfaces/</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">│   ├── </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">DetailController</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">java</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">            # 传统的controller</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">│   │</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">│   └── </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">service</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">/</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">│       └── </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">AbstractPriceService</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">java</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    # 传统的service</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">│</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">├── engine/</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">│   └── </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">TransferBizProcess</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">java</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">          # 传统service中的核心处理逻辑</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">│</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">└── infrastructure/  # 基础层</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    └── future/                          # 外部调用</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">        ├── </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">AsyncFuture</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">java</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">        ├── </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">FutureCallback</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">java</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">        ├── </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">FutureTask</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">java</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">        └── ... (其他相关的future类)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="通用语言" tabindex="-1"><a class="header-anchor" href="#通用语言"><span>通用语言</span></a></h2><p>怎么理解通用语言这个概念呢？在事件风暴过程中，通过团队交流达成共识的，能够简单、清晰、准确描述业务涵义和规则的语言就是通用语言。也就是说，通用语言是团队统一的语言，不管你在团队中承担什么角色，在同一个领域的软件生命周期里都使用统一的语言进行交流。</p><p>比如商促、抽佣、优惠黑名单这些就是通用语言。我们现在<mark>事件风暴</mark>还不够规范，导致一些通用语言并没有对齐。</p><p>不过，一个好处是，在数字化工具中，通过工程的方式实现了下面的表格。 <img src="https://imagehosting4picgo.oss-cn-beijing.aliyuncs.com/imagehosting/fix-dir%2Fpicgo%2Fpicgo-clipboard-images%2F2024%2F09%2F29%2F14-28-41-ab406962b2bc951065bd6535229b5b7b-202409291428559-e48d3c.png" alt="image.png|1500" loading="lazy"></p><p>Here&#39;s the Markdown representation of the table in the image:</p><table><thead><tr><th>层</th><th>聚合</th><th>领域对象名称</th><th>领域类型</th><th>依赖的领域对象</th><th>包名</th><th>类名</th></tr></thead><tbody><tr><td>应用层</td><td>/</td><td>创建请假信息应用服务</td><td>应用服务</td><td>创建请假信息领域服务</td><td>.leave.application.service</td><td>CreateLeaveInfoAppService</td></tr><tr><td>应用层</td><td>/</td><td>请假审批已通过</td><td>事件发布</td><td>请假审批（审核）</td><td>.leave.application.event.publish</td><td>SendApprovalEventInfo</td></tr><tr><td>领域层</td><td>请假</td><td>请假单</td><td>聚合根</td><td></td><td>.leave.domain.leave.entity</td><td>Leave</td></tr><tr><td>领域层</td><td>请假</td><td>创建请假信息</td><td>命令</td><td></td><td>.leave.domain.leave.entity</td><td>Leave</td></tr><tr><td>领域层</td><td>请假</td><td>审批轨迹</td><td>值对象</td><td></td><td>.leave.domain.leave.entity</td><td>ApprovalTrace</td></tr><tr><td>领域层</td><td>请假</td><td>创建审批轨迹信息</td><td>命令</td><td></td><td>.leave.domain.leave.entity</td><td>ApprovalTrace</td></tr><tr><td>领域层</td><td>请假</td><td>创建请假信息</td><td>领域服务</td><td>创建请假信息</td><td>.leave.domain.leave.service</td><td>CreateLeaveInfoDomService</td></tr><tr><td>领域层</td><td>请假</td><td>创建审批轨迹信息</td><td>领域服务</td><td>创建审批轨迹信息</td><td>.leave.domain.leave.service</td><td>CreateApprovalTraceDomService</td></tr><tr><td>领域层</td><td>人员</td><td>人员</td><td>聚合根</td><td></td><td>.leave.domain.person.entity</td><td>Person</td></tr><tr><td>领域层</td><td>人员</td><td>创建人员信息</td><td>命令</td><td></td><td>.leave.domain.person.entity</td><td>Person</td></tr><tr><td>领域层</td><td>人员</td><td>组织关系</td><td>值对象</td><td></td><td>.leave.domain.person.entity</td><td>PersonRelationship</td></tr><tr><td>领域层</td><td>人员</td><td>创建组织关系</td><td>命令</td><td></td><td>.leave.domain.person.entity</td><td>PersonRelationship</td></tr><tr><td>领域层</td><td>人员</td><td>创建人员信息</td><td>领域服务</td><td>创建人员信息</td><td>.leave.domain.person.service</td><td>CreatePersonInfoDomService</td></tr><tr><td>领域层</td><td>人员</td><td>创建组织关系</td><td>领域服务</td><td>创建组织关系</td><td>.leave.domain.person.service</td><td>CreatePersonRelationshipDomService</td></tr><tr><td>基础层</td><td>请假</td><td>请假仓储接口</td><td>仓储接口</td><td></td><td>.domain.leave.repository.facade</td><td>LeaveRepositoryInterface</td></tr><tr><td>基础层</td><td>请假</td><td>请假仓储实现</td><td>仓储实现</td><td></td><td>.domain.leave.repository.persistence</td><td>LeaveRepositoryImpl</td></tr><tr><td>基础层</td><td>人员</td><td>人员仓储接口</td><td>仓储接口</td><td></td><td>.domain.person.repository.facade</td><td>PersonRepositoryInterface</td></tr><tr><td>基础层</td><td>人员</td><td>人员仓储实现</td><td>仓储实现</td><td></td><td>.domain.person.repository.persistence</td><td>PersonRepositoryImpl</td></tr></tbody></table><table><thead><tr><th></th><th></th><th></th></tr></thead><tbody><tr><td></td><td>场景</td><td>sentence + focus_word</td></tr><tr><td></td><td>文章</td><td>essay</td></tr><tr><td></td><td></td><td></td></tr><tr><td></td><td>词卡</td><td>word_card</td></tr><tr><td></td><td>用户的翻译</td><td>user_translation</td></tr><tr><td></td><td>AI的翻译</td><td>ai_translation</td></tr></tbody></table><h2 id="ddd课程大纲" tabindex="-1"><a class="header-anchor" href="#ddd课程大纲"><span>DDD课程大纲</span></a></h2><h3 id="开篇词" tabindex="-1"><a class="header-anchor" href="#开篇词"><span>开篇词</span></a></h3><table><thead><tr><th>序号</th><th>标题</th><th>时长</th></tr></thead><tbody><tr><td>1</td><td>开篇词 | 学好了DDD，你能做什么？</td><td>10:18</td></tr></tbody></table><h3 id="基础篇" tabindex="-1"><a class="header-anchor" href="#基础篇"><span>基础篇</span></a></h3><table><thead><tr><th>序号</th><th>标题</th><th>我的理解</th></tr></thead><tbody><tr><td>01</td><td>领域驱动设计：微服务设计为什么要选择DDD？</td><td></td></tr><tr><td>02</td><td>领域、子域、核心域、通用域和支撑域：傻傻分不清？</td><td></td></tr><tr><td>03</td><td>限界上下文：定义领域边界的利器</td><td>一个限界上下文理论上就可以设计为一个微服务。</td></tr><tr><td>04</td><td>实体和值对象：从领域模型的基础单元看系统设计</td><td></td></tr><tr><td>05</td><td>聚合和聚合根：怎样设计聚合？</td><td></td></tr></tbody></table><h3 id="进阶篇" tabindex="-1"><a class="header-anchor" href="#进阶篇"><span>进阶篇</span></a></h3><table><thead><tr><th>序号</th><th>标题</th><th>时长</th></tr></thead><tbody><tr><td>06</td><td>领域事件：解耦微服务的关键</td><td>17:38</td></tr><tr><td>07</td><td>DDD分层架构：有效降低层与层之间的依赖</td><td>16:45</td></tr><tr><td>08</td><td>微服务架构模型：几种常见模型的对比和分析</td><td>16:34</td></tr><tr><td>09</td><td>中台：数字转型后到底应该共享什么？</td><td>18:23</td></tr><tr><td>10</td><td>DDD、中台和微服务：它们是如何协作的？</td><td>14:32</td></tr><tr><td>-</td><td>答疑：有关3个典型问题的讲解</td><td>11:03</td></tr></tbody></table><h3 id="实战篇" tabindex="-1"><a class="header-anchor" href="#实战篇"><span>实战篇</span></a></h3><table><thead><tr><th>序号</th><th>标题</th><th></th></tr></thead><tbody><tr><td>11</td><td>DDD实践：如何用DDD重构中台业务模型？</td><td></td></tr><tr><td>12</td><td>领域建模：如何用事件风暴构建领域模型？</td><td>事件风暴说白了就是一起开个会，定义业务名词和对应的代码命名</td></tr><tr><td>13</td><td>代码模型（上）：如何使用DDD设计微服务代码模型？</td><td></td></tr><tr><td>14</td><td>代码模型（下）：如何保证领域模型与代码模型的一致性？</td><td></td></tr><tr><td>15</td><td>边界：微服务的各种边界在架构演进中的作用？</td><td></td></tr><tr><td>16</td><td>视图：如何实现服务和数据在微服务各层的协作？</td><td></td></tr><tr><td>17</td><td>从后端到前端：微服务后，前端如何设计？</td><td></td></tr><tr><td>18</td><td>知识点串讲：基于DDD的微服务设计实例</td><td></td></tr><tr><td>19</td><td>总结（一）：微服务设计和拆分要坚持哪些原则？</td><td></td></tr><tr><td>20</td><td>总结（二）：分布式架构关键设计10问</td><td></td></tr></tbody></table><h3 id="结束语" tabindex="-1"><a class="header-anchor" href="#结束语"><span>结束语</span></a></h3><table><thead><tr><th>序号</th><th>标题</th><th>时长</th></tr></thead><tbody><tr><td>1</td><td>结束语 | 所谓高手，就是跨过坑和大海！</td><td>08:18</td></tr></tbody></table><h3 id="专栏加餐" tabindex="-1"><a class="header-anchor" href="#专栏加餐"><span>专栏加餐</span></a></h3><table><thead><tr><th>序号</th><th>标题</th><th>时长</th></tr></thead><tbody><tr><td>1</td><td>基于DDD的微服务设计实例代码详解</td><td>26:01</td></tr><tr><td>2</td><td>抽奖｜《DDD实战课》沉淀成书了，感谢有你！</td><td>09:26</td></tr></tbody></table><h3 id="期末测试" tabindex="-1"><a class="header-anchor" href="#期末测试"><span>期末测试</span></a></h3><table><thead><tr><th>序号</th><th>标题</th><th>时长</th></tr></thead><tbody><tr><td>1</td><td>期末测试 | 有关DDD的内容，你掌握了多少呢？</td><td>00:30</td></tr></tbody></table>`,28)]))}const p=d(s,[["render",n],["__file","DDD.html.vue"]]),o=JSON.parse('{"path":"/2%20%E7%AC%AC%E4%BA%8C%E5%A4%A7%E8%84%91/1%20%E8%8A%82%E7%82%B9/CS/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/DDD.html","title":"DDD课程大纲","lang":"zh-CN","frontmatter":{"aliases":["DDD课程大纲"],"draw":null,"tags":[],"title":"DDD课程大纲","linter-yaml-title-alias":"DDD课程大纲","date created":"2024-08-19T00:00:00.000Z","date modified":"2024-11-12T00:00:00.000Z","description":"ddd说白了就是以前的service太乱太多了，把他们按照微服务的思想group by在了几个核心领域下 mapping的出生和essay的出生有关，但是之后的更新就和essay包括sentence都没关系了。ddd的核心就是把domain划分好，每个domain提供自己的能力，最外层的大逻辑放在application层 image.png|1800 ...","head":[["meta",{"property":"og:url","content":"https://vuepress-theme-hope-docs-demo.netlify.app/2%20%E7%AC%AC%E4%BA%8C%E5%A4%A7%E8%84%91/1%20%E8%8A%82%E7%82%B9/CS/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/DDD.html"}],["meta",{"property":"og:site_name","content":"转了码的刘公子"}],["meta",{"property":"og:title","content":"DDD课程大纲"}],["meta",{"property":"og:description","content":"ddd说白了就是以前的service太乱太多了，把他们按照微服务的思想group by在了几个核心领域下 mapping的出生和essay的出生有关，但是之后的更新就和essay包括sentence都没关系了。ddd的核心就是把domain划分好，每个domain提供自己的能力，最外层的大逻辑放在application层 image.png|1800 ..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://imagehosting4picgo.oss-cn-beijing.aliyuncs.com/imagehosting/fix-dir%2Fpicgo%2Fpicgo-clipboard-images%2F2024%2F10%2F01%2F16-13-49-a18227f44755f78e7dffc31ab0b840fa-202410011613361-7387ac.png"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-11-24T16:17:22.000Z"}],["meta",{"property":"article:modified_time","content":"2024-11-24T16:17:22.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"DDD课程大纲\\",\\"image\\":[\\"https://imagehosting4picgo.oss-cn-beijing.aliyuncs.com/imagehosting/fix-dir%2Fpicgo%2Fpicgo-clipboard-images%2F2024%2F10%2F01%2F16-13-49-a18227f44755f78e7dffc31ab0b840fa-202410011613361-7387ac.png\\",\\"https://imagehosting4picgo.oss-cn-beijing.aliyuncs.com/imagehosting/fix-dir%2Fpicgo%2Fpicgo-clipboard-images%2F2024%2F09%2F29%2F14-28-41-ab406962b2bc951065bd6535229b5b7b-202409291428559-e48d3c.png\\"],\\"dateModified\\":\\"2024-11-24T16:17:22.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"转了码的刘公子\\",\\"url\\":\\"https://mister-hope.com\\"}]}"]]},"headers":[{"level":2,"title":"贫血充血？","slug":"贫血充血","link":"#贫血充血","children":[]},{"level":2,"title":"分层","slug":"分层","link":"#分层","children":[]},{"level":2,"title":"通用语言","slug":"通用语言","link":"#通用语言","children":[]},{"level":2,"title":"DDD课程大纲","slug":"ddd课程大纲","link":"#ddd课程大纲","children":[{"level":3,"title":"开篇词","slug":"开篇词","link":"#开篇词","children":[]},{"level":3,"title":"基础篇","slug":"基础篇","link":"#基础篇","children":[]},{"level":3,"title":"进阶篇","slug":"进阶篇","link":"#进阶篇","children":[]},{"level":3,"title":"实战篇","slug":"实战篇","link":"#实战篇","children":[]},{"level":3,"title":"结束语","slug":"结束语","link":"#结束语","children":[]},{"level":3,"title":"专栏加餐","slug":"专栏加餐","link":"#专栏加餐","children":[]},{"level":3,"title":"期末测试","slug":"期末测试","link":"#期末测试","children":[]}]}],"git":{"createdTime":1732465042000,"updatedTime":1732465042000,"contributors":[{"name":"Luis","email":"liuysh20@gmail.com","commits":1}]},"readingTime":{"minutes":5.06,"words":1517},"filePathRelative":"2 第二大脑/1 节点/CS/软件工程/设计模式/DDD.md","localizedDate":"2024年11月25日","autoDesc":true}');export{p as comp,o as data};
