import{_ as t}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as i,a as o,g as a,f as p,o as r}from"./app-DokaGNO4.js";const m={};function n(c,e){return r(),i("div",null,[e[0]||(e[0]=o("p",null,"excerpt",-1)),a(" more "),e[1]||(e[1]=p("<p>9.【强制】表必备三字段：id，create_time，update_time。</p><blockquote><p>说明：其中 id 必为主键，类型为 bigint unsigned、单表时自增、步长为 1。create_time，update_time 的类型均为<br> datetime 类型，如果要记录时区信息，那么类型设置为 timestamp。</p></blockquote><p>1.【强制】表达是与否概念的字段，必须使用 is_xxx 的方式命名，数据类型是 unsigned tinyint（1 表示是，0 表示否）。</p><blockquote><p>注意：POJO 类中的任何布尔类型的变量，都不要加 is 前缀，所以，需要在<code>&lt;resultMap&gt;</code>设置从 is_xxx 到 Xxx 的映射关系。数据库表示是与否的值，使用 tinyint 类型，坚持 is_xxx 的命名方式是为了明确其取值含义与取值范围。说明：任何字段如果为非负数，必须是 unsigned。正例：表达逻辑删除的字段名 is_deleted，1 表示删除，0 表示未删除。</p></blockquote><p>4.【强制】禁用保留字，如 desc、range、match、delayed 等，请参考 MySQL 官方保留字。</p><p>6.【强制】小数类型为 decimal，禁止使用 float 和 double。</p><blockquote><p>说明：在存储的时候，float 和 double 都存在精度损失的问题，很可能在比较值的时候，得到不正确的结果。如果存<br> 储的数据范围超过 decimal 的范围，建议将数据拆成整数和小数并分开存储。</p></blockquote><p>10.【强制】在数据库中不能使用物理删除操作，要使用逻辑删除。</p><blockquote><p>说明：逻辑删除在数据删除后可以追溯到行为操作。不过会使得一些情况下的唯一主键变得不唯一，需要根据情况来酌<br> 情解决。</p></blockquote>",9))])}const s=t(m,[["render",n],["__file","1 建表 5-10.html.vue"]]),E=JSON.parse('{"path":"/2%20%E7%AC%AC%E4%BA%8C%E5%A4%A7%E8%84%91/1%20%E8%8A%82%E7%82%B9/CS/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B/%E6%95%B0%E6%8D%AE%E5%BA%93/%E6%95%B0%E6%8D%AE%E5%BA%93%E6%9C%80%E4%BD%B3%E5%AE%9E%E8%B7%B5/1%20%E5%BB%BA%E8%A1%A8%205-10.html","title":"1 建表 5-10","lang":"zh-CN","frontmatter":{"draw":null,"title":"1 建表 5-10","tags":["信息革命","数据","数据库最佳实践"],"date created":"2024-04-17T00:00:00.000Z","date modified":"2024-11-12T00:00:00.000Z","description":"excerpt 9.【强制】表必备三字段：id，create_time，update_time。 说明：其中 id 必为主键，类型为 bigint unsigned、单表时自增、步长为 1。create_time，update_time 的类型均为 datetime 类型，如果要记录时区信息，那么类型设置为 timestamp。 1.【强制】表达是与否...","head":[["meta",{"property":"og:url","content":"https://vuepress-theme-hope-docs-demo.netlify.app/2%20%E7%AC%AC%E4%BA%8C%E5%A4%A7%E8%84%91/1%20%E8%8A%82%E7%82%B9/CS/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B/%E6%95%B0%E6%8D%AE%E5%BA%93/%E6%95%B0%E6%8D%AE%E5%BA%93%E6%9C%80%E4%BD%B3%E5%AE%9E%E8%B7%B5/1%20%E5%BB%BA%E8%A1%A8%205-10.html"}],["meta",{"property":"og:site_name","content":"转了码的刘公子"}],["meta",{"property":"og:title","content":"1 建表 5-10"}],["meta",{"property":"og:description","content":"excerpt 9.【强制】表必备三字段：id，create_time，update_time。 说明：其中 id 必为主键，类型为 bigint unsigned、单表时自增、步长为 1。create_time，update_time 的类型均为 datetime 类型，如果要记录时区信息，那么类型设置为 timestamp。 1.【强制】表达是与否..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-11-24T18:07:06.000Z"}],["meta",{"property":"article:tag","content":"信息革命"}],["meta",{"property":"article:tag","content":"数据"}],["meta",{"property":"article:tag","content":"数据库最佳实践"}],["meta",{"property":"article:modified_time","content":"2024-11-24T18:07:06.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"1 建表 5-10\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-11-24T18:07:06.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"转了码的刘公子\\",\\"url\\":\\"https://mister-hope.com\\"}]}"]]},"headers":[],"git":{"createdTime":1732465042000,"updatedTime":1732471626000,"contributors":[{"name":"Luis","email":"liuysh20@gmail.com","commits":2}]},"readingTime":{"minutes":1.46,"words":437},"filePathRelative":"2 第二大脑/1 节点/CS/软件工程/数据库/数据库最佳实践/1 建表 5-10.md","localizedDate":"2024年11月25日","autoDesc":true}');export{s as comp,E as data};
