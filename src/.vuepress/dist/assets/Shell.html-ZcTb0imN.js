import{_ as i}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as l,f as t,o as n}from"./app-DokaGNO4.js";const a={};function e(d,s){return n(),l("div",null,s[0]||(s[0]=[t(`<p><strong>七步之外 Python 快，七步之内 Shell 更快。</strong></p><h2 id="接口" tabindex="-1"><a class="header-anchor" href="#接口"><span>接口</span></a></h2><p>Shell是操作系统的外壳，是用户与操作系统内核进行交互的接口。它主要有两个重要功能：</p><ol><li>命令解释器：Shell接收用户输入的命令，解释并传递给操作系统内核执行。用户通过Shell可以启动、暂停、停止程序或对计算机进行控制。</li><li>脚本语言：Shell还是一种解释执行的脚本语言，可以编写和执行Shell脚本。这些脚本可以包含系统命令、程序控制结构（如循环和函数）等。</li></ol><p>Shell 本质上是： - 一个接口规范（用户与操作系统交互的标准） - 定义了基本的行为（命令执行、IO 处理等）</p><h2 id="实现类" tabindex="-1"><a class="header-anchor" href="#实现类"><span>实现类</span></a></h2><p>不同的 Shell 是这个接口的不同实现： - sh：最基础的实现 - bash：基于 sh 的增强实现 - zsh：基于 bash 概念的更高级实现</p><div class="language-mermaid line-numbers-mode" data-highlighter="shiki" data-ext="mermaid" data-title="mermaid" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">classDiagram</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    class Shell {</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">        &lt;&lt;interface&gt;&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">        +executeCommand(string)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">        +handleInput(string)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">        +displayOutput(string)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">        +getEnvironmentVariables()</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">        +setEnvironmentVariable(string, string)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    class sh {</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">        +executeCommand(string)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">        +handleInput(string)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">        +displayOutput(string)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">        -basicScripting()</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    class bash {</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">        +commandHistory[]</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">        +executeCommand(string)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">        +tabComplete(string)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">        +arraySupport()</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">        +promptCustomization()</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    class zsh {</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">        +plugins[]</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">        +themes[]</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">        +smartCompletion(string)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">        +spellCorrection(string)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">        +advancedAliases()</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">        +pluginSystem()</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    Shell &lt;|.. sh : implements</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    sh &lt;|-- bash : extends</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    bash &lt;|-- zsh : extends</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    note for Shell &quot;定义基本的Shell行为&quot;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    note for sh &quot;1977: 基础命令执行和脚本支持&quot;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    note for bash &quot;1989: 命令历史和Tab补全&quot;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    note for zsh &quot;1990: 智能补全和插件系统&quot;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><table><thead><tr><th>特性</th><th>sh (Bourne Shell)</th><th>bash (Bourne Again Shell)</th><th>zsh (Z Shell)</th></tr></thead><tbody><tr><td>发布时间</td><td>1977</td><td>1989</td><td>1990</td></tr><tr><td>基本命令执行</td><td>✓</td><td>✓</td><td>✓</td></tr><tr><td>命令历史</td><td>✗</td><td>✓</td><td>✓✓ (更智能的历史搜索)</td></tr><tr><td>命令补全</td><td>✗</td><td>✓</td><td>✓✓ (更强大的补全系统)</td></tr><tr><td>插件系统</td><td>✗</td><td>✗</td><td>✓ (Oh My Zsh)</td></tr><tr><td>主题定制</td><td>✗</td><td>有限</td><td>✓ (丰富的主题)</td></tr><tr><td>智能提示</td><td>✗</td><td>✗</td><td>✓</td></tr><tr><td>拼写纠错</td><td>✗</td><td>✗</td><td>✓</td></tr><tr><td>目录别名</td><td>✗</td><td>基础支持</td><td>✓ (更智能的别名)</td></tr><tr><td>数组支持</td><td>✗</td><td>✓</td><td>✓</td></tr><tr><td>交互体验</td><td>基础</td><td>良好</td><td>优秀</td></tr><tr><td>脚本兼容性</td><td>最广</td><td>好</td><td>一般</td></tr><tr><td>常见使用场景</td><td>基础脚本<br>容器环境</td><td>系统管理<br>脚本编写</td><td>日常开发<br>终端使用</td></tr><tr><td>默认安装环境</td><td>Alpine Linux</td><td>大多数 Linux</td><td>macOS Catalina+</td></tr><tr><td>配置复杂度</td><td>低</td><td>中</td><td>高</td></tr><tr><td>学习曲线</td><td>平缓</td><td>中等</td><td>较陡</td></tr><tr><td>docker中</td><td>alpine 镜像默认用 sh</td><td>ubuntu/debian 镜像默认用 bash</td><td></td></tr></tbody></table><p>常用插件例子：</p><ul><li>git（显示 git 状态）</li><li>docker（docker 命令补全）</li><li>autojump（快速目录跳转）</li><li>zsh-autosuggestions（自动建议）</li><li>zsh-syntax-highlighting（语法高亮）</li></ul><h2 id="作用" tabindex="-1"><a class="header-anchor" href="#作用"><span>作用</span></a></h2><p>Shell的主要作用是：</p><ol><li>连接用户和操作系统，作为两者之间的桥梁。</li><li>保护操作系统内核，降低用户直接操作系统的风险。</li><li>提供命令行界面，允许用户通过文本命令控制系统。</li></ol><h2 id="shell脚本" tabindex="-1"><a class="header-anchor" href="#shell脚本"><span>Shell脚本</span></a></h2><p>在Linux系统中，常见的Shell包括bash和sh等。用户可以在Shell终端直接执行命令，也可以编写Shell脚本文件（通常以.sh为扩展名）来执行一系列命令。</p>`,16)]))}const r=i(a,[["render",e],["__file","Shell.html.vue"]]),c=JSON.parse('{"path":"/2%20%E7%AC%AC%E4%BA%8C%E5%A4%A7%E8%84%91/1%20%E8%8A%82%E7%82%B9/CS/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/linux/Shell/Shell.html","title":"shell","lang":"zh-CN","frontmatter":{"draw":null,"tags":[],"title":"shell","date created":"2024-07-27T00:00:00.000Z","date modified":"2024-11-12T00:00:00.000Z","description":"七步之外 Python 快，七步之内 Shell 更快。 接口 Shell是操作系统的外壳，是用户与操作系统内核进行交互的接口。它主要有两个重要功能： 命令解释器：Shell接收用户输入的命令，解释并传递给操作系统内核执行。用户通过Shell可以启动、暂停、停止程序或对计算机进行控制。 脚本语言：Shell还是一种解释执行的脚本语言，可以编写和执行Sh...","head":[["meta",{"property":"og:url","content":"https://vuepress-theme-hope-docs-demo.netlify.app/2%20%E7%AC%AC%E4%BA%8C%E5%A4%A7%E8%84%91/1%20%E8%8A%82%E7%82%B9/CS/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/linux/Shell/Shell.html"}],["meta",{"property":"og:site_name","content":"转了码的刘公子"}],["meta",{"property":"og:title","content":"shell"}],["meta",{"property":"og:description","content":"七步之外 Python 快，七步之内 Shell 更快。 接口 Shell是操作系统的外壳，是用户与操作系统内核进行交互的接口。它主要有两个重要功能： 命令解释器：Shell接收用户输入的命令，解释并传递给操作系统内核执行。用户通过Shell可以启动、暂停、停止程序或对计算机进行控制。 脚本语言：Shell还是一种解释执行的脚本语言，可以编写和执行Sh..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-11-24T16:17:22.000Z"}],["meta",{"property":"article:modified_time","content":"2024-11-24T16:17:22.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"shell\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-11-24T16:17:22.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"转了码的刘公子\\",\\"url\\":\\"https://mister-hope.com\\"}]}"]]},"headers":[{"level":2,"title":"接口","slug":"接口","link":"#接口","children":[]},{"level":2,"title":"实现类","slug":"实现类","link":"#实现类","children":[]},{"level":2,"title":"作用","slug":"作用","link":"#作用","children":[]},{"level":2,"title":"Shell脚本","slug":"shell脚本","link":"#shell脚本","children":[]}],"git":{"createdTime":1732465042000,"updatedTime":1732465042000,"contributors":[{"name":"Luis","email":"liuysh20@gmail.com","commits":1}]},"readingTime":{"minutes":2.41,"words":723},"filePathRelative":"2 第二大脑/1 节点/CS/操作系统/linux/Shell/Shell.md","localizedDate":"2024年11月25日","autoDesc":true}');export{r as comp,c as data};
