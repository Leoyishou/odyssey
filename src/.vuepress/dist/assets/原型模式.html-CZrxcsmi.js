import{_ as n}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as a,a as e,g as l,b as o,d as E,e as i,r as p,o as s}from"./app-DokaGNO4.js";const m={};function A(d,t){const r=p("RouteLink");return s(),a("div",null,[t[3]||(t[3]=e("p",null,"复制 sku",-1)),l(" more "),t[4]||(t[4]=e("h2",{id:"场景",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#场景"},[e("span",null,"场景")])],-1)),t[5]||(t[5]=e("p",null,"一个类的两个大对象，大部分成员变量相同，只有一点点不同。要完整再搞出一份的话，时间空间成本比较大，主要是时间。",-1)),t[6]||(t[6]=e("h2",{id:"原型模式",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#原型模式"},[e("span",null,"原型模式")])],-1)),e("p",null,[t[1]||(t[1]=o("复制 sku 的时候，先浅拷贝一份，然后排除掉那些属于")),E(r,{to:"/2%20%E7%AC%AC%E4%BA%8C%E5%A4%A7%E8%84%91/1%20%E8%8A%82%E7%82%B9/CS/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/%E4%B8%8D%E5%8F%AF%E5%8F%98%E7%9A%84.html"},{default:i(()=>t[0]||(t[0]=[o("不可变的")])),_:1}),t[2]||(t[2]=o("的成员变量或者流程上不会再变的成员变量，再把剩下的部分深拷贝（递归拷贝或者反序列化），减少整个复制过程中的成本。"))]),t[7]||(t[7]=e("blockquote",null,[e("p",null,"JS 中这种思想很多？")],-1))])}const c=n(m,[["render",A],["__file","原型模式.html.vue"]]),C=JSON.parse('{"path":"/2%20%E7%AC%AC%E4%BA%8C%E5%A4%A7%E8%84%91/1%20%E8%8A%82%E7%82%B9/CS/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/%E5%8E%9F%E5%9E%8B%E6%A8%A1%E5%BC%8F.html","title":"原型模式","lang":"zh-CN","frontmatter":{"draw":null,"title":"原型模式","tags":["Dev","信息革命","设计模式"],"date created":"2024-05-08T00:00:00.000Z","date modified":"2024-11-12T00:00:00.000Z","description":"复制 sku 场景 一个类的两个大对象，大部分成员变量相同，只有一点点不同。要完整再搞出一份的话，时间空间成本比较大，主要是时间。 原型模式 复制 sku 的时候，先浅拷贝一份，然后排除掉那些属于的成员变量或者流程上不会再变的成员变量，再把剩下的部分深拷贝（递归拷贝或者反序列化），减少整个复制过程中的成本。 JS 中这种思想很多？","head":[["meta",{"property":"og:url","content":"https://vuepress-theme-hope-docs-demo.netlify.app/2%20%E7%AC%AC%E4%BA%8C%E5%A4%A7%E8%84%91/1%20%E8%8A%82%E7%82%B9/CS/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/%E5%8E%9F%E5%9E%8B%E6%A8%A1%E5%BC%8F.html"}],["meta",{"property":"og:site_name","content":"转了码的刘公子"}],["meta",{"property":"og:title","content":"原型模式"}],["meta",{"property":"og:description","content":"复制 sku 场景 一个类的两个大对象，大部分成员变量相同，只有一点点不同。要完整再搞出一份的话，时间空间成本比较大，主要是时间。 原型模式 复制 sku 的时候，先浅拷贝一份，然后排除掉那些属于的成员变量或者流程上不会再变的成员变量，再把剩下的部分深拷贝（递归拷贝或者反序列化），减少整个复制过程中的成本。 JS 中这种思想很多？"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-11-24T16:17:22.000Z"}],["meta",{"property":"article:tag","content":"Dev"}],["meta",{"property":"article:tag","content":"信息革命"}],["meta",{"property":"article:tag","content":"设计模式"}],["meta",{"property":"article:modified_time","content":"2024-11-24T16:17:22.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"原型模式\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-11-24T16:17:22.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"转了码的刘公子\\",\\"url\\":\\"https://mister-hope.com\\"}]}"]]},"headers":[{"level":2,"title":"场景","slug":"场景","link":"#场景","children":[]},{"level":2,"title":"原型模式","slug":"原型模式","link":"#原型模式","children":[]}],"git":{"createdTime":1732465042000,"updatedTime":1732465042000,"contributors":[{"name":"Luis","email":"liuysh20@gmail.com","commits":1}]},"readingTime":{"minutes":0.58,"words":174},"filePathRelative":"2 第二大脑/1 节点/CS/软件工程/设计模式/原型模式.md","localizedDate":"2024年11月25日","autoDesc":true}');export{c as comp,C as data};
