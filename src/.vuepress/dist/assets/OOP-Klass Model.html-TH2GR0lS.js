import{_ as i}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as t,f as e,o as a}from"./app-DokaGNO4.js";const o={};function s(r,l){return a(),t("div",null,l[0]||(l[0]=[e('<p>让我用简单的话解释：</p><p>想象你有一个玩具盒子(这就是Java对象)。这个盒子分两部分：</p><ol><li>盒子本身(OOP部分)</li></ol><ul><li>盒子上的标签(对象头): 写着这是谁的盒子、盒子是否被别人借走等信息</li><li>里面装的玩具(实例数据): 就是你的玩具</li></ul><ol start="2"><li>说明书(Klass部分)</li></ol><ul><li>放在别的地方(方法区)</li><li>告诉你这个玩具怎么玩</li><li>所有相同的玩具共用一本说明书</li></ul><p>比如你买了一个乐高玩具:</p><ul><li>盒子里装着乐高积木(实例数据)</li><li>盒子上有标签(对象头)说这是你的</li><li>说明书(Klass)告诉你怎么拼装，所有买这款乐高的小朋友都用同一本说明书</li></ul><p>这样设计可以省空间，因为不用给每个玩具都配一本说明书。</p><p>是的,[[享元模式]]和JVM的OOP-Klass设计很相似。两者都把对象分成:</p><ol><li>内部状态(不变的,可共享)</li></ol><ul><li>享元模式: 内部属性</li><li>JVM: Klass(类信息,方法等)</li></ul><ol start="2"><li>外部状态(变化的,不共享)</li></ol><ul><li>享元模式: 外部属性</li><li>JVM: OOP(对象实例数据)</li></ul><p>这样的设计都能节省内存,提高系统性能。</p><p>文章主要介绍了Java对象在JVM中的存储模型(OOP-Klass Model)的核心概念：</p><ol><li>基本结构</li></ol><ul><li>OOP (Ordinary Object Pointer): 表示对象实例数据</li><li>Klass: 描述对象的类型信息</li><li>每个Java对象包含对象头、实例数据和对齐填充</li></ul><ol start="2"><li>对象头包含：</li></ol><ul><li>Mark Word: 存储锁状态、GC标记等信息</li><li>类元数据地址: 指向对象类型信息</li></ul><ol start="3"><li>OOP-Klass设计原因：</li></ol><ul><li>避免每个对象都包含虚函数表</li><li>将对象实例数据(OOP)和类型信息(Klass)分离</li><li>实现Java的多态机制</li></ul><ol start="4"><li>instanceKlass作用：</li></ol><ul><li>在JVM中表示Java类</li><li>包含方法列表、接口、字段、常量池等类信息</li><li>存储在方法区中</li></ul><p>这种设计让JVM可以统一管理内存分配和回收，同时有效实现了Java的面向对象特性。</p>',25)]))}const m=i(o,[["render",s],["__file","OOP-Klass Model.html.vue"]]),c=JSON.parse('{"path":"/2%20%E7%AC%AC%E4%BA%8C%E5%A4%A7%E8%84%91/1%20%E8%8A%82%E7%82%B9/CS/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/Java/JVM/OOP-Klass%20Model.html","title":"","lang":"zh-CN","frontmatter":{"description":"让我用简单的话解释： 想象你有一个玩具盒子(这就是Java对象)。这个盒子分两部分： 盒子本身(OOP部分) 盒子上的标签(对象头): 写着这是谁的盒子、盒子是否被别人借走等信息 里面装的玩具(实例数据): 就是你的玩具 说明书(Klass部分) 放在别的地方(方法区) 告诉你这个玩具怎么玩 所有相同的玩具共用一本说明书 比如你买了一个乐高玩具: 盒子...","head":[["meta",{"property":"og:url","content":"https://vuepress-theme-hope-docs-demo.netlify.app/2%20%E7%AC%AC%E4%BA%8C%E5%A4%A7%E8%84%91/1%20%E8%8A%82%E7%82%B9/CS/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/Java/JVM/OOP-Klass%20Model.html"}],["meta",{"property":"og:site_name","content":"转了码的刘公子"}],["meta",{"property":"og:description","content":"让我用简单的话解释： 想象你有一个玩具盒子(这就是Java对象)。这个盒子分两部分： 盒子本身(OOP部分) 盒子上的标签(对象头): 写着这是谁的盒子、盒子是否被别人借走等信息 里面装的玩具(实例数据): 就是你的玩具 说明书(Klass部分) 放在别的地方(方法区) 告诉你这个玩具怎么玩 所有相同的玩具共用一本说明书 比如你买了一个乐高玩具: 盒子..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-12-11T14:48:27.000Z"}],["meta",{"property":"article:modified_time","content":"2024-12-11T14:48:27.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-12-11T14:48:27.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"转了码的刘公子\\",\\"url\\":\\"https://mister-hope.com\\"}]}"]]},"headers":[],"git":{"createdTime":1733928507000,"updatedTime":1733928507000,"contributors":[{"name":"Luis","email":"liuysh20@gmail.com","commits":1}]},"readingTime":{"minutes":1.77,"words":532},"filePathRelative":"2 第二大脑/1 节点/CS/编程语言/Java/JVM/OOP-Klass Model.md","localizedDate":"2024年12月11日","autoDesc":true}');export{m as comp,c as data};
