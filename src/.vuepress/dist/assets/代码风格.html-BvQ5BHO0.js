import{_ as r}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as a,a as t,g as n,b as o,o as p}from"./app-DokaGNO4.js";const i={};function l(m,e){return p(),a("div",null,[e[0]||(e[0]=t("p",null,"也就是所谓的 code style，不用特别关注，用 IDEA 模版文件即可。",-1)),n(" more "),e[1]||(e[1]=t("p",null,[o('21.【推荐】类内方法定义的顺序依次是：公有方法或保护方法 > 私有方法 > getter / setter 方法。 说明：公有方法是类的调用者和维护者最关心的方法，首屏展示最好；保护方法虽然只是子类关心，也可能是 " 模板设'),t("br"),o(' 计模式 " 下的核心方法；而私有方法外部一般不需要特别关心，是一个黑盒实现；因为承载的信息价值较低，所有 Service 和 DAO 的 getter / setter 方法放在类体最后。（来自 OOP 规约那一章）')],-1)),e[2]||(e[2]=t("blockquote",null,[t("p",null,"这就是之前和晓伟哥探讨过的那个问题")],-1))])}const E=r(i,[["render",l],["__file","代码风格.html.vue"]]),d=JSON.parse('{"path":"/2%20%E7%AC%AC%E4%BA%8C%E5%A4%A7%E8%84%91/1%20%E8%8A%82%E7%82%B9/CS/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/Java/%E9%98%BF%E9%87%8C%E8%A7%84%E8%8C%83/%E4%BB%A3%E7%A0%81%E9%A3%8E%E6%A0%BC.html","title":"代码风格","lang":"zh-CN","frontmatter":{"draw":null,"title":"代码风格","tags":["1 Dev","Java","代码味道","信息革命"],"date created":"2024-04-17T00:00:00.000Z","date modified":"2024-11-12T00:00:00.000Z","description":"也就是所谓的 code style，不用特别关注，用 IDEA 模版文件即可。 21.【推荐】类内方法定义的顺序依次是：公有方法或保护方法 > 私有方法 > getter / setter 方法。 说明：公有方法是类的调用者和维护者最关心的方法，首屏展示最好；保护方法虽然只是子类关心，也可能是 \\" 模板设 计模式 \\" 下的核心方法；而私有方法外部一般不...","head":[["meta",{"property":"og:url","content":"https://vuepress-theme-hope-docs-demo.netlify.app/2%20%E7%AC%AC%E4%BA%8C%E5%A4%A7%E8%84%91/1%20%E8%8A%82%E7%82%B9/CS/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/Java/%E9%98%BF%E9%87%8C%E8%A7%84%E8%8C%83/%E4%BB%A3%E7%A0%81%E9%A3%8E%E6%A0%BC.html"}],["meta",{"property":"og:site_name","content":"转了码的刘公子"}],["meta",{"property":"og:title","content":"代码风格"}],["meta",{"property":"og:description","content":"也就是所谓的 code style，不用特别关注，用 IDEA 模版文件即可。 21.【推荐】类内方法定义的顺序依次是：公有方法或保护方法 > 私有方法 > getter / setter 方法。 说明：公有方法是类的调用者和维护者最关心的方法，首屏展示最好；保护方法虽然只是子类关心，也可能是 \\" 模板设 计模式 \\" 下的核心方法；而私有方法外部一般不..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-11-24T16:17:22.000Z"}],["meta",{"property":"article:tag","content":"1 Dev"}],["meta",{"property":"article:tag","content":"Java"}],["meta",{"property":"article:tag","content":"代码味道"}],["meta",{"property":"article:tag","content":"信息革命"}],["meta",{"property":"article:modified_time","content":"2024-11-24T16:17:22.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"代码风格\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-11-24T16:17:22.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"转了码的刘公子\\",\\"url\\":\\"https://mister-hope.com\\"}]}"]]},"headers":[],"git":{"createdTime":1732465042000,"updatedTime":1732465042000,"contributors":[{"name":"Luis","email":"liuysh20@gmail.com","commits":1}]},"readingTime":{"minutes":0.72,"words":216},"filePathRelative":"2 第二大脑/1 节点/CS/编程语言/Java/阿里规范/代码风格.md","localizedDate":"2024年11月25日","autoDesc":true}');export{E as comp,d as data};
