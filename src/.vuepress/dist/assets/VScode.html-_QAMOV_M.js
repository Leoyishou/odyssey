import{_ as t}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as i,f as l,o}from"./app-DokaGNO4.js";const a={};function n(r,e){return o(),i("div",null,e[0]||(e[0]=[l('<p>setting.json</p><p>作用：obsidian 和 logseq 的批量编辑能力较差，可以用 vscode 打开进行批量编辑，比如正则替换，yaml 区的批量编辑等。安装 foam 插件以后，核心的双链功能已经完美支持了。</p><p>同时还有可能使用上 copilot 插件的威力，辅助创作。</p><ul><li><a href="Github%20Copilot">Github Copilot</a><ul><li>智能 AI 写代码，这是未来</li></ul></li><li><a href="tabnine">tabnine</a><ul><li>和 pilot 互补，但感觉已经被 copilot 秒杀了。</li></ul></li><li><a href="gitlens">gitlens</a><ul><li>图形化的 git 操作有时候就是方便</li></ul></li><li><a href="project%20manager">project manager</a><ul><li>并行多项目开发必备</li></ul></li><li><a href="rest%20client">rest client</a><ul><li>轻量地快速发起一个 http 请求</li></ul></li><li><a href="remote%20-%20containers">remote - containers</a><ul><li>连接远程容器开发必备</li></ul></li><li><a href="remote%20-%20ssh">remote - ssh</a><ul><li>连接远程服务器开发必备</li></ul></li><li><a href="markdown%20lint">markdown lint</a><ul><li>自动格式化 md 文件</li></ul></li></ul><p>插件学习</p><h2 id="不同级别的配置设置" tabindex="-1"><a class="header-anchor" href="#不同级别的配置设置"><span>不同级别的配置设置</span></a></h2><p>您说得对,Visual Studio Code 中确实存在多个位置的 settings.json 文件,它们的作用领域是不同的。让我为您简要解释一下:</p><ol><li>用户设置 (User Settings): <ul><li>位置: 用户文件夹下</li><li>作用: 适用于所有的 VS Code 实例和项目</li></ul></li><li>工作区设置 (Workspace Settings): <ul><li>位置: 项目根目录下的.vscode 文件夹中</li><li>作用: 仅适用于当前工作区(项目)</li></ul></li><li>文件夹设置 (Folder Settings): <ul><li>位置: 多根工作区中每个文件夹的.vscode 目录下</li><li>作用: 仅适用于该特定文件夹及其子文件夹</li></ul></li></ol><p>这些设置的优先级从高到低为:文件夹设置 &gt; 工作区设置 &gt; 用户设置。这意味着更具体的设置会覆盖更一般的设置。</p><p>这种分层的设置方式允许您在不同级别上自定义 VS Code 的行为,从而实现更灵活的配置管理。</p><h2 id="跑vue项目" tabindex="-1"><a class="header-anchor" href="#跑vue项目"><span>跑<a href="Vue">Vue</a>项目</span></a></h2><p>在 Cursor 的终端中，导航到你的项目根目录，然后运行以下命令：</p>',12)]))}const c=t(a,[["render",n],["__file","VScode.html.vue"]]),d=JSON.parse('{"path":"/2%20%E7%AC%AC%E4%BA%8C%E5%A4%A7%E8%84%91/2%20%E9%A3%9E%E8%BD%AE/0%20%E5%B7%A5%E5%85%B7%E7%B3%BB%E7%BB%9F/IDE/VScode.html","title":"VScode","lang":"zh-CN","frontmatter":{"draw":null,"tags":[],"title":"VScode","date created":"2024-07-11T00:00:00.000Z","date modified":"2024-11-12T00:00:00.000Z","description":"setting.json 作用：obsidian 和 logseq 的批量编辑能力较差，可以用 vscode 打开进行批量编辑，比如正则替换，yaml 区的批量编辑等。安装 foam 插件以后，核心的双链功能已经完美支持了。 同时还有可能使用上 copilot 插件的威力，辅助创作。 Github Copilot 智能 AI 写代码，这是未来 tabn...","head":[["meta",{"property":"og:url","content":"https://vuepress-theme-hope-docs-demo.netlify.app/2%20%E7%AC%AC%E4%BA%8C%E5%A4%A7%E8%84%91/2%20%E9%A3%9E%E8%BD%AE/0%20%E5%B7%A5%E5%85%B7%E7%B3%BB%E7%BB%9F/IDE/VScode.html"}],["meta",{"property":"og:site_name","content":"转了码的刘公子"}],["meta",{"property":"og:title","content":"VScode"}],["meta",{"property":"og:description","content":"setting.json 作用：obsidian 和 logseq 的批量编辑能力较差，可以用 vscode 打开进行批量编辑，比如正则替换，yaml 区的批量编辑等。安装 foam 插件以后，核心的双链功能已经完美支持了。 同时还有可能使用上 copilot 插件的威力，辅助创作。 Github Copilot 智能 AI 写代码，这是未来 tabn..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-11-24T16:17:22.000Z"}],["meta",{"property":"article:modified_time","content":"2024-11-24T16:17:22.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"VScode\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-11-24T16:17:22.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"转了码的刘公子\\",\\"url\\":\\"https://mister-hope.com\\"}]}"]]},"headers":[{"level":2,"title":"不同级别的配置设置","slug":"不同级别的配置设置","link":"#不同级别的配置设置","children":[]},{"level":2,"title":"跑Vue项目","slug":"跑vue项目","link":"#跑vue项目","children":[]}],"git":{"createdTime":1732465042000,"updatedTime":1732465042000,"contributors":[{"name":"Luis","email":"liuysh20@gmail.com","commits":1}]},"readingTime":{"minutes":1.63,"words":489},"filePathRelative":"2 第二大脑/2 飞轮/0 工具系统/IDE/VScode.md","localizedDate":"2024年11月25日","autoDesc":true}');export{c as comp,d as data};
