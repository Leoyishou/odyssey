import{_ as s}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as e,f as a,o as n}from"./app-DokaGNO4.js";const t={};function l(p,i){return n(),e("div",null,i[0]||(i[0]=[a(`<h2 id="内存" tabindex="-1"><a class="header-anchor" href="#内存"><span>内存</span></a></h2><table><thead><tr><th>1</th><th>2</th><th>4</th><th>8</th></tr></thead><tbody><tr><td>byte</td><td>short</td><td>int</td><td>long</td></tr><tr><td>boolean</td><td>char</td><td>float</td><td>double</td></tr></tbody></table><p>##『继承』体系</p><div class="language-mermaid line-numbers-mode" data-highlighter="shiki" data-ext="mermaid" data-title="mermaid" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">graph BT</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    A[byte] --&gt; B[short]</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    B --&gt; C[int]</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    C --&gt; D[long]</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    D --&gt; E[float]</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    E --&gt; F[double]</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    </span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    G[char] --&gt; C</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    G --&gt; D</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    G --&gt; E</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    G --&gt; F</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    </span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    H[boolean] --&gt; I[不参与数值转换]</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    </span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    style A fill:#f9f,stroke:#333,stroke-width:2px</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    style B fill:#fcc,stroke:#333,stroke-width:2px</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    style C fill:#cfc,stroke:#333,stroke-width:2px</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    style D fill:#ccf,stroke:#333,stroke-width:2px</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    style E fill:#fcf,stroke:#333,stroke-width:2px</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    style F fill:#cff,stroke:#333,stroke-width:2px</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    style G fill:#ffc,stroke:#333,stroke-width:2px</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    style H fill:#f99,stroke:#333,stroke-width:2px</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    style I fill:#ddd,stroke:#333,stroke-width:2px</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>== 和 + 这类操作时会自动为操作符两边做类型转换到能够等量齐观的级别</p><h2 id="精度" tabindex="-1"><a class="header-anchor" href="#精度"><span>精度</span></a></h2><p>// double 的二进制表示<br> 0.05 = 1.1001100110011001100110011001100110011001100110011010 × 2^-5</p><p>// 转换回十进制就会得到： 0.05000000000000000277555756156289135105907917022705078125</p><h2 id="相加" tabindex="-1"><a class="header-anchor" href="#相加"><span>相加</span></a></h2><figure><img src="https://imagehosting4picgo.oss-cn-beijing.aliyuncs.com/imagehosting/fix-dir%2Fpicgo%2Fpicgo-clipboard-images%2F2024%2F08%2F17%2F00-46-18-5f6226435e2ff372685c1a1dd017097b-202408170046852-690a97.png" alt="image.png|1000" tabindex="0" loading="lazy"><figcaption>image.png|1000</figcaption></figure><ol><li>char、byte、short相加时会自动转换为int类型</li><li>+=会自动强转（自动装箱功能），但是+必须要手动强转b=(byte)(a+b)。</li></ol><h2 id="比较" tabindex="-1"><a class="header-anchor" href="#比较"><span>比较</span></a></h2><p>x == f1[0]，x是long类型，与float类型对比属于低精度，所以x要向高精度的float类型转型再比较，故相等；</p>`,13)]))}const h=s(t,[["render",l],["__file","基本数据类型.html.vue"]]),o=JSON.parse('{"path":"/2%20%E7%AC%AC%E4%BA%8C%E5%A4%A7%E8%84%91/1%20%E8%8A%82%E7%82%B9/CS/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/Java/%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/%E5%9F%BA%E6%9C%AC%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B.html","title":"基本数据类型","lang":"zh-CN","frontmatter":{"draw":null,"tags":[],"title":"基本数据类型","date created":"2024-08-17T00:00:00.000Z","date modified":"2024-11-12T00:00:00.000Z","description":"内存 ##『继承』体系 == 和 + 这类操作时会自动为操作符两边做类型转换到能够等量齐观的级别 精度 // double 的二进制表示 0.05 = 1.1001100110011001100110011001100110011001100110011010 × 2^-5 // 转换回十进制就会得到： 0.0500000000000000027755...","head":[["meta",{"property":"og:url","content":"https://vuepress-theme-hope-docs-demo.netlify.app/2%20%E7%AC%AC%E4%BA%8C%E5%A4%A7%E8%84%91/1%20%E8%8A%82%E7%82%B9/CS/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/Java/%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/%E5%9F%BA%E6%9C%AC%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B.html"}],["meta",{"property":"og:site_name","content":"转了码的刘公子"}],["meta",{"property":"og:title","content":"基本数据类型"}],["meta",{"property":"og:description","content":"内存 ##『继承』体系 == 和 + 这类操作时会自动为操作符两边做类型转换到能够等量齐观的级别 精度 // double 的二进制表示 0.05 = 1.1001100110011001100110011001100110011001100110011010 × 2^-5 // 转换回十进制就会得到： 0.0500000000000000027755..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://imagehosting4picgo.oss-cn-beijing.aliyuncs.com/imagehosting/fix-dir%2Fpicgo%2Fpicgo-clipboard-images%2F2024%2F08%2F17%2F00-46-18-5f6226435e2ff372685c1a1dd017097b-202408170046852-690a97.png"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-11-24T16:17:22.000Z"}],["meta",{"property":"article:modified_time","content":"2024-11-24T16:17:22.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"基本数据类型\\",\\"image\\":[\\"https://imagehosting4picgo.oss-cn-beijing.aliyuncs.com/imagehosting/fix-dir%2Fpicgo%2Fpicgo-clipboard-images%2F2024%2F08%2F17%2F00-46-18-5f6226435e2ff372685c1a1dd017097b-202408170046852-690a97.png\\"],\\"dateModified\\":\\"2024-11-24T16:17:22.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"转了码的刘公子\\",\\"url\\":\\"https://mister-hope.com\\"}]}"]]},"headers":[{"level":2,"title":"内存","slug":"内存","link":"#内存","children":[]},{"level":2,"title":"精度","slug":"精度","link":"#精度","children":[]},{"level":2,"title":"相加","slug":"相加","link":"#相加","children":[]},{"level":2,"title":"比较","slug":"比较","link":"#比较","children":[]}],"git":{"createdTime":1732465042000,"updatedTime":1732465042000,"contributors":[{"name":"Luis","email":"liuysh20@gmail.com","commits":1}]},"readingTime":{"minutes":1.06,"words":317},"filePathRelative":"2 第二大脑/1 节点/CS/编程语言/Java/数据类型/基本数据类型.md","localizedDate":"2024年11月25日","autoDesc":true}');export{h as comp,o as data};
