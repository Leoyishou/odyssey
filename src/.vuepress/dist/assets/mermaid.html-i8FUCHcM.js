import{_ as n}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as a,f as i,o as e}from"./app-DokaGNO4.js";const t={};function l(d,s){return e(),a("div",null,s[0]||(s[0]=[i(`<h2 id="官方文档" tabindex="-1"><a class="header-anchor" href="#官方文档"><span>官方文档</span></a></h2><p>https://mermaid.nodejs.cn/intro/</p><h2 id="图的种类" tabindex="-1"><a class="header-anchor" href="#图的种类"><span>图的种类</span></a></h2><table><thead><tr><th>图表类型</th><th>描述</th><th>主要用途</th></tr></thead><tbody><tr><td>流程图 (Flowchart)</td><td>使用节点和连接线描述过程或工作流程</td><td>展示算法、工作流程、决策过程</td></tr><tr><td>类图 (Class Diagram)</td><td>展示类、属性、方法及其关系</td><td>描述面向对象系统的静态结构</td></tr><tr><td>状态图 (State Diagram)</td><td>描述对象在其生命周期中的各种状态及转换</td><td>模拟系统状态变化、描述状态机</td></tr><tr><td>实体关系图 (Entity Relationship Diagram)</td><td>描述实体类型、属性和关系</td><td>数据库设计、系统数据模型描述</td></tr><tr><td>用户旅程图 (User Journey)</td><td>可视化用户与产品/服务的交互过程</td><td>用户体验设计、服务设计</td></tr><tr><td>饼图 (Pie Chart)</td><td>圆形图表，展示数据的比例分布</td><td>数据可视化、比例展示</td></tr><tr><td>需求图 (Requirement Diagram)</td><td>描述系统需求及其关系</td><td>软件工程、需求分析</td></tr><tr><td>Git图 (Gitgraph)</td><td>可视化Git分支和提交历史</td><td>版本控制工作流程展示</td></tr><tr><td>C4架构图 (C4 Diagram)</td><td>描述软件架构的不同层次</td><td>软件架构设计、系统结构展示</td></tr><tr><td>思维导图 (Mindmap)</td><td>围绕中心主题组织和呈现相关概念</td><td>头脑风暴、知识组织</td></tr><tr><td>象限图 (Quadrant Chart)</td><td>将数据点放置在二维网格中的四个象限内</td><td>决策分析、优先级排序</td></tr><tr><td></td><td></td><td></td></tr><tr><td></td><td></td><td></td></tr><tr><td></td><td></td><td></td></tr><tr><td>时间线 (Timeline)</td><td>不太好，内容一多就很挤，看不清楚</td><td></td></tr><tr><td>甘特图 (Gantt)</td><td>还不错，可以代替时间线图，做需求的时候可以用</td><td></td></tr><tr><td>泳道图/序列图 (Sequence Diagram)</td><td>非常棒！</td><td>描述系统组件间的通信、API调用顺序</td></tr></tbody></table><h2 id="泳道图" tabindex="-1"><a class="header-anchor" href="#泳道图"><span>泳道图</span></a></h2><div class="language-mermaid line-numbers-mode" data-highlighter="shiki" data-ext="mermaid" data-title="mermaid" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">sequenceDiagram</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    participant User</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    participant Frontend</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    participant Google</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    participant Backend</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    User-&gt;&gt;Frontend: 点击&quot;使用Google登录&quot;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    Frontend-&gt;&gt;Google: 请求认证</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    Google-&gt;&gt;User: 显示登录/授权页面</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    User-&gt;&gt;Google: 登录并授权</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    Google-&gt;&gt;Frontend: 返回ID token</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    Frontend-&gt;&gt;Backend: 发送ID token</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    Backend-&gt;&gt;Google: 验证ID token</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    Google-&gt;&gt;Backend: 确认token有效</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    Backend-&gt;&gt;Frontend: 创建会话，返回自定义token或session</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    Frontend-&gt;&gt;User: 显示登录成功</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="节点" tabindex="-1"><a class="header-anchor" href="#节点"><span>节点</span></a></h2><ol><li>构图 LR (Left to Right):BT (Bottom to Top)</li><li>节点： <ol><li>形状 <code>(())</code>圆形, <code>{}</code>,<code>[]</code>，redis 圆柱体<code>[()]</code></li><li>上色 <code>style C fill:#bbf,stroke:#333,stroke-width:4px;</code></li></ol></li><li>箭头 <ol><li>中间加字 <code>E[essay]--&gt;|处理| P[分词]</code></li></ol></li></ol><div class="language-mermaid line-numbers-mode" data-highlighter="shiki" data-ext="mermaid" data-title="mermaid" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">graph LR</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    A[travelco] --&gt;|1. 请求数据| B(SPA)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    B --&gt;|2. 返回数据| A</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    A --&gt;|3. 存储数据| C[(Redis)]</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    D[Captain] --&gt;|4. 读取数据| C</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    class A,B,D component;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    class C database;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>这个增强版的 Mermaid 图表展示了以下额外的功能和&quot;花活&quot;：</p><ol><li><p>样式定义：使用 <code>classDef</code> 定义了不同的样式类。</p></li><li><p>子图（Subgraph）：将券处理（CouponHandle）部分封装在一个子图中，使结构更清晰。</p></li><li><p>方向控制：在子图中使用 \`\`\`mermaid graph LR A[travelco] --&gt;|1. 请求数据| B(SPA) B --&gt;|2. 返回数据| A A --&gt;|3. 存储数据| C[(Redis)] D[Captain] --&gt;|4. 读取数据| C</p><p>class A,B,D component; class C database;</p></li></ol><div class="language-0（top line-numbers-mode" data-highlighter="shiki" data-ext="0（top" data-title="0（top" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>4. 。</span></span>
<span class="line"><span>5. 样式应用：对不同的节点应用了自定义样式。</span></span>
<span class="line"><span>6. 注释：添加了一个指向 Context 的注释。</span></span>
<span class="line"><span>7. 图标：在 Context 节点旁添加了一个齿轮图标（使用 Font Awesome）。</span></span>
<span class="line"><span>8. 点击事件：为 Context 节点添加了一个点击事件（注意：这在某些 Mermaid 渲染器中可能不支持）。</span></span>
<span class="line"><span>9. 换行：在节点文本中使用 \`\`\`mermaid</span></span>
<span class="line"><span>graph LR</span></span>
<span class="line"><span>    A[travelco] --&gt;|1. 请求数据| B(SPA)</span></span>
<span class="line"><span>    B --&gt;|2. 返回数据| A</span></span>
<span class="line"><span>    A --&gt;|3. 存储数据| C[(Redis)]</span></span>
<span class="line"><span>    D[Captain] --&gt;|4. 读取数据| C</span></span>
<span class="line"><span></span></span>
<span class="line"><span></span></span>
<span class="line"><span>    class A,B,D component;</span></span>
<span class="line"><span>    class C database;</span></span>
<span class="line"><span>\`\`\`1 来实现换行，使显示更整洁。</span></span>
<span class="line"><span>10. 连接线样式：使用 \`\`\`mermaid</span></span>
<span class="line"><span>graph LR</span></span>
<span class="line"><span>    A[travelco] --&gt;|1. 请求数据| B(SPA)</span></span>
<span class="line"><span>    B --&gt;|2. 返回数据| A</span></span>
<span class="line"><span>    A --&gt;|3. 存储数据| C[(Redis)]</span></span>
<span class="line"><span>    D[Captain] --&gt;|4. 读取数据| C</span></span>
<span class="line"><span></span></span>
<span class="line"><span></span></span>
<span class="line"><span>    class A,B,D component;</span></span>
<span class="line"><span>    class C database;</span></span>
<span class="line"><span>\`\`\`2 代替 \`\`\`mermaid</span></span>
<span class="line"><span>graph LR</span></span>
<span class="line"><span>    A[travelco] --&gt;|1. 请求数据| B(SPA)</span></span>
<span class="line"><span>    B --&gt;|2. 返回数据| A</span></span>
<span class="line"><span>    A --&gt;|3. 存储数据| C[(Redis)]</span></span>
<span class="line"><span>    D[Captain] --&gt;|4. 读取数据| C</span></span>
<span class="line"><span></span></span>
<span class="line"><span></span></span>
<span class="line"><span>    class A,B,D component;</span></span>
<span class="line"><span>    class C database;</span></span>
<span class="line"><span>\`\`\`3 来创建无箭头的连接线（用于图标连接）。</span></span>
<span class="line"><span></span></span>
<span class="line"><span>[mermaid](mermaid.md)里这个染色不错</span></span>
<span class="line"><span></span></span>
<span class="line"><span>\`\`\`Java</span></span>
<span class="line"><span>    classDef gradient fill:#f96,stroke:#333,stroke-width:2px;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,12)]))}const c=n(t,[["render",l],["__file","mermaid.html.vue"]]),o=JSON.parse('{"path":"/2%20%E7%AC%AC%E4%BA%8C%E5%A4%A7%E8%84%91/1%20%E8%8A%82%E7%82%B9/%E7%BB%8F%E6%B5%8E/%E6%8A%95%E8%B5%84/%E7%BE%8E%E8%82%A1/mermaid.html","title":"mermaid","lang":"zh-CN","frontmatter":{"draw":null,"tags":[],"title":"mermaid","date created":"2024-09-07T00:00:00.000Z","date modified":"2024-11-12T00:00:00.000Z","description":"官方文档 https://mermaid.nodejs.cn/intro/ 图的种类 泳道图 节点 构图 LR (Left to Right):BT (Bottom to Top) 节点： 形状 (())圆形, {},[]，redis 圆柱体[()] 上色 style C fill:#bbf,stroke:#333,stroke-width:4px; ...","head":[["meta",{"property":"og:url","content":"https://vuepress-theme-hope-docs-demo.netlify.app/2%20%E7%AC%AC%E4%BA%8C%E5%A4%A7%E8%84%91/1%20%E8%8A%82%E7%82%B9/%E7%BB%8F%E6%B5%8E/%E6%8A%95%E8%B5%84/%E7%BE%8E%E8%82%A1/mermaid.html"}],["meta",{"property":"og:site_name","content":"转了码的刘公子"}],["meta",{"property":"og:title","content":"mermaid"}],["meta",{"property":"og:description","content":"官方文档 https://mermaid.nodejs.cn/intro/ 图的种类 泳道图 节点 构图 LR (Left to Right):BT (Bottom to Top) 节点： 形状 (())圆形, {},[]，redis 圆柱体[()] 上色 style C fill:#bbf,stroke:#333,stroke-width:4px; ..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-11-24T17:46:49.000Z"}],["meta",{"property":"article:modified_time","content":"2024-11-24T17:46:49.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"mermaid\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-11-24T17:46:49.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"转了码的刘公子\\",\\"url\\":\\"https://mister-hope.com\\"}]}"]]},"headers":[{"level":2,"title":"官方文档","slug":"官方文档","link":"#官方文档","children":[]},{"level":2,"title":"图的种类","slug":"图的种类","link":"#图的种类","children":[]},{"level":2,"title":"泳道图","slug":"泳道图","link":"#泳道图","children":[]},{"level":2,"title":"节点","slug":"节点","link":"#节点","children":[]}],"git":{"createdTime":1732465042000,"updatedTime":1732470409000,"contributors":[{"name":"Luis","email":"liuysh20@gmail.com","commits":2}]},"readingTime":{"minutes":3.44,"words":1032},"filePathRelative":"2 第二大脑/1 节点/经济/投资/美股/mermaid.md","localizedDate":"2024年11月25日","autoDesc":true}');export{c as comp,o as data};
