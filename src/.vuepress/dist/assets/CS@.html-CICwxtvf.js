import{_ as i}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as u,a as t,d as n,e,b as d,g as s,f as o,r as a,o as p}from"./app-DokaGNO4.js";const b={};function E(A,r){const l=a("RouteLink");return p(),u("div",null,[r[46]||(r[46]=t("p",null,"外表高大上，看着是宾利的壳，其实核心动力是几个老鼠在壳里面蹬三轮呢。只要你干一两年基本都懂了。",-1)),t("p",null,[n(l,{to:"/2%20%E7%AC%AC%E4%BA%8C%E5%A4%A7%E8%84%91/1%20%E8%8A%82%E7%82%B9/CS/%E8%83%A1%E9%80%82.html"},{default:e(()=>r[0]||(r[0]=[d("胡适")])),_:1}),r[1]||(r[1]=d("说：怕什么真理无穷，")),r[2]||(r[2]=t("strong",null,"进一寸有进一寸的欢喜",-1)),r[3]||(r[3]=d("。"))]),s(" more "),r[47]||(r[47]=t("h3",{id:"cs-心法",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#cs-心法"},[t("span",null,"CS 心法")])],-1)),r[48]||(r[48]=t("p",null,[d("任何活儿，无论是存储、网络、"),t("a",{href:"https://www.zhihu.com/search?q=ai%20infra&search_source=Entity&hybrid_search_source=Entity&hybrid_search_extra=%7B%22sourceType%22%3A%22answer%22%2C%22sourceId%22%3A3054501672%7D",target:"_blank",rel:"noopener noreferrer"},"ai infra"),d("、编译器后端、cuda，等等，都非常简单。外表高大上，看着是宾利的壳，其实核心动力是几个老鼠在壳里面蹬三轮呢。只要你干一两年基本都懂了。")],-1)),r[49]||(r[49]=t("p",null,"你能把活儿干出花来，能快速的超越自己的限制，最重要的是计算机各个领域的基本视野和概念。",-1)),t("p",null,[r[5]||(r[5]=d("你必须知道计算机科学几乎所有的领域基本的想法是什么。比如 tcp 怎么维护 ")),r[6]||(r[6]=t("a",{href:"https://www.zhihu.com/search?q=%E8%99%9A%E6%8B%9F%E9%93%BE%E6%8E%A5&search_source=Entity&hybrid_search_source=Entity&hybrid_search_extra=%7B%22sourceType%22%3A%22answer%22%2C%22sourceId%22%3A3054501672%7D",target:"_blank",rel:"noopener noreferrer"},"虚拟链接",-1)),r[7]||(r[7]=d(" 传递信息，如何做微观的拥塞控制；编译器怎么 ")),r[8]||(r[8]=t("a",{href:"https://www.zhihu.com/search?q=parse&search_source=Entity&hybrid_search_source=Entity&hybrid_search_extra=%7B%22sourceType%22%3A%22answer%22%2C%22sourceId%22%3A3054501672%7D",target:"_blank",rel:"noopener noreferrer"},"parse",-1)),r[9]||(r[9]=d(" 出来 ir，如何对 ir 优化；分布式算法如何协调工作；")),r[10]||(r[10]=t("a",{href:"https://www.zhihu.com/search?q=%E6%B5%81%E5%BC%8F%E8%AE%A1%E7%AE%97&search_source=Entity&hybrid_search_source=Entity&hybrid_search_extra=%7B%22sourceType%22%3A%22answer%22%2C%22sourceId%22%3A3054501672%7D",target:"_blank",rel:"noopener noreferrer"},"流式计算",-1)),r[11]||(r[11]=d(" 里面 unbounded data 怎么做 ")),r[12]||(r[12]=t("a",{href:"https://www.zhihu.com/search?q=window%2Ftrigger&search_source=Entity&hybrid_search_source=Entity&hybrid_search_extra=%7B%22sourceType%22%3A%22answer%22%2C%22sourceId%22%3A3054501672%7D",target:"_blank",rel:"noopener noreferrer"},"window/trigger",-1)),r[13]||(r[13]=d("；")),n(l,{to:"/2%20%E7%AC%AC%E4%BA%8C%E5%A4%A7%E8%84%91/1%20%E8%8A%82%E7%82%B9/CS/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0.html"},{default:e(()=>r[4]||(r[4]=[d("机器学习")])),_:1}),r[14]||(r[14]=d(" 里面各种模型是如何拟合数据的，为什么需要不同的拟合方式；mysql 中事务怎么做，行锁怎么设计的；")),r[15]||(r[15]=t("a",{href:"https://www.zhihu.com/search?q=linux%20kernel&search_source=Entity&hybrid_search_source=Entity&hybrid_search_extra=%7B%22sourceType%22%3A%22answer%22%2C%22sourceId%22%3A3054501672%7D",target:"_blank",rel:"noopener noreferrer"},"linux kernel",-1)),r[16]||(r[16]=d(" 的进程调度怎么设计、")),r[17]||(r[17]=t("a",{href:"https://www.zhihu.com/search?q=%E5%BC%82%E6%AD%A5%20io&search_source=Entity&hybrid_search_source=Entity&hybrid_search_extra=%7B%22sourceType%22%3A%22answer%22%2C%22sourceId%22%3A3054501672%7D",target:"_blank",rel:"noopener noreferrer"},"异步 io",-1)),r[18]||(r[18]=d(" 怎么设计……"))]),r[50]||(r[50]=t("p",null,"有了这些视野之后，你要把它们从具体的领域中抽象成概念。",-1)),r[51]||(r[51]=t("p",null,[d('千万不要把自己的精力放在 "tcp 包头几个字节都是什么 "、"'),t("a",{href:"https://www.zhihu.com/search?q=c%2B%2B%2017&search_source=Entity&hybrid_search_source=Entity&hybrid_search_extra=%7B%22sourceType%22%3A%22answer%22%2C%22sourceId%22%3A3054501672%7D",target:"_blank",rel:"noopener noreferrer"},"c++ 17"),d(' 引入了什么 " 这种无聊的东西上。除非你决定把你的事业投入到上面。')],-1)),r[52]||(r[52]=t("p",null,[d("概念就是 "),t("a",{href:"https://www.zhihu.com/search?q=%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6&search_source=Entity&hybrid_search_source=Entity&hybrid_search_extra=%7B%22sourceType%22%3A%22answer%22%2C%22sourceId%22%3A3054501672%7D",target:"_blank",rel:"noopener noreferrer"},"计算机科学"),d(" 最精华的部分，你必须学会在不同的领域复用这些概念，这样你就是有 insight(洞察力、深刻理解) 的。")],-1)),r[53]||(r[53]=t("p",null,[d("比如你去写一个最简单的业务，你一定会遇到事务、parse 配置规则、"),t("a",{href:"https://www.zhihu.com/search?q=%E9%99%90%E6%B5%81%E6%8E%A7%E5%88%B6&search_source=Entity&hybrid_search_source=Entity&hybrid_search_extra=%7B%22sourceType%22%3A%22answer%22%2C%22sourceId%22%3A3054501672%7D",target:"_blank",rel:"noopener noreferrer"},"限流控制"),d("、调度，是否有一些策略可以采样训练模型自动优化……你能否把学到的概念，结合实际应用起来，这个才是工程师的意义所在。")],-1)),r[54]||(r[54]=t("p",null,"例如，理解了图论的核心概念后，你可能会在社交网络分析、交通路线优化、甚至是生物学中的蛋白质相互作用网络中看到相似的结构和问题。这种能力就体现了 insight。",-1)),t("p",null,[r[20]||(r[20]=d('什么时候能惊艳你的概念越来越少，到最后你看绝大部分东西的时候都能说出 " 就这 "，你就是合格的工程师了。 ')),n(l,{to:"/2%20%E7%AC%AC%E4%BA%8C%E5%A4%A7%E8%84%91/1%20%E8%8A%82%E7%82%B9/CS/%E7%BC%93%E5%AD%98.html"},{default:e(()=>r[19]||(r[19]=[d("缓存")])),_:1})]),r[55]||(r[55]=o('<h2 id="暴力" tabindex="-1"><a class="header-anchor" href="#暴力"><span>暴力</span></a></h2><ol><li>深度学习的&quot;矩阵乘法大法&quot;</li></ol><p>深度学习听起来很高大上，像是人工智能的终极形态。其实它的核心计算无非就是矩阵乘法的反复堆叠。训练神经网络时，你基本上就是在调整一堆参数（权重），让输出越来越接近目标值，而矩阵乘法正是实现这种参数调整的关键。某种程度上，深度学习就是&quot;大规模线性代数运算的艺术&quot;，并没有多少&quot;智能&quot;可言。要不怎么GPU（图形处理器）也能拿来训练神经网络呢？因为图形处理器的设计正好是用来加速矩阵运算的。</p><ol><li>TCP协议中的&quot;重传机制&quot;</li></ol><p>互联网最可靠的协议之一——TCP，被誉为保障网络传输稳定性的基石。它的魔力在于确保数据可靠传输，但其实它的实现手段相当粗暴。每当数据包发送出去，对方没有在规定时间内确认收到，TCP就会直接重传这份数据！没错，它就是这么简单粗暴——靠反复尝试，直到对方确实收到为止。用&quot;拿不到确认我就一直发&quot;的死磕态度，硬生生保障了网络的可靠性。</p><ol><li>图像去噪中的&quot;中值滤波&quot;</li></ol><p>图像处理里有种叫做&quot;中值滤波&quot;的技术，用来去除图像中的噪点。听名字感觉很玄乎，其实就是在图像的每个像素点附近找一圈邻居，把这些邻居的颜色值按大小排序，然后取个中间值替换掉当前像素。虽然看起来像是复杂的数学运算，但本质上不过是&quot;把周围人的意见平均一下&quot;的笨方法，却能大幅度提升图像的质量。</p><ol><li>AI游戏玩得好靠&quot;暴力穷举&quot;</li></ol><p>看过AI击败人类顶级围棋选手的新闻吗？很多AI其实是在海量的计算资源上靠&quot;暴力穷举&quot;找到了&quot;完美解法&quot;。例如蒙特卡洛树搜索，就是先模拟大量随机的下棋路径，从中统计哪些路径胜率更高。听起来是&quot;人工智能&quot;的成果，但更像是&quot;体力活&quot;——用海量的数据堆出来的成功率。AI表面上是高手，背后却是用无数机器一起&quot;傻干&quot;。</p><ol><li>冷启动技术——缓存预热</li></ol><p>互联网公司总会说&quot;优化了冷启动时间&quot;，让应用打开速度更快。看起来很高级的样子，实质上很多时候就是靠&quot;缓存预热&quot;。开发者提前把用户最可能需要的数据预先加载进内存，让它随时待命。当用户真正启动应用时，数据已经在那里等着了，就给人一种&quot;启动超快&quot;的错觉。相当于先悄悄做了准备工作，表面上看起来像&quot;技术升级&quot;。</p><ol><li>黑客攻击中的&quot;字典攻击&quot;</li></ol><p>很多黑客攻击听起来高深莫测，比如破解密码的技术。但最常见的&quot;字典攻击&quot;其实特别直接，就是准备好一堆常见的密码，像&quot;123456&quot;，&quot;password&quot;，&quot;qwerty&quot;等，逐个尝试登录。虽然听起来像是初级黑客才会用的方法，却依然有很多成功的案例。人们太容易用弱密码，所以这种简单&quot;蛮力破解&quot;往往比复杂算法还要有效。</p><p>这些技术之所以高端，是因为它们在看似简单的原理上做了极致的优化和应用，最终达到令人印象深刻的效果。可以说，这些暴力原理+智慧巧思的组合才是真正的魔法所在。</p><h2 id="计算机领域中文词汇表" tabindex="-1"><a class="header-anchor" href="#计算机领域中文词汇表"><span>计算机领域中文词汇表</span></a></h2><table><thead><tr><th>字母</th><th>术语</th><th>含义</th></tr></thead><tbody><tr><td>A</td><td>算法</td><td>解决问题的一系列计算步骤</td></tr><tr><td>A</td><td>应用程序接口</td><td>允许软件程序相互交互的规则集合</td></tr><tr><td>B</td><td>带宽</td><td>网络传输数据的能力</td></tr><tr><td>B</td><td>二进制</td><td>计算机信息的最基本表示单位</td></tr><tr><td>B</td><td>编译器</td><td>将高级编程语言转换成机器语言的软件</td></tr><tr><td>C</td><td>缓存</td><td>临时存储频繁访问数据以加快访问速度的技术</td></tr><tr><td>C</td><td>云计算</td><td>通过互联网提供计算资源和数据的服务</td></tr><tr><td>C</td><td>CSS</td><td>用于定义网页样式的语言</td></tr><tr><td>D</td><td>数据库</td><td>用于存储和管理数据的系统</td></tr><tr><td>D</td><td>域名系统</td><td>将域名转换为IP地址的系统</td></tr><tr><td>E</td><td>加密</td><td>保护信息免受未授权访问的技术</td></tr><tr><td>F</td><td>防火墙</td><td>保护计算机网络安全的系统</td></tr><tr><td>F</td><td>前端</td><td>用户与之交互的软件的界面部分</td></tr><tr><td>G</td><td>图形用户界面</td><td>允许用户通过图形方式与程序交互的接口</td></tr><tr><td>H</td><td>HTML</td><td>用于创建网页内容的标记语言</td></tr><tr><td>H</td><td>HTTP</td><td>用于传输网页数据的协议</td></tr><tr><td>I</td><td>IP地址</td><td>网络中设备的数字标识</td></tr><tr><td>J</td><td>Java</td><td>广泛使用的编程语言</td></tr><tr><td>J</td><td>JSON</td><td>数据交换格式</td></tr><tr><td>K</td><td>客户端</td><td>访问服务器资源的计算机或软件</td></tr><tr><td>L</td><td>逻辑</td><td>决定计算机操作的基本原理</td></tr><tr><td>M</td><td>内存</td><td>存储程序和数据的硬件</td></tr><tr><td>N</td><td>网络</td><td>连接多台计算机以共享资源的系统</td></tr><tr><td>O</td><td>操作系统</td><td>管理计算机硬件与软件资源的软件</td></tr><tr><td>P</td><td>协议</td><td>规定数据传输格式和速率的标准</td></tr><tr><td>Q</td><td>请求</td><td>从网络服务获取数据或服务的行为</td></tr><tr><td>R</td><td>路由器</td><td>将数据从一个网络传输到另一个的设备</td></tr><tr><td>S</td><td>服务器</td><td>提供数据、资源、服务的计算机或程序</td></tr><tr><td>S</td><td>SQL</td><td>用于管理数据库系统的编程语言</td></tr><tr><td>T</td><td>TCP/IP</td><td>网络通信的基本协议集</td></tr><tr><td>U</td><td>用户界面</td><td>用户与计算机系统交互的部分</td></tr><tr><td>V</td><td>虚拟机</td><td>在软件中模拟的计算机系统</td></tr><tr><td>W</td><td>网页</td><td>通过浏览器访问的信息资源</td></tr><tr><td>X</td><td>XML</td><td>标记语言，用于数据的存储和传输</td></tr><tr><td>Y</td><td>阴影 IT</td><td>未经组织正式批准的信息技术系统或解决方案</td></tr><tr><td>Z</td><td>压缩</td><td>减小文件或数据大小的过程</td></tr><tr><td>...</td><td>...</td><td>...</td></tr><tr><td><mark>字母</mark></td><td>术语</td><td>含义</td></tr></tbody></table><h3 id="cs-之路" tabindex="-1"><a class="header-anchor" href="#cs-之路"><span>CS 之路</span></a></h3><p><a href="https://csdiy.wiki/%E5%A5%BD%E4%B9%A6%E6%8E%A8%E8%8D%90/" target="_blank" rel="noopener noreferrer">北大CS自学指南 (csdiy.wiki)</a></p>',18)),t("table",null,[r[45]||(r[45]=t("thead",null,[t("tr",null,[t("th",null,"主题"),t("th",null,"子主题"),t("th")])],-1)),t("tbody",null,[r[24]||(r[24]=t("tr",null,[t("td",null,"数学进阶"),t("td",null,[d("- "),t("br"),d("- "),t("br"),d("- "),t("br"),d("- "),t("br"),d("- "),t("br"),d("-")]),t("td")],-1)),r[25]||(r[25]=t("tr",null,[t("td",null,"编程入门"),t("td",null,[d("- "),t("br"),d("- "),t("br"),d("- "),t("br"),d("- "),t("br"),d("- "),t("br"),d("- "),t("br"),d("- "),t("br"),d("-")]),t("td")],-1)),r[26]||(r[26]=t("tr",null,[t("td",null,"电子基础"),t("td",null,[d("- "),t("br"),d("- "),t("br"),d("-")]),t("td")],-1)),r[27]||(r[27]=t("tr",null,[t("td",null,"数据结构与算法"),t("td",null,[d("- "),t("br"),d("- "),t("br"),d("- "),t("br"),d("- "),t("br"),d("-")]),t("td")],-1)),t("tr",null,[t("td",null,[n(l,{to:"/2%20%E7%AC%AC%E4%BA%8C%E5%A4%A7%E8%84%91/1%20%E8%8A%82%E7%82%B9/CS/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B@.html"},{default:e(()=>r[21]||(r[21]=[d("软件工程@")])),_:1})]),r[22]||(r[22]=t("td",null,[d("- "),t("br"),d("- "),t("br"),d("-")],-1)),r[23]||(r[23]=t("td",null,null,-1))]),r[28]||(r[28]=t("tr",null,[t("td",null,"计算机系统基础"),t("td",null,[d("- "),t("br"),d("-")]),t("td")],-1)),r[29]||(r[29]=t("tr",null,[t("td",null,"体系结构"),t("td",null,[d("- "),t("br"),d("- "),t("br"),d("- "),t("br"),d("-")]),t("td")],-1)),r[30]||(r[30]=t("tr",null,[t("td",null,"操作系统"),t("td",null,[d("- "),t("br"),d("- "),t("br"),d("- "),t("br"),d("-")]),t("td")],-1)),r[31]||(r[31]=t("tr",null,[t("td",null,"并行与分布式系统"),t("td",null,[d("- "),t("br"),d("-")]),t("td")],-1)),r[32]||(r[32]=t("tr",null,[t("td",null,"计算机系统安全"),t("td",null,[d("- "),t("br"),d("- "),t("br"),d("- "),t("br"),d("- "),t("br"),d("- "),t("br"),d("-")]),t("td")],-1)),r[33]||(r[33]=t("tr",null,[t("td",null,"计算机网络"),t("td",null,[d("- "),t("br"),d("- "),t("br"),d("-")]),t("td")],-1)),r[34]||(r[34]=t("tr",null,[t("td",null,"数据库系统"),t("td",null,[d("- "),t("br"),d("- "),t("br"),d("- "),t("br"),d("- "),t("br"),d("-")]),t("td")],-1)),r[35]||(r[35]=t("tr",null,[t("td",null,"编译原理"),t("td",null,[d("- "),t("br"),d("- "),t("br"),d("- "),t("br"),d("-")]),t("td")],-1)),r[36]||(r[36]=t("tr",null,[t("td",null,"编程语言设计与分析"),t("td",null,[d("- "),t("br"),d("- "),t("br"),d("- "),t("br"),d("-")]),t("td")],-1)),r[37]||(r[37]=t("tr",null,[t("td",null,"计算机图形学"),t("td",null,[d("- "),t("br"),d("- "),t("br"),d("- "),t("br"),d("- "),t("br"),d("- "),t("br"),d("-")]),t("td")],-1)),r[38]||(r[38]=t("tr",null,[t("td",null,"Web开发"),t("td",null,[d("- "),t("br"),d("- "),t("br"),d("- "),t("br"),d("-")]),t("td")],-1)),r[39]||(r[39]=t("tr",null,[t("td",null,"数据科学"),t("td",null,"-"),t("td")],-1)),r[40]||(r[40]=t("tr",null,[t("td",null,"人工智能"),t("td",null,[d("- "),t("br"),d("-")]),t("td")],-1)),r[41]||(r[41]=t("tr",null,[t("td",null,"机器学习"),t("td",null,[d("- "),t("br"),d("- "),t("br"),d("-")]),t("td")],-1)),r[42]||(r[42]=t("tr",null,[t("td",null,"机器学习系统"),t("td",null,[d("- "),t("br"),d("- "),t("br"),d("-")]),t("td")],-1)),r[43]||(r[43]=t("tr",null,[t("td",null,"深度学习"),t("td",null,[d("- "),t("br"),d("- "),t("br"),d("- "),t("br"),d("- "),t("br"),d("- "),t("br"),d("- "),t("br"),d("-")]),t("td")],-1)),r[44]||(r[44]=t("tr",null,[t("td",null,"机器学习进阶"),t("td",null,[d("- "),t("br"),d("- "),t("br"),d("- "),t("br"),d("- "),t("br"),d("-")]),t("td")],-1))])]),r[56]||(r[56]=o('<p>计算机基础学习顺序是什么？- 编程指北的回答 - 知乎<br> https://www.zhihu.com/question/473267862/answer/2009648056</p><p>如果让你重新开始学计算机，你的学习路线会怎么选择? - 知乎<br> https://www.zhihu.com/question/492545174/answer/2482876550</p><h3 id="思维模型" tabindex="-1"><a class="header-anchor" href="#思维模型"><span>思维模型</span></a></h3><p>计算机思维对我个人生活和做事影响还是蛮大的，编程能力最终的体现，仍然是计算思维的运用的能力，关于计算思维有很多类，下面是我控制chatgpt，整理出一些我觉得比较重要的思维方法，其中我认为非常典型的，在我看来包括递归、迭代、并行、状态机、缓存、贪心、分层、抽象</p><ol><li>递归思维（Recursive Thinking）递归是一种解决问题的方法，特别适用于自相似结构或问题的分解。递归思维强调将问题简化为更小的同类问题，直到达到可以直接求解的基础情况。</li><li>迭代思维（Iterative Thinking）通过重复执行一个步骤序列来逼近解决方案。迭代思维在循环和优化算法中应用广泛，允许逐步改进或寻找最优解。</li><li>并行思维（Parallel Thinking）这是对多个问题同时处理的思考方式，强调任务分割、同步和协调。并行思维在多线程、多进程或分布式计算中非常重要。</li><li>状态机思维（State Machine Thinking）用于处理有状态的系统或问题，将问题视为一系列状态转换的过程。常用于控制系统、协议设计和游戏编程等领域。</li><li>缓存思维（Caching Thinking）缓存思维关注如何通过存储中间结果，避免重复计算或提高效率。在大规模系统中，缓存优化可以大大提升性能。</li><li>贪心思维（Greedy Thinking）在每一步都选择当前最优解，期望最终获得全局最优解。虽然不总能找到最优解，但在某些场景下（如贪心算法），这种思维是高效的。</li><li>图论思维（Graph Theory Thinking）在面对节点和边的关系时，使用图论思维可以帮助解决网络、路径规划、拓扑结构等问题。广泛用于社交网络分析、路径优化和电路设计。</li><li>模糊思维（Fuzzy Thinking）计算机科学中的模糊逻辑用于处理不确定性问题，这种思维方式可以帮助在信息不完整或模糊的情况下作出合理的判断。</li><li>最优化思维（Optimization Thinking）最优化思维着眼于在有限资源下找到最优或次优的解决方案。这在资源分配、路径选择等问题中非常关键。</li><li>局部最优思维（Local Optimization Thinking）在面对复杂问题时，局部最优思维尝试先在局部区域找到较好的解决方案，然后逐步扩展或组合以求全局最优。这在爬山算法、局部搜索算法中尤为常见。</li><li>分层思维（Layered Thinking）分层思维的本质是将复杂的系统或问题按照功能、结构或逻辑划分为不同层次，每一层只关注其具体职责并与相邻层次进行交互。这种思维方式让问题更易于管理、维护和扩展。12. 抽象思维（Abstraction Thinking）抽象思维是忽略细节，专注于事物的本质特征和核心功能的思维方式。它通过提炼出问题的核心要素，屏蔽复杂实现，使得问题更加简洁易解。</li></ol>',5))])}const m=i(b,[["render",E],["__file","CS@.html.vue"]]),C=JSON.parse('{"path":"/2%20%E7%AC%AC%E4%BA%8C%E5%A4%A7%E8%84%91/1%20%E8%8A%82%E7%82%B9/CS/CS@.html","title":"","lang":"zh-CN","frontmatter":{"draw":null,"aliases":null,"tags":null,"date created":"2024-05-19T00:00:00.000Z","date modified":"2024-11-12T00:00:00.000Z","linter-yaml-title-alias":"计算机领域中文词汇表","description":"外表高大上，看着是宾利的壳，其实核心动力是几个老鼠在壳里面蹬三轮呢。只要你干一两年基本都懂了。 说：怕什么真理无穷，进一寸有进一寸的欢喜。 CS 心法 任何活儿，无论是存储、网络、ai infra、编译器后端、cuda，等等，都非常简单。外表高大上，看着是宾利的壳，其实核心动力是几个老鼠在壳里面蹬三轮呢。只要你干一两年基本都懂了。 你能把活儿干出花来，...","head":[["meta",{"property":"og:url","content":"https://vuepress-theme-hope-docs-demo.netlify.app/2%20%E7%AC%AC%E4%BA%8C%E5%A4%A7%E8%84%91/1%20%E8%8A%82%E7%82%B9/CS/CS@.html"}],["meta",{"property":"og:site_name","content":"转了码的刘公子"}],["meta",{"property":"og:description","content":"外表高大上，看着是宾利的壳，其实核心动力是几个老鼠在壳里面蹬三轮呢。只要你干一两年基本都懂了。 说：怕什么真理无穷，进一寸有进一寸的欢喜。 CS 心法 任何活儿，无论是存储、网络、ai infra、编译器后端、cuda，等等，都非常简单。外表高大上，看着是宾利的壳，其实核心动力是几个老鼠在壳里面蹬三轮呢。只要你干一两年基本都懂了。 你能把活儿干出花来，..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-12-11T14:48:27.000Z"}],["meta",{"property":"article:modified_time","content":"2024-12-11T14:48:27.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-12-11T14:48:27.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"转了码的刘公子\\",\\"url\\":\\"https://mister-hope.com\\"}]}"]]},"headers":[{"level":3,"title":"CS 心法","slug":"cs-心法","link":"#cs-心法","children":[]},{"level":2,"title":"暴力","slug":"暴力","link":"#暴力","children":[]},{"level":2,"title":"计算机领域中文词汇表","slug":"计算机领域中文词汇表","link":"#计算机领域中文词汇表","children":[{"level":3,"title":"CS 之路","slug":"cs-之路","link":"#cs-之路","children":[]},{"level":3,"title":"思维模型","slug":"思维模型","link":"#思维模型","children":[]}]}],"git":{"createdTime":1732465042000,"updatedTime":1733928507000,"contributors":[{"name":"Luis","email":"liuysh20@gmail.com","commits":2}]},"readingTime":{"minutes":12.18,"words":3653},"filePathRelative":"2 第二大脑/1 节点/CS/CS@.md","localizedDate":"2024年11月25日","autoDesc":true}');export{m as comp,C as data};
