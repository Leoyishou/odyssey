import{_ as e}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as o,f as i,o as a}from"./app-DokaGNO4.js";const l={};function r(n,t){return a(),o("div",null,t[0]||(t[0]=[i("<ul><li>CPU密集型任务： <ul><li>公式：线程数 = CPU核心数 + 1</li><li>理由：CPU密集型任务主要使用CPU计算资源，线程数略多于CPU核心数可以保证CPU在等待线程切换时还有额外的线程可以执行，从而保持CPU的高效利用。</li></ul></li><li>IO密集型任务： <ul><li>公式：线程数 = CPU核心数 * (1 + 等待时间/计算时间)</li><li>另一个常用的简化公式：线程数 = CPU核心数 * 2</li><li>理由：IO密集型任务花费大量时间在等待IO操作完成，此时CPU是空闲的，因此可以利用更多的线程来提高CPU利用率。</li></ul></li></ul><blockquote><p>[!最佳实践]<br> 摸鱼指数越高的活，CPU 数量的系数就可以越大，让这些 CPU 频繁切换，不浪费资源</p></blockquote>",2)]))}const m=e(l,[["render",r],["__file","线程池.html.vue"]]),c=JSON.parse('{"path":"/2%20%E7%AC%AC%E4%BA%8C%E5%A4%A7%E8%84%91/1%20%E8%8A%82%E7%82%B9/CS/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/Java/%E7%BA%BF%E7%A8%8B%E6%B1%A0.html","title":"线程池","lang":"zh-CN","frontmatter":{"draw":null,"tags":[],"title":"线程池","date created":"2024-09-20T00:00:00.000Z","date modified":"2024-11-12T00:00:00.000Z","description":"CPU密集型任务： 公式：线程数 = CPU核心数 + 1 理由：CPU密集型任务主要使用CPU计算资源，线程数略多于CPU核心数可以保证CPU在等待线程切换时还有额外的线程可以执行，从而保持CPU的高效利用。 IO密集型任务： 公式：线程数 = CPU核心数 * (1 + 等待时间/计算时间) 另一个常用的简化公式：线程数 = CPU核心数 * 2 ...","head":[["meta",{"property":"og:url","content":"https://vuepress-theme-hope-docs-demo.netlify.app/2%20%E7%AC%AC%E4%BA%8C%E5%A4%A7%E8%84%91/1%20%E8%8A%82%E7%82%B9/CS/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/Java/%E7%BA%BF%E7%A8%8B%E6%B1%A0.html"}],["meta",{"property":"og:site_name","content":"转了码的刘公子"}],["meta",{"property":"og:title","content":"线程池"}],["meta",{"property":"og:description","content":"CPU密集型任务： 公式：线程数 = CPU核心数 + 1 理由：CPU密集型任务主要使用CPU计算资源，线程数略多于CPU核心数可以保证CPU在等待线程切换时还有额外的线程可以执行，从而保持CPU的高效利用。 IO密集型任务： 公式：线程数 = CPU核心数 * (1 + 等待时间/计算时间) 另一个常用的简化公式：线程数 = CPU核心数 * 2 ..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-11-24T16:17:22.000Z"}],["meta",{"property":"article:modified_time","content":"2024-11-24T16:17:22.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"线程池\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-11-24T16:17:22.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"转了码的刘公子\\",\\"url\\":\\"https://mister-hope.com\\"}]}"]]},"headers":[],"git":{"createdTime":1732465042000,"updatedTime":1732465042000,"contributors":[{"name":"Luis","email":"liuysh20@gmail.com","commits":1}]},"readingTime":{"minutes":0.73,"words":219},"filePathRelative":"2 第二大脑/1 节点/CS/编程语言/Java/线程池.md","localizedDate":"2024年11月25日","autoDesc":true}');export{m as comp,c as data};
