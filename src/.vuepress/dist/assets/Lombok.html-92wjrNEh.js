import{_ as r}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as d,f as a,a as t,d as i,e as n,b as o,r as c,o as s}from"./app-DokaGNO4.js";const m={};function p(h,e){const l=c("RouteLink");return s(),d("div",null,[e[4]||(e[4]=a('<h2 id="作用" tabindex="-1"><a class="header-anchor" href="#作用"><span>作用</span></a></h2><p><code>@Data</code> 注解相当于同时使用了以下注解：</p><ol><li><code>@Getter</code>: 为所有字段生成 getter 方法</li><li><code>@Setter</code>: 为所有非 final 字段生成 setter 方法</li><li><code>@ToString</code>: 生成 toString() 方法</li><li><code>@EqualsAndHashCode</code>: 生成 equals() 和 hashCode() 方法</li><li><code>@RequiredArgsConstructor</code>: 生成一个包含 final 或 @NonNull 字段的构造方法</li></ol><p>关于 <code>equals()</code> 和 <code>hashCode()</code> 方法：</p><ol><li>生成的 <code>equals()</code> 方法会比较所有非静态、非瞬态字段的值。</li><li>生成的 <code>hashCode()</code> 方法会使用所有非静态、非瞬态字段来计算哈希值。</li></ol><h2 id="使用步骤" tabindex="-1"><a class="header-anchor" href="#使用步骤"><span>使用步骤</span></a></h2>',6)),t("ol",null,[e[2]||(e[2]=t("li",null,"IDE 中安装插件",-1)),t("li",null,[i(l,{to:"/2%20%E7%AC%AC%E4%BA%8C%E5%A4%A7%E8%84%91/1%20%E8%8A%82%E7%82%B9/CS/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/Java/Maven.html"},{default:n(()=>e[0]||(e[0]=[o("Maven")])),_:1}),e[1]||(e[1]=o("中导入依赖"))]),e[3]||(e[3]=t("li",null,[o("使用"),t("code",null,"@Getter"),o("0等注解")],-1))]),e[5]||(e[5]=a('<h2 id="注意点" tabindex="-1"><a class="header-anchor" href="#注意点"><span>注意点</span></a></h2><ol><li>如果类继承了另一个类，<code>@Getter</code>1 的 <code>@Getter</code>2 和 <code>@Getter</code>3 方法不会考虑从父类继承的属性的。在这种情况下，你可能需要显式地使用 <code>@Getter</code>4 来包含父类字段。</li><li>对于某些特殊情况，自动生成的 <code>@Getter</code>5 和 <code>@Getter</code>6 可能不适合。例如，如果你的类有循环引用，或者某些字段不应该参与比较。在这些情况下，你可能需要自定义这些方法。</li><li>如果你只想生成 <code>@Getter</code>7 和 <code>@Getter</code>8 方法而不需要其他 <code>@Getter</code>9 提供的功能，可以直接使用 <code>@Setter</code>0 注解。</li><li>使用 <code>@Setter</code>1 时要小心，因为它会为所有字段生成 setter，这可能会破坏对象的不可变性。如果你想创建不可变对象，考虑使用 <code>@Setter</code>2 代替 <code>@Setter</code>3。</li></ol>',2))])}const E=r(m,[["render",p],["__file","Lombok.html.vue"]]),C=JSON.parse('{"path":"/2%20%E7%AC%AC%E4%BA%8C%E5%A4%A7%E8%84%91/1%20%E8%8A%82%E7%82%B9/CS/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/Java/Lombok.html","title":"Lombok","lang":"zh-CN","frontmatter":{"draw":null,"tags":[],"title":"Lombok","date created":"2024-09-09T00:00:00.000Z","date modified":"2024-11-12T00:00:00.000Z","description":"作用 @Data 注解相当于同时使用了以下注解： @Getter: 为所有字段生成 getter 方法 @Setter: 为所有非 final 字段生成 setter 方法 @ToString: 生成 toString() 方法 @EqualsAndHashCode: 生成 equals() 和 hashCode() 方法 @RequiredArgsC...","head":[["meta",{"property":"og:url","content":"https://vuepress-theme-hope-docs-demo.netlify.app/2%20%E7%AC%AC%E4%BA%8C%E5%A4%A7%E8%84%91/1%20%E8%8A%82%E7%82%B9/CS/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/Java/Lombok.html"}],["meta",{"property":"og:site_name","content":"转了码的刘公子"}],["meta",{"property":"og:title","content":"Lombok"}],["meta",{"property":"og:description","content":"作用 @Data 注解相当于同时使用了以下注解： @Getter: 为所有字段生成 getter 方法 @Setter: 为所有非 final 字段生成 setter 方法 @ToString: 生成 toString() 方法 @EqualsAndHashCode: 生成 equals() 和 hashCode() 方法 @RequiredArgsC..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-11-24T17:46:49.000Z"}],["meta",{"property":"article:modified_time","content":"2024-11-24T17:46:49.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Lombok\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-11-24T17:46:49.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"转了码的刘公子\\",\\"url\\":\\"https://mister-hope.com\\"}]}"]]},"headers":[{"level":2,"title":"作用","slug":"作用","link":"#作用","children":[]},{"level":2,"title":"使用步骤","slug":"使用步骤","link":"#使用步骤","children":[]},{"level":2,"title":"注意点","slug":"注意点","link":"#注意点","children":[]}],"git":{"createdTime":1732465042000,"updatedTime":1732470409000,"contributors":[{"name":"Luis","email":"liuysh20@gmail.com","commits":2}]},"readingTime":{"minutes":1.32,"words":395},"filePathRelative":"2 第二大脑/1 节点/CS/编程语言/Java/Lombok.md","localizedDate":"2024年11月25日","autoDesc":true}');export{E as comp,C as data};
