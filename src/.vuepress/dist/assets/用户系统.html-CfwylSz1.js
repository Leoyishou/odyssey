import{_ as i}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as n,a as e,b as l,d as r,e as a,f as s,r as m,o as u}from"./app-DokaGNO4.js";const p={};function d(E,t){const o=m("RouteLink");return u(),n("div",null,[e("ol",null,[t[7]||(t[7]=e("li",null,[e("strong",null,"用户认证与授权"),l("： "),e("ul",null,[e("li",null,"首先，建立用户认证系统，支持注册、登录、密码管理等功能。可以使用OAuth、JWT等主流认证技术。"),e("li",null,"实现用户角色和权限管理，定义不同用户的访问权限，确保用户只能访问自己拥有的数据。")])],-1)),e("li",null,[t[5]||(t[5]=e("strong",null,"数据隔离",-1)),t[6]||(t[6]=l("： ")),e("ul",null,[t[3]||(t[3]=e("li",null,[e("strong",null,"表级隔离"),l("：可以为每个用户创建独立的数据表，但这种方法通常会导致数据库膨胀，不适合大规模用户。")],-1)),t[4]||(t[4]=e("li",null,[e("strong",null,"行级隔离"),l("：在数据表中增加用户ID字段，所有查询操作都需要通过用户ID来过滤，实现数据隔离。这种方法比较高效，适合多数场景。")],-1)),e("li",null,[e("strong",null,[r(o,{to:"/1%20%E4%B8%80%E5%88%87%E7%9A%86%E9%A1%B9%E7%9B%AE/Q3%EF%BC%9AViva/viva/schema.html"},{default:a(()=>t[0]||(t[0]=[l("schema")])),_:1}),t[1]||(t[1]=l("级隔离"))]),t[2]||(t[2]=l("：每个用户对应一个独立的数据库Schema，这样可以做到更彻底的隔离，但会增加数据库管理的复杂性。"))])])]),t[8]||(t[8]=s("<li><strong>接口设计</strong>： <ul><li>在开发API接口时，确保所有请求都要经过权限校验，根据用户身份返回相应的数据。</li><li>使用中间件进行用户身份验证，保证在用户未通过身份认证或未授权的情况下无法访问系统资源。</li></ul></li><li><strong>数据安全</strong>： <ul><li>对敏感数据进行加密存储，避免数据泄露风险。</li><li>确保传输层安全，采用HTTPS进行通信，避免中间人攻击。</li></ul></li><li><strong>监控与审计</strong>： <ul><li>实现日志记录和监控，追踪用户行为，方便检测权限滥用或潜在的安全问题。</li></ul></li>",3))])])}const A=i(p,[["render",d],["__file","用户系统.html.vue"]]),v=JSON.parse('{"path":"/1%20%E4%B8%80%E5%88%87%E7%9A%86%E9%A1%B9%E7%9B%AE/Q3%EF%BC%9AViva/viva/%E7%94%A8%E6%88%B7%E7%B3%BB%E7%BB%9F.html","title":"用户系统","lang":"zh-CN","frontmatter":{"draw":null,"tags":[],"title":"用户系统","date created":"2024-10-01T00:00:00.000Z","date modified":"2024-11-12T00:00:00.000Z","description":"用户认证与授权： 首先，建立用户认证系统，支持注册、登录、密码管理等功能。可以使用OAuth、JWT等主流认证技术。 实现用户角色和权限管理，定义不同用户的访问权限，确保用户只能访问自己拥有的数据。 数据隔离： 表级隔离：可以为每个用户创建独立的数据表，但这种方法通常会导致数据库膨胀，不适合大规模用户。 行级隔离：在数据表中增加用户ID字段，所有查询操...","head":[["meta",{"property":"og:url","content":"https://vuepress-theme-hope-docs-demo.netlify.app/1%20%E4%B8%80%E5%88%87%E7%9A%86%E9%A1%B9%E7%9B%AE/Q3%EF%BC%9AViva/viva/%E7%94%A8%E6%88%B7%E7%B3%BB%E7%BB%9F.html"}],["meta",{"property":"og:site_name","content":"转了码的刘公子"}],["meta",{"property":"og:title","content":"用户系统"}],["meta",{"property":"og:description","content":"用户认证与授权： 首先，建立用户认证系统，支持注册、登录、密码管理等功能。可以使用OAuth、JWT等主流认证技术。 实现用户角色和权限管理，定义不同用户的访问权限，确保用户只能访问自己拥有的数据。 数据隔离： 表级隔离：可以为每个用户创建独立的数据表，但这种方法通常会导致数据库膨胀，不适合大规模用户。 行级隔离：在数据表中增加用户ID字段，所有查询操..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-11-24T16:17:22.000Z"}],["meta",{"property":"article:modified_time","content":"2024-11-24T16:17:22.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"用户系统\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-11-24T16:17:22.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"转了码的刘公子\\",\\"url\\":\\"https://mister-hope.com\\"}]}"]]},"headers":[],"git":{"createdTime":1732465042000,"updatedTime":1732465042000,"contributors":[{"name":"Luis","email":"liuysh20@gmail.com","commits":1}]},"readingTime":{"minutes":1.35,"words":405},"filePathRelative":"1 一切皆项目/Q3：Viva/viva/用户系统.md","localizedDate":"2024年11月25日","autoDesc":true}');export{A as comp,v as data};
