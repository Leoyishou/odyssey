import{_ as o}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as t,f as l,o as i}from"./app-DokaGNO4.js";const c={};function r(a,e){return i(),t("div",null,e[0]||(e[0]=[l('<p>Docker Compose 是一个用于定义和运行多容器 [[docker]] 应用程序的工具。</p><ul><li>是 Docker 的补充工具</li><li>用于管理多个容器</li><li>使用 <code>docker-compose.yml</code> 定义服务</li></ul><p>这是一个Docker构建过程的日志，主要完成了以下几个关键步骤：</p><ol><li>基础环境设置：</li></ol><ul><li>使用 <code>continuumio/miniconda3:latest</code> 作为基础镜像</li><li>设置工作目录为 <code>/app</code></li></ul><ol start="2"><li>系统依赖安装：</li></ol><ul><li>更新apt包列表</li><li>安装了一些必要的系统依赖： <ul><li>pkg-config</li><li>default-libmysqlclient-dev</li><li>build-essential</li></ul></li><li>这些是编译和运行某些Python包所必需的</li></ul><ol start="3"><li>Conda环境配置：</li></ol><ul><li>复制 <code>environment.yml</code> 文件到容器</li><li>创建了一个名为 &quot;viva&quot; 的新conda环境</li><li>根据yml文件安装了大量Python包，主要包括： <ul><li>FastAPI 和 Uvicorn (Web框架和服务器)</li><li>SQLAlchemy 和 psycopg2 (数据库相关)</li><li>Anthropic、OpenAI (AI相关SDK)</li><li>LangChain (大语言模型框架)</li><li>Pandas, NumPy (数据处理)</li><li>Matplotlib (数据可视化)</li><li>Spacy (自然语言处理)</li><li>其他工具包如python-dotenv、python-multipart等</li></ul></li></ul><ol start="4"><li>Shell配置：</li></ol><ul><li>设置默认shell为conda环境中的bash，确保后续命令在conda环境中执行</li></ul><p>整个过程是在构建一个包含完整数据科学和AI开发环境的Docker容器。这个环境似乎是为了运行一个结合了数据库操作、AI模型调用和Web服务的应用程序。构建过程中遇到了一些废弃警告，但整体构建是成功的。</p>',12)]))}const m=o(c,[["render",r],["__file","docker compose.html.vue"]]),d=JSON.parse('{"path":"/2%20%E7%AC%AC%E4%BA%8C%E5%A4%A7%E8%84%91/1%20%E8%8A%82%E7%82%B9/CS/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/%E4%BA%91%E5%8E%9F%E7%94%9F/docker%20compose.html","title":"docker compose","lang":"zh-CN","frontmatter":{"draw":null,"tags":[],"title":"docker compose","date created":"2024-07-20T00:00:00.000Z","date modified":"2024-11-12T00:00:00.000Z","description":"Docker Compose 是一个用于定义和运行多容器 [[docker]] 应用程序的工具。 是 Docker 的补充工具 用于管理多个容器 使用 docker-compose.yml 定义服务 这是一个Docker构建过程的日志，主要完成了以下几个关键步骤： 基础环境设置： 使用 continuumio/miniconda3:latest 作为基...","head":[["meta",{"property":"og:url","content":"https://vuepress-theme-hope-docs-demo.netlify.app/2%20%E7%AC%AC%E4%BA%8C%E5%A4%A7%E8%84%91/1%20%E8%8A%82%E7%82%B9/CS/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/%E4%BA%91%E5%8E%9F%E7%94%9F/docker%20compose.html"}],["meta",{"property":"og:site_name","content":"转了码的刘公子"}],["meta",{"property":"og:title","content":"docker compose"}],["meta",{"property":"og:description","content":"Docker Compose 是一个用于定义和运行多容器 [[docker]] 应用程序的工具。 是 Docker 的补充工具 用于管理多个容器 使用 docker-compose.yml 定义服务 这是一个Docker构建过程的日志，主要完成了以下几个关键步骤： 基础环境设置： 使用 continuumio/miniconda3:latest 作为基..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-11-24T16:17:22.000Z"}],["meta",{"property":"article:modified_time","content":"2024-11-24T16:17:22.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"docker compose\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-11-24T16:17:22.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"转了码的刘公子\\",\\"url\\":\\"https://mister-hope.com\\"}]}"]]},"headers":[],"git":{"createdTime":1732465042000,"updatedTime":1732465042000,"contributors":[{"name":"Luis","email":"liuysh20@gmail.com","commits":1}]},"readingTime":{"minutes":1.26,"words":379},"filePathRelative":"2 第二大脑/1 节点/CS/操作系统/云原生/docker compose.md","localizedDate":"2024年11月25日","autoDesc":true}');export{m as comp,d as data};
